[{"tailPos":3120,"headPos":3104,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card s * card t ≤ multiplicativeEnergy s t"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card (s ×ˢ t) ≤ multiplicativeEnergy s t"],"content":"← card_product"},{"tailPos":3121,"headPos":3120,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card (s ×ˢ t) ≤ multiplicativeEnergy s t"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card (s ×ˢ t) ≤ multiplicativeEnergy s t"],"content":"]"},{"tailPos":3121,"headPos":3100,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card s * card t ≤ multiplicativeEnergy s t"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card (s ×ˢ t) ≤ multiplicativeEnergy s t"],"content":"rw [← card_product]"},{"tailPos":3417,"headPos":3294,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ ∀ (a : α × α),\n    a ∈ s ×ˢ t →\n      (fun x => ((x.fst, x.fst), x.snd, x.snd)) a ∈\n        filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ((s ×ˢ s) ×ˢ t ×ˢ t)"],"goalsAfter":[],"content":"simp only [ ← and_imp, mem_product, and_imp, Prod.forall, mem_filter,\n        and_self, and_true, imp_self, implies_true]"},{"tailPos":3197,"headPos":3195,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ ∀ (a : α × α),\n    a ∈ s ×ˢ t →\n      (fun x => ((x.fst, x.fst), x.snd, x.snd)) a ∈\n        filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ((s ×ˢ s) ×ˢ t ×ˢ t)"],"goalsAfter":[],"content":"by"},{"tailPos":3417,"headPos":3195,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ ∀ (a : α × α),\n    a ∈ s ×ˢ t →\n      (fun x => ((x.fst, x.fst), x.snd, x.snd)) a ∈\n        filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ((s ×ˢ s) ×ˢ t ×ˢ t)"],"goalsAfter":[],"content":"by\n    -- porting note: changed this from a `simp` proof without `only` because of a timeout\n      simp only [ ← and_imp, mem_product, and_imp, Prod.forall, mem_filter,\n        and_self, and_true, imp_self, implies_true]"},{"tailPos":3435,"headPos":3124,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card (s ×ˢ t) ≤ multiplicativeEnergy s t"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\na : α × α\nx✝¹ : a ∈ s ×ˢ t\nb : α × α\nx✝ : b ∈ s ×ˢ t\n⊢ (fun x => ((x.fst, x.fst), x.snd, x.snd)) a = (fun x => ((x.fst, x.fst), x.snd, x.snd)) b → a = b"],"content":"refine'\n    card_le_card_of_inj_on (@fun x => ((x.1, x.1), x.2, x.2)) (by\n    -- porting note: changed this from a `simp` proof without `only` because of a timeout\n      simp only [ ← and_imp, mem_product, and_imp, Prod.forall, mem_filter,\n        and_self, and_true, imp_self, implies_true]) fun a _ b _ => _"},{"tailPos":3488,"headPos":3438,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\na : α × α\nx✝¹ : a ∈ s ×ˢ t\nb : α × α\nx✝ : b ∈ s ×ˢ t\n⊢ (fun x => ((x.fst, x.fst), x.snd, x.snd)) a = (fun x => ((x.fst, x.fst), x.snd, x.snd)) b → a = b"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\na : α × α\nx✝¹ : a ∈ s ×ˢ t\nb : α × α\nx✝ : b ∈ s ×ˢ t\n⊢ a.fst = b.fst → a.snd = b.snd → a = b"],"content":"simp only [Prod.mk.inj_iff, and_self_iff, and_imp]"},{"tailPos":3505,"headPos":3491,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\na : α × α\nx✝¹ : a ∈ s ×ˢ t\nb : α × α\nx✝ : b ∈ s ×ˢ t\n⊢ a.fst = b.fst → a.snd = b.snd → a = b"],"goalsAfter":[],"content":"exact Prod.ext"},{"tailPos":3505,"headPos":3100,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card s * card t ≤ multiplicativeEnergy s t"],"goalsAfter":[],"content":"rw [← card_product]\n  refine'\n    card_le_card_of_inj_on (@fun x => ((x.1, x.1), x.2, x.2)) (by\n    -- porting note: changed this from a `simp` proof without `only` because of a timeout\n      simp only [ ← and_imp, mem_product, and_imp, Prod.forall, mem_filter,\n        and_self, and_true, imp_self, implies_true]) fun a _ b _ => _\n  simp only [Prod.mk.inj_iff, and_self_iff, and_imp]\n  exact Prod.ext"},{"tailPos":3097,"headPos":3095,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card s * card t ≤ multiplicativeEnergy s t"],"goalsAfter":[],"content":"by"},{"tailPos":3505,"headPos":3095,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ card s * card t ≤ multiplicativeEnergy s t"],"goalsAfter":[],"content":"by\n  rw [← card_product]\n  refine'\n    card_le_card_of_inj_on (@fun x => ((x.1, x.1), x.2, x.2)) (by\n    -- porting note: changed this from a `simp` proof without `only` because of a timeout\n      simp only [ ← and_imp, mem_product, and_imp, Prod.forall, mem_filter,\n        and_self, and_true, imp_self, implies_true]) fun a _ b _ => _\n  simp only [Prod.mk.inj_iff, and_self_iff, and_imp]\n  exact Prod.ext"},{"tailPos":4158,"headPos":4131,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ multiplicativeEnergy ∅ t = 0"],"goalsAfter":[],"content":"simp [multiplicativeEnergy]"},{"tailPos":4128,"headPos":4126,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ multiplicativeEnergy ∅ t = 0"],"goalsAfter":[],"content":"by"},{"tailPos":4158,"headPos":4126,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ multiplicativeEnergy ∅ t = 0"],"goalsAfter":[],"content":"by\n  simp [multiplicativeEnergy]"},{"tailPos":4486,"headPos":4459,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ multiplicativeEnergy s ∅ = 0"],"goalsAfter":[],"content":"simp [multiplicativeEnergy]"},{"tailPos":4456,"headPos":4454,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ multiplicativeEnergy s ∅ = 0"],"goalsAfter":[],"content":"by"},{"tailPos":4486,"headPos":4454,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ multiplicativeEnergy s ∅ = 0"],"goalsAfter":[],"content":"by\n  simp [multiplicativeEnergy]"},{"tailPos":4878,"headPos":4869,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : ¬(Finset.Nonempty s ∧ Finset.Nonempty t)\n⊢ False"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : ¬(Finset.Nonempty s ∧ Finset.Nonempty t)\n⊢ False"],"content":"simp_rw ["},{"tailPos":4889,"headPos":4878,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : ¬(Finset.Nonempty s ∧ Finset.Nonempty t)\n⊢ False"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : ¬Finset.Nonempty s ∨ ¬Finset.Nonempty t\n⊢ False"],"content":"not_and_or,"},{"tailPos":4915,"headPos":4890,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : ¬Finset.Nonempty s ∨ ¬Finset.Nonempty t\n⊢ False"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : s = ∅ ∨ t = ∅\n⊢ False"],"content":"simp only [not_nonempty_iff_eq_empty] at H "},{"tailPos":4921,"headPos":4869,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : ¬(Finset.Nonempty s ∧ Finset.Nonempty t)\n⊢ False"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : s = ∅ ∨ t = ∅\n⊢ False"],"content":"simp_rw [not_and_or, not_nonempty_iff_eq_empty] at H"},{"tailPos":4949,"headPos":4928,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : s = ∅ ∨ t = ∅\n⊢ False"],"goalsAfter":["case inl\nα : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy ∅ t\n⊢ False","case inr\nα : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s ∅\n⊢ False"],"content":"obtain rfl | rfl := H"},{"tailPos":4953,"headPos":4950,"goalsBefore":["case inl\nα : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy ∅ t\n⊢ False","case inr\nα : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s ∅\n⊢ False"],"goalsAfter":["case inl\nα : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy ∅ t\n⊢ False","case inr\nα : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s ∅\n⊢ False"],"content":"<;>"},{"tailPos":4981,"headPos":4954,"goalsBefore":["case inl\nα : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy ∅ t\n⊢ False"],"goalsAfter":[],"content":"simp [Nat.not_lt_zero] at h"},{"tailPos":4981,"headPos":4954,"goalsBefore":["case inr\nα : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s ∅\n⊢ False"],"goalsAfter":[],"content":"simp [Nat.not_lt_zero] at h"},{"tailPos":4981,"headPos":4928,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : s = ∅ ∨ t = ∅\n⊢ False"],"goalsAfter":[],"content":"obtain rfl | rfl := H <;> simp [Nat.not_lt_zero] at h"},{"tailPos":4981,"headPos":4869,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : ¬(Finset.Nonempty s ∧ Finset.Nonempty t)\n⊢ False"],"goalsAfter":[],"content":"simp_rw [not_and_or, not_nonempty_iff_eq_empty] at H\n      obtain rfl | rfl := H <;> simp [Nat.not_lt_zero] at h"},{"tailPos":4862,"headPos":4860,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : ¬(Finset.Nonempty s ∧ Finset.Nonempty t)\n⊢ False"],"goalsAfter":[],"content":"by"},{"tailPos":4981,"headPos":4860,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\nh : 0 < multiplicativeEnergy s t\nH : ¬(Finset.Nonempty s ∧ Finset.Nonempty t)\n⊢ False"],"goalsAfter":[],"content":"by\n      simp_rw [not_and_or, not_nonempty_iff_eq_empty] at H\n      obtain rfl | rfl := H <;> simp [Nat.not_lt_zero] at h"},{"tailPos":5420,"headPos":5343,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ multiplicativeEnergy s t = 0 ↔ s = ∅ ∨ t = ∅"],"goalsAfter":[],"content":"simp [← (Nat.zero_le _).not_gt_iff_eq, not_and_or, imp_iff_or_not, or_comm]"},{"tailPos":5340,"headPos":5338,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ multiplicativeEnergy s t = 0 ↔ s = ∅ ∨ t = ∅"],"goalsAfter":[],"content":"by"},{"tailPos":5420,"headPos":5338,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Mul α\ns s₁ s₂ t t₁ t₂ : Finset α\n⊢ multiplicativeEnergy s t = 0 ↔ s = ∅ ∨ t = ∅"],"goalsAfter":[],"content":"by\n  simp [← (Nat.zero_le _).not_gt_iff_eq, not_and_or, imp_iff_or_not, or_comm]"},{"tailPos":5820,"headPos":5799,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ multiplicativeEnergy s t = multiplicativeEnergy t s"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ((s ×ˢ s) ×ˢ t ×ˢ t)) = multiplicativeEnergy t s"],"content":"multiplicativeEnergy,"},{"tailPos":5874,"headPos":5821,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ((s ×ˢ s) ×ˢ t ×ˢ t)) = multiplicativeEnergy t s"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ card\n      (map (Equiv.toEmbedding (Equiv.prodComm (α × α) (α × α)))\n        (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ((s ×ˢ s) ×ˢ t ×ˢ t))) =\n    multiplicativeEnergy t s"],"content":"← Finset.card_map (Equiv.prodComm _ _).toEmbedding,"},{"tailPos":5885,"headPos":5875,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ card\n      (map (Equiv.toEmbedding (Equiv.prodComm (α × α) (α × α)))\n        (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ((s ×ˢ s) ×ˢ t ×ˢ t))) =\n    multiplicativeEnergy t s"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ card\n      (filter ((fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ∘ ↑(Equiv.prodComm (α × α) (α × α)).symm)\n        (map (Equiv.toEmbedding (Equiv.prodComm (α × α) (α × α))) ((s ×ˢ s) ×ˢ t ×ˢ t))) =\n    multiplicativeEnergy t s"],"content":"map_filter"},{"tailPos":5886,"headPos":5885,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ card\n      (filter ((fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ∘ ↑(Equiv.prodComm (α × α) (α × α)).symm)\n        (map (Equiv.toEmbedding (Equiv.prodComm (α × α) (α × α))) ((s ×ˢ s) ×ˢ t ×ˢ t))) =\n    multiplicativeEnergy t s"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ card\n      (filter ((fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ∘ ↑(Equiv.prodComm (α × α) (α × α)).symm)\n        (map (Equiv.toEmbedding (Equiv.prodComm (α × α) (α × α))) ((s ×ˢ s) ×ˢ t ×ˢ t))) =\n    multiplicativeEnergy t s"],"content":"]"},{"tailPos":5886,"headPos":5795,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ multiplicativeEnergy s t = multiplicativeEnergy t s"],"goalsAfter":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ card\n      (filter ((fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ∘ ↑(Equiv.prodComm (α × α) (α × α)).symm)\n        (map (Equiv.toEmbedding (Equiv.prodComm (α × α) (α × α))) ((s ×ˢ s) ×ˢ t ×ˢ t))) =\n    multiplicativeEnergy t s"],"content":"rw [multiplicativeEnergy, ← Finset.card_map (Equiv.prodComm _ _).toEmbedding, map_filter]"},{"tailPos":5982,"headPos":5889,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ card\n      (filter ((fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) ∘ ↑(Equiv.prodComm (α × α) (α × α)).symm)\n        (map (Equiv.toEmbedding (Equiv.prodComm (α × α) (α × α))) ((s ×ˢ s) ×ˢ t ×ˢ t))) =\n    multiplicativeEnergy t s"],"goalsAfter":[],"content":"simp [-Finset.card_map, eq_comm, multiplicativeEnergy, mul_comm, map_eq_image, Function.comp]"},{"tailPos":5982,"headPos":5795,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ multiplicativeEnergy s t = multiplicativeEnergy t s"],"goalsAfter":[],"content":"rw [multiplicativeEnergy, ← Finset.card_map (Equiv.prodComm _ _).toEmbedding, map_filter]\n  simp [-Finset.card_map, eq_comm, multiplicativeEnergy, mul_comm, map_eq_image, Function.comp]"},{"tailPos":5792,"headPos":5790,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ multiplicativeEnergy s t = multiplicativeEnergy t s"],"goalsAfter":[],"content":"by"},{"tailPos":5982,"headPos":5790,"goalsBefore":["α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : CommMonoid α\ns t : Finset α\n⊢ multiplicativeEnergy s t = multiplicativeEnergy t s"],"goalsAfter":[],"content":"by\n  rw [multiplicativeEnergy, ← Finset.card_map (Equiv.prodComm _ _).toEmbedding, map_filter]\n  simp [-Finset.card_map, eq_comm, multiplicativeEnergy, mul_comm, map_eq_image, Function.comp]"},{"tailPos":6465,"headPos":6378,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy univ t = Fintype.card α * card t ^ 2"],"goalsAfter":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) = card (univ ×ˢ t ×ˢ t)"],"content":"simp only [multiplicativeEnergy, univ_product_univ, Fintype.card, sq, ← card_product]"},{"tailPos":6563,"headPos":6468,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) = card (univ ×ˢ t ×ˢ t)"],"goalsAfter":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) = card (univ ×ˢ t ×ˢ t)"],"content":"let f : α × α × α → (α × α) × α × α := fun x => ((x.1 * x.2.2, x.1 * x.2.1), x.2)"},{"tailPos":6715,"headPos":6654,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\n⊢ Set.InjOn f ↑(univ ×ˢ t ×ˢ t)"],"goalsAfter":["case mk.mk.mk.mk\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ b₂ c₂ : α\nh₂ : (a₂, b₂, c₂) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : f (a₁, b₁, c₁) = f (a₂, b₂, c₂)\n⊢ (a₁, b₁, c₁) = (a₂, b₂, c₂)"],"content":"rintro ⟨a₁, b₁, c₁⟩ _ ⟨a₂, b₂, c₂⟩ h₂ h"},{"tailPos":6729,"headPos":6720,"goalsBefore":["case mk.mk.mk.mk\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ b₂ c₂ : α\nh₂ : (a₂, b₂, c₂) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : ((a₁ * c₁, a₁ * b₁), b₁, c₁) = ((a₂ * c₂, a₂ * b₂), b₂, c₂)\n⊢ (a₁, b₁, c₁) = (a₂, b₂, c₂)"],"goalsAfter":["case mk.mk.mk.mk\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ b₂ c₂ : α\nh₂ : (a₂, b₂, c₂) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : ((a₁ * c₁, a₁ * b₁), b₁, c₁) = ((a₂ * c₂, a₂ * b₂), b₂, c₂)\n⊢ (a₁, b₁, c₁) = (a₂, b₂, c₂)"],"content":"simp_rw ["},{"tailPos":6741,"headPos":6729,"goalsBefore":["case mk.mk.mk.mk\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ b₂ c₂ : α\nh₂ : (a₂, b₂, c₂) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : ((a₁ * c₁, a₁ * b₁), b₁, c₁) = ((a₂ * c₂, a₂ * b₂), b₂, c₂)\n⊢ (a₁, b₁, c₁) = (a₂, b₂, c₂)"],"goalsAfter":["case mk.mk.mk.mk\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ b₂ c₂ : α\nh₂ : (a₂, b₂, c₂) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : (a₁ * c₁ = a₂ * c₂ ∧ a₁ * b₁ = a₂ * b₂) ∧ b₁ = b₂ ∧ c₁ = c₂\n⊢ (a₁, b₁, c₁) = (a₂, b₂, c₂)"],"content":"simp only [Prod.ext_iff] at h "},{"tailPos":6747,"headPos":6720,"goalsBefore":["case mk.mk.mk.mk\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ b₂ c₂ : α\nh₂ : (a₂, b₂, c₂) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : f (a₁, b₁, c₁) = f (a₂, b₂, c₂)\n⊢ (a₁, b₁, c₁) = (a₂, b₂, c₂)"],"goalsAfter":["case mk.mk.mk.mk\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ b₂ c₂ : α\nh₂ : (a₂, b₂, c₂) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : (a₁ * c₁ = a₂ * c₂ ∧ a₁ * b₁ = a₂ * b₂) ∧ b₁ = b₂ ∧ c₁ = c₂\n⊢ (a₁, b₁, c₁) = (a₂, b₂, c₂)"],"content":"simp_rw [Prod.ext_iff] at h"},{"tailPos":6781,"headPos":6752,"goalsBefore":["case mk.mk.mk.mk\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ b₂ c₂ : α\nh₂ : (a₂, b₂, c₂) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : (a₁ * c₁ = a₂ * c₂ ∧ a₁ * b₁ = a₂ * b₂) ∧ b₁ = b₂ ∧ c₁ = c₂\n⊢ (a₁, b₁, c₁) = (a₂, b₂, c₂)"],"goalsAfter":["case mk.mk.mk.mk.intro.intro\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ : α\nh₂ : (a₂, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : a₁ * c₁ = a₂ * c₁ ∧ a₁ * b₁ = a₂ * b₁\n⊢ (a₁, b₁, c₁) = (a₂, b₁, c₁)"],"content":"obtain ⟨h, rfl, rfl⟩ := h"},{"tailPos":6810,"headPos":6790,"goalsBefore":["case mk.mk.mk.mk.intro.intro\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ : α\nh₂ : (a₂, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : a₁ * c₁ = a₂ * c₁ ∧ a₁ * b₁ = a₂ * b₁\n⊢ (a₁, b₁, c₁) = (a₂, b₁, c₁)"],"goalsAfter":["case mk.mk.mk.mk.intro.intro\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ : α\nh₂ : (a₂, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : a₁ * c₁ = a₂ * c₁ ∧ a₁ * b₁ = a₂ * b₁\n⊢ (a₂, b₁, c₁) = (a₂, b₁, c₁)"],"content":"mul_right_cancel h.1"},{"tailPos":6811,"headPos":6810,"goalsBefore":["case mk.mk.mk.mk.intro.intro\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ : α\nh₂ : (a₂, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : a₁ * c₁ = a₂ * c₁ ∧ a₁ * b₁ = a₂ * b₁\n⊢ (a₂, b₁, c₁) = (a₂, b₁, c₁)"],"goalsAfter":[],"content":"]"},{"tailPos":6811,"headPos":6786,"goalsBefore":["case mk.mk.mk.mk.intro.intro\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\na₁ b₁ c₁ : α\na✝ : (a₁, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\na₂ : α\nh₂ : (a₂, b₁, c₁) ∈ ↑(univ ×ˢ t ×ˢ t)\nh : a₁ * c₁ = a₂ * c₁ ∧ a₁ * b₁ = a₂ * b₁\n⊢ (a₁, b₁, c₁) = (a₂, b₁, c₁)"],"goalsAfter":[],"content":"rw [mul_right_cancel h.1]"},{"tailPos":6811,"headPos":6654,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\n⊢ Set.InjOn f ↑(univ ×ˢ t ×ˢ t)"],"goalsAfter":[],"content":"rintro ⟨a₁, b₁, c₁⟩ _ ⟨a₂, b₂, c₂⟩ h₂ h\n    simp_rw [Prod.ext_iff] at h\n    obtain ⟨h, rfl, rfl⟩ := h\n    rw [mul_right_cancel h.1]"},{"tailPos":6649,"headPos":6647,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\n⊢ Set.InjOn f ↑(univ ×ˢ t ×ˢ t)"],"goalsAfter":[],"content":"by"},{"tailPos":6811,"headPos":6647,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\n⊢ Set.InjOn f ↑(univ ×ˢ t ×ˢ t)"],"goalsAfter":[],"content":"by\n    rintro ⟨a₁, b₁, c₁⟩ _ ⟨a₂, b₂, c₂⟩ h₂ h\n    simp_rw [Prod.ext_iff] at h\n    obtain ⟨h, rfl, rfl⟩ := h\n    rw [mul_right_cancel h.1]"},{"tailPos":6811,"headPos":6566,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) = card (univ ×ˢ t ×ˢ t)"],"goalsAfter":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) = card (univ ×ˢ t ×ˢ t)"],"content":"have : (↑((univ : Finset α) ×ˢ t ×ˢ t) : Set (α × α × α)).InjOn f := by\n    rintro ⟨a₁, b₁, c₁⟩ _ ⟨a₂, b₂, c₂⟩ h₂ h\n    simp_rw [Prod.ext_iff] at h\n    obtain ⟨h, rfl, rfl⟩ := h\n    rw [mul_right_cancel h.1]"},{"tailPos":6846,"headPos":6818,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) = card (univ ×ˢ t ×ˢ t)"],"goalsAfter":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) =\n    card (image f (univ ×ˢ t ×ˢ t))"],"content":"← card_image_of_injOn this"},{"tailPos":6847,"headPos":6846,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) =\n    card (image f (univ ×ˢ t ×ˢ t))"],"goalsAfter":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) =\n    card (image f (univ ×ˢ t ×ˢ t))"],"content":"]"},{"tailPos":6847,"headPos":6814,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) = card (univ ×ˢ t ×ˢ t)"],"goalsAfter":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) =\n    card (image f (univ ×ˢ t ×ˢ t))"],"content":"rw [← card_image_of_injOn this]"},{"tailPos":6862,"headPos":6850,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\n⊢ card (filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t)) =\n    card (image f (univ ×ˢ t ×ˢ t))"],"goalsAfter":["case e_s.a\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\na : (α × α) × α × α\n⊢ a ∈ filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t) ↔ a ∈ image f (univ ×ˢ t ×ˢ t)"],"content":"congr with a"},{"tailPos":6965,"headPos":6865,"goalsBefore":["case e_s.a\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\na : (α × α) × α × α\n⊢ a ∈ filter (fun x => x.fst.fst * x.snd.fst = x.fst.snd * x.snd.snd) (univ ×ˢ t ×ˢ t) ↔ a ∈ image f (univ ×ˢ t ×ˢ t)"],"goalsAfter":["case e_s.a\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\na : (α × α) × α × α\n⊢ (a.snd.fst ∈ t ∧ a.snd.snd ∈ t) ∧ a.fst.fst * a.snd.fst = a.fst.snd * a.snd.snd ↔\n    ∃ a_1 a_2 b, (a_2 ∈ t ∧ b ∈ t) ∧ ((a_1 * b, a_1 * a_2), a_2, b) = a"],"content":"simp only [mem_filter, mem_product, mem_univ, true_and_iff, mem_image, exists_prop,\n    Prod.exists]"},{"tailPos":7051,"headPos":7025,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\na : (α × α) × α × α\nh : (a.snd.fst ∈ t ∧ a.snd.snd ∈ t) ∧ a.fst.fst * a.snd.fst = a.fst.snd * a.snd.snd\n⊢ ((a.fst.fst * a.snd.snd⁻¹ * a.snd.snd, a.fst.fst * a.snd.snd⁻¹ * a.snd.fst), a.snd.fst, a.snd.snd) = a"],"goalsAfter":[],"content":"simp [mul_right_comm, h.2]"},{"tailPos":7024,"headPos":7022,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\na : (α × α) × α × α\nh : (a.snd.fst ∈ t ∧ a.snd.snd ∈ t) ∧ a.fst.fst * a.snd.fst = a.fst.snd * a.snd.snd\n⊢ ((a.fst.fst * a.snd.snd⁻¹ * a.snd.snd, a.fst.fst * a.snd.snd⁻¹ * a.snd.fst), a.snd.fst, a.snd.snd) = a"],"goalsAfter":[],"content":"by"},{"tailPos":7051,"headPos":7022,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\na : (α × α) × α × α\nh : (a.snd.fst ∈ t ∧ a.snd.snd ∈ t) ∧ a.fst.fst * a.snd.fst = a.fst.snd * a.snd.snd\n⊢ ((a.fst.fst * a.snd.snd⁻¹ * a.snd.snd, a.fst.fst * a.snd.snd⁻¹ * a.snd.fst), a.snd.fst, a.snd.snd) = a"],"goalsAfter":[],"content":"by simp [mul_right_comm, h.2]"},{"tailPos":7060,"headPos":6968,"goalsBefore":["case e_s.a\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\na : (α × α) × α × α\n⊢ (a.snd.fst ∈ t ∧ a.snd.snd ∈ t) ∧ a.fst.fst * a.snd.fst = a.fst.snd * a.snd.snd ↔\n    ∃ a_1 a_2 b, (a_2 ∈ t ∧ b ∈ t) ∧ ((a_1 * b, a_1 * a_2), a_2, b) = a"],"goalsAfter":["case e_s.a\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\na : (α × α) × α × α\n⊢ (∃ a_1 a_2 b, (a_2 ∈ t ∧ b ∈ t) ∧ ((a_1 * b, a_1 * a_2), a_2, b) = a) →\n    (a.snd.fst ∈ t ∧ a.snd.snd ∈ t) ∧ a.fst.fst * a.snd.fst = a.fst.snd * a.snd.snd"],"content":"refine' ⟨fun h => ⟨a.1.1 * a.2.2⁻¹, _, _, h.1, by simp [mul_right_comm, h.2]⟩, _⟩"},{"tailPos":7093,"headPos":7063,"goalsBefore":["case e_s.a\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\na : (α × α) × α × α\n⊢ (∃ a_1 a_2 b, (a_2 ∈ t ∧ b ∈ t) ∧ ((a_1 * b, a_1 * a_2), a_2, b) = a) →\n    (a.snd.fst ∈ t ∧ a.snd.snd ∈ t) ∧ a.fst.fst * a.snd.fst = a.fst.snd * a.snd.snd"],"goalsAfter":["case e_s.a.intro.intro.intro.intro\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\nb c d : α\nhcd : c ∈ t ∧ d ∈ t\n⊢ (((b * d, b * c), c, d).snd.fst ∈ t ∧ ((b * d, b * c), c, d).snd.snd ∈ t) ∧\n    ((b * d, b * c), c, d).fst.fst * ((b * d, b * c), c, d).snd.fst =\n      ((b * d, b * c), c, d).fst.snd * ((b * d, b * c), c, d).snd.snd"],"content":"rintro ⟨b, c, d, hcd, rfl⟩"},{"tailPos":7118,"headPos":7096,"goalsBefore":["case e_s.a.intro.intro.intro.intro\nα : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\nf : α × α × α → (α × α) × α × α := fun x => ((x.fst * x.snd.snd, x.fst * x.snd.fst), x.snd)\nthis : Set.InjOn f ↑(univ ×ˢ t ×ˢ t)\nb c d : α\nhcd : c ∈ t ∧ d ∈ t\n⊢ (((b * d, b * c), c, d).snd.fst ∈ t ∧ ((b * d, b * c), c, d).snd.snd ∈ t) ∧\n    ((b * d, b * c), c, d).fst.fst * ((b * d, b * c), c, d).snd.fst =\n      ((b * d, b * c), c, d).fst.snd * ((b * d, b * c), c, d).snd.snd"],"goalsAfter":[],"content":"simpa only [mul_right_comm, and_true, coe_product, coe_univ]"},{"tailPos":7118,"headPos":6378,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy univ t = Fintype.card α * card t ^ 2"],"goalsAfter":[],"content":"simp only [multiplicativeEnergy, univ_product_univ, Fintype.card, sq, ← card_product]\n  let f : α × α × α → (α × α) × α × α := fun x => ((x.1 * x.2.2, x.1 * x.2.1), x.2)\n  have : (↑((univ : Finset α) ×ˢ t ×ˢ t) : Set (α × α × α)).InjOn f := by\n    rintro ⟨a₁, b₁, c₁⟩ _ ⟨a₂, b₂, c₂⟩ h₂ h\n    simp_rw [Prod.ext_iff] at h\n    obtain ⟨h, rfl, rfl⟩ := h\n    rw [mul_right_cancel h.1]\n  rw [← card_image_of_injOn this]\n  congr with a\n  simp only [mem_filter, mem_product, mem_univ, true_and_iff, mem_image, exists_prop,\n    Prod.exists]\n  refine' ⟨fun h => ⟨a.1.1 * a.2.2⁻¹, _, _, h.1, by simp [mul_right_comm, h.2]⟩, _⟩\n  rintro ⟨b, c, d, hcd, rfl⟩\n  simpa [mul_right_comm]"},{"tailPos":6375,"headPos":6373,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy univ t = Fintype.card α * card t ^ 2"],"goalsAfter":[],"content":"by"},{"tailPos":7118,"headPos":6373,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy univ t = Fintype.card α * card t ^ 2"],"goalsAfter":[],"content":"by\n  simp only [multiplicativeEnergy, univ_product_univ, Fintype.card, sq, ← card_product]\n  let f : α × α × α → (α × α) × α × α := fun x => ((x.1 * x.2.2, x.1 * x.2.1), x.2)\n  have : (↑((univ : Finset α) ×ˢ t ×ˢ t) : Set (α × α × α)).InjOn f := by\n    rintro ⟨a₁, b₁, c₁⟩ _ ⟨a₂, b₂, c₂⟩ h₂ h\n    simp_rw [Prod.ext_iff] at h\n    obtain ⟨h, rfl, rfl⟩ := h\n    rw [mul_right_cancel h.1]\n  rw [← card_image_of_injOn this]\n  congr with a\n  simp only [mem_filter, mem_product, mem_univ, true_and_iff, mem_image, exists_prop,\n    Prod.exists]\n  refine' ⟨fun h => ⟨a.1.1 * a.2.2⁻¹, _, _, h.1, by simp [mul_right_comm, h.2]⟩, _⟩\n  rintro ⟨b, c, d, hcd, rfl⟩\n  simpa [mul_right_comm]"},{"tailPos":7475,"headPos":7449,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy s univ = Fintype.card α * card s ^ 2"],"goalsAfter":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy univ s = Fintype.card α * card s ^ 2"],"content":"multiplicativeEnergy_comm,"},{"tailPos":7506,"headPos":7476,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy univ s = Fintype.card α * card s ^ 2"],"goalsAfter":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ Fintype.card α * card s ^ 2 = Fintype.card α * card s ^ 2"],"content":"multiplicativeEnergy_univ_left"},{"tailPos":7507,"headPos":7506,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ Fintype.card α * card s ^ 2 = Fintype.card α * card s ^ 2"],"goalsAfter":[],"content":"]"},{"tailPos":7507,"headPos":7445,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy s univ = Fintype.card α * card s ^ 2"],"goalsAfter":[],"content":"rw [multiplicativeEnergy_comm, multiplicativeEnergy_univ_left]"},{"tailPos":7442,"headPos":7440,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy s univ = Fintype.card α * card s ^ 2"],"goalsAfter":[],"content":"by"},{"tailPos":7507,"headPos":7440,"goalsBefore":["α : Type u_1\ninst✝² : DecidableEq α\ninst✝¹ : CommGroup α\ninst✝ : Fintype α\ns t : Finset α\n⊢ multiplicativeEnergy s univ = Fintype.card α * card s ^ 2"],"goalsAfter":[],"content":"by\n  rw [multiplicativeEnergy_comm, multiplicativeEnergy_univ_left]"}]