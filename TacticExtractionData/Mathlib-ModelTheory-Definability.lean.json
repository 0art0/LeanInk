[{"tailPos":2199,"headPos":2174,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\ns : Set (α → M)\nL' : Language\ninst✝¹ : Structure L' M\nh : Definable A L s\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\n⊢ Definable A L' s"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\nL' : Language\ninst✝¹ : Structure L' M\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\nψ : Formula (L[[↑A]]) α\n⊢ Definable A L' (setOf (Formula.Realize ψ))"],"content":"obtain ⟨ψ, rfl⟩ := h"},{"tailPos":2251,"headPos":2202,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\nL' : Language\ninst✝¹ : Structure L' M\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\nψ : Formula (L[[↑A]]) α\n⊢ Definable A L' (setOf (Formula.Realize ψ))"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\nL' : Language\ninst✝¹ : Structure L' M\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\nψ : Formula (L[[↑A]]) α\n⊢ setOf (Formula.Realize ψ) = setOf (Formula.Realize (LHom.onFormula (LHom.addConstants (↑A) φ) ψ))"],"content":"refine' ⟨(φ.addConstants A).onFormula ψ, _⟩"},{"tailPos":2259,"headPos":2254,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\nL' : Language\ninst✝¹ : Structure L' M\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\nψ : Formula (L[[↑A]]) α\n⊢ setOf (Formula.Realize ψ) = setOf (Formula.Realize (LHom.onFormula (LHom.addConstants (↑A) φ) ψ))"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\nL' : Language\ninst✝¹ : Structure L' M\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\nψ : Formula (L[[↑A]]) α\nx : α → M\n⊢ x ∈ setOf (Formula.Realize ψ) ↔ x ∈ setOf (Formula.Realize (LHom.onFormula (LHom.addConstants (↑A) φ) ψ))"],"content":"ext x"},{"tailPos":2310,"headPos":2262,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\nL' : Language\ninst✝¹ : Structure L' M\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\nψ : Formula (L[[↑A]]) α\nx : α → M\n⊢ x ∈ setOf (Formula.Realize ψ) ↔ x ∈ setOf (Formula.Realize (LHom.onFormula (LHom.addConstants (↑A) φ) ψ))"],"goalsAfter":[],"content":"simp only [mem_setOf_eq, LHom.realize_onFormula]"},{"tailPos":2310,"headPos":2174,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\ns : Set (α → M)\nL' : Language\ninst✝¹ : Structure L' M\nh : Definable A L s\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\n⊢ Definable A L' s"],"goalsAfter":[],"content":"obtain ⟨ψ, rfl⟩ := h\n  refine' ⟨(φ.addConstants A).onFormula ψ, _⟩\n  ext x\n  simp only [mem_setOf_eq, LHom.realize_onFormula]"},{"tailPos":2171,"headPos":2169,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\ns : Set (α → M)\nL' : Language\ninst✝¹ : Structure L' M\nh : Definable A L s\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\n⊢ Definable A L' s"],"goalsAfter":[],"content":"by"},{"tailPos":2310,"headPos":2169,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type ?u.417\nB : Set M\ns : Set (α → M)\nL' : Language\ninst✝¹ : Structure L' M\nh : Definable A L s\nφ : L →ᴸ L'\ninst✝ : LHom.IsExpansionOn φ M\n⊢ Definable A L' s"],"goalsAfter":[],"content":"by\n  obtain ⟨ψ, rfl⟩ := h\n  refine' ⟨(φ.addConstants A).onFormula ψ, _⟩\n  ext x\n  simp only [mem_setOf_eq, LHom.realize_onFormula]"},{"tailPos":2507,"headPos":2497,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ Definable ∅ L s ↔ ∃ φ, s = setOf (Formula.Realize φ)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ (∃ φ, s = setOf (Formula.Realize φ)) ↔ ∃ φ, s = setOf (Formula.Realize φ)"],"content":"Definable,"},{"tailPos":2584,"headPos":2508,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ (∃ φ, s = setOf (Formula.Realize φ)) ↔ ∃ φ, s = setOf (Formula.Realize φ)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ (∃ φ, s = setOf (Formula.Realize φ)) ↔\n    ∃ b, s = setOf (Formula.Realize (↑(LEquiv.onFormula (LEquiv.addEmptyConstants L ↑∅)).symm b))"],"content":"Equiv.exists_congr_left (LEquiv.addEmptyConstants L (∅ : Set M)).onFormula"},{"tailPos":2585,"headPos":2584,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ (∃ φ, s = setOf (Formula.Realize φ)) ↔\n    ∃ b, s = setOf (Formula.Realize (↑(LEquiv.onFormula (LEquiv.addEmptyConstants L ↑∅)).symm b))"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ (∃ φ, s = setOf (Formula.Realize φ)) ↔\n    ∃ b, s = setOf (Formula.Realize (↑(LEquiv.onFormula (LEquiv.addEmptyConstants L ↑∅)).symm b))"],"content":"]"},{"tailPos":2585,"headPos":2493,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ Definable ∅ L s ↔ ∃ φ, s = setOf (Formula.Realize φ)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ (∃ φ, s = setOf (Formula.Realize φ)) ↔\n    ∃ b, s = setOf (Formula.Realize (↑(LEquiv.onFormula (LEquiv.addEmptyConstants L ↑∅)).symm b))"],"content":"rw [Definable, Equiv.exists_congr_left (LEquiv.addEmptyConstants L (∅ : Set M)).onFormula]"},{"tailPos":2607,"headPos":2588,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ (∃ φ, s = setOf (Formula.Realize φ)) ↔\n    ∃ b, s = setOf (Formula.Realize (↑(LEquiv.onFormula (LEquiv.addEmptyConstants L ↑∅)).symm b))"],"goalsAfter":[],"content":"simp [-constantsOn]"},{"tailPos":2607,"headPos":2493,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ Definable ∅ L s ↔ ∃ φ, s = setOf (Formula.Realize φ)"],"goalsAfter":[],"content":"rw [Definable, Equiv.exists_congr_left (LEquiv.addEmptyConstants L (∅ : Set M)).onFormula]\n  simp [-constantsOn]"},{"tailPos":2490,"headPos":2488,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ Definable ∅ L s ↔ ∃ φ, s = setOf (Formula.Realize φ)"],"goalsAfter":[],"content":"by"},{"tailPos":2607,"headPos":2488,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.1235\nB : Set M\ns : Set (α → M)\n⊢ Definable ∅ L s ↔ ∃ φ, s = setOf (Formula.Realize φ)"],"goalsAfter":[],"content":"by\n  rw [Definable, Equiv.exists_congr_left (LEquiv.addEmptyConstants L (∅ : Set M)).onFormula]\n  simp [-constantsOn]"},{"tailPos":3039,"headPos":2998,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable A L s\nhAB : A ⊆ B\n⊢ Definable B L s"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable ∅ (L[[↑A]]) s\nhAB : A ⊆ B\n⊢ Definable ∅ (L[[↑B]]) s"],"content":"definable_iff_empty_definable_with_params"},{"tailPos":3040,"headPos":3039,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable ∅ (L[[↑A]]) s\nhAB : A ⊆ B\n⊢ Definable ∅ (L[[↑B]]) s"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable ∅ (L[[↑A]]) s\nhAB : A ⊆ B\n⊢ Definable ∅ (L[[↑B]]) s"],"content":"]"},{"tailPos":3045,"headPos":2994,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable A L s\nhAB : A ⊆ B\n⊢ Definable B L s"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable ∅ (L[[↑A]]) s\nhAB : A ⊆ B\n⊢ Definable ∅ (L[[↑B]]) s"],"content":"rw [definable_iff_empty_definable_with_params] at *"},{"tailPos":3116,"headPos":3048,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable ∅ (L[[↑A]]) s\nhAB : A ⊆ B\n⊢ Definable ∅ (L[[↑B]]) s"],"goalsAfter":[],"content":"exact hAs.map_expansion (L.lhomWithConstantsMap (Set.inclusion hAB))"},{"tailPos":3116,"headPos":2994,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable A L s\nhAB : A ⊆ B\n⊢ Definable B L s"],"goalsAfter":[],"content":"rw [definable_iff_empty_definable_with_params] at *\n  exact hAs.map_expansion (L.lhomWithConstantsMap (Set.inclusion hAB))"},{"tailPos":2991,"headPos":2989,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable A L s\nhAB : A ⊆ B\n⊢ Definable B L s"],"goalsAfter":[],"content":"by"},{"tailPos":3116,"headPos":2989,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.8472\nB : Set M\ns : Set (α → M)\nhAs : Definable A L s\nhAB : A ⊆ B\n⊢ Definable B L s"],"goalsAfter":[],"content":"by\n  rw [definable_iff_empty_definable_with_params] at *\n  exact hAs.map_expansion (L.lhomWithConstantsMap (Set.inclusion hAB))"},{"tailPos":3257,"headPos":3254,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.9278\nB : Set M\ns : Set (α → M)\n⊢ ∅ = setOf (Formula.Realize ⊥)"],"goalsAfter":["case h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.9278\nB : Set M\ns : Set (α → M)\nx✝ : α → M\n⊢ x✝ ∈ ∅ ↔ x✝ ∈ setOf (Formula.Realize ⊥)"],"content":"ext"},{"tailPos":3266,"headPos":3262,"goalsBefore":["case h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.9278\nB : Set M\ns : Set (α → M)\nx✝ : α → M\n⊢ x✝ ∈ ∅ ↔ x✝ ∈ setOf (Formula.Realize ⊥)"],"goalsAfter":[],"content":"simp only [mem_empty_iff_false, mem_setOf_eq, Formula.realize_bot]"},{"tailPos":3266,"headPos":3254,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.9278\nB : Set M\ns : Set (α → M)\n⊢ ∅ = setOf (Formula.Realize ⊥)"],"goalsAfter":[],"content":"ext\n    simp"},{"tailPos":3249,"headPos":3247,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.9278\nB : Set M\ns : Set (α → M)\n⊢ ∅ = setOf (Formula.Realize ⊥)"],"goalsAfter":[],"content":"by"},{"tailPos":3266,"headPos":3247,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.9278\nB : Set M\ns : Set (α → M)\n⊢ ∅ = setOf (Formula.Realize ⊥)"],"goalsAfter":[],"content":"by\n    ext\n    simp"},{"tailPos":3412,"headPos":3409,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10107\nB : Set M\ns : Set (α → M)\n⊢ univ = setOf (Formula.Realize ⊤)"],"goalsAfter":["case h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10107\nB : Set M\ns : Set (α → M)\nx✝ : α → M\n⊢ x✝ ∈ univ ↔ x✝ ∈ setOf (Formula.Realize ⊤)"],"content":"ext"},{"tailPos":3421,"headPos":3417,"goalsBefore":["case h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10107\nB : Set M\ns : Set (α → M)\nx✝ : α → M\n⊢ x✝ ∈ univ ↔ x✝ ∈ setOf (Formula.Realize ⊤)"],"goalsAfter":[],"content":"simp only [mem_univ, mem_setOf_eq, Formula.realize_top]"},{"tailPos":3421,"headPos":3409,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10107\nB : Set M\ns : Set (α → M)\n⊢ univ = setOf (Formula.Realize ⊤)"],"goalsAfter":[],"content":"ext\n    simp"},{"tailPos":3404,"headPos":3402,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10107\nB : Set M\ns : Set (α → M)\n⊢ univ = setOf (Formula.Realize ⊤)"],"goalsAfter":[],"content":"by"},{"tailPos":3421,"headPos":3402,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10107\nB : Set M\ns : Set (α → M)\n⊢ univ = setOf (Formula.Realize ⊤)"],"goalsAfter":[],"content":"by\n    ext\n    simp"},{"tailPos":3638,"headPos":3610,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns f g : Set (α → M)\nhf : Definable A L f\nhg : Definable A L g\n⊢ Definable A L (f ∩ g)"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns g : Set (α → M)\nhg : Definable A L g\nφ : Formula (L[[↑A]]) α\n⊢ Definable A L (setOf (Formula.Realize φ) ∩ g)"],"content":"rcases hf with ⟨φ, rfl⟩"},{"tailPos":3669,"headPos":3641,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns g : Set (α → M)\nhg : Definable A L g\nφ : Formula (L[[↑A]]) α\n⊢ Definable A L (setOf (Formula.Realize φ) ∩ g)"],"goalsAfter":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns : Set (α → M)\nφ θ : Formula (L[[↑A]]) α\n⊢ Definable A L (setOf (Formula.Realize φ) ∩ setOf (Formula.Realize θ))"],"content":"rcases hg with ⟨θ, rfl⟩"},{"tailPos":3698,"headPos":3672,"goalsBefore":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns : Set (α → M)\nφ θ : Formula (L[[↑A]]) α\n⊢ Definable A L (setOf (Formula.Realize φ) ∩ setOf (Formula.Realize θ))"],"goalsAfter":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns : Set (α → M)\nφ θ : Formula (L[[↑A]]) α\n⊢ setOf (Formula.Realize φ) ∩ setOf (Formula.Realize θ) = setOf (Formula.Realize (φ ⊓ θ))"],"content":"refine' ⟨φ ⊓ θ, _⟩"},{"tailPos":3704,"headPos":3701,"goalsBefore":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns : Set (α → M)\nφ θ : Formula (L[[↑A]]) α\n⊢ setOf (Formula.Realize φ) ∩ setOf (Formula.Realize θ) = setOf (Formula.Realize (φ ⊓ θ))"],"goalsAfter":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns : Set (α → M)\nφ θ : Formula (L[[↑A]]) α\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∩ setOf (Formula.Realize θ) ↔ x✝ ∈ setOf (Formula.Realize (φ ⊓ θ))"],"content":"ext"},{"tailPos":3711,"headPos":3707,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns : Set (α → M)\nφ θ : Formula (L[[↑A]]) α\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∩ setOf (Formula.Realize θ) ↔ x✝ ∈ setOf (Formula.Realize (φ ⊓ θ))"],"goalsAfter":[],"content":"simp only [mem_inter_iff, mem_setOf_eq, Formula.realize_inf]"},{"tailPos":3711,"headPos":3610,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns f g : Set (α → M)\nhf : Definable A L f\nhg : Definable A L g\n⊢ Definable A L (f ∩ g)"],"goalsAfter":[],"content":"rcases hf with ⟨φ, rfl⟩\n  rcases hg with ⟨θ, rfl⟩\n  refine' ⟨φ ⊓ θ, _⟩\n  ext\n  simp"},{"tailPos":3607,"headPos":3605,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns f g : Set (α → M)\nhf : Definable A L f\nhg : Definable A L g\n⊢ Definable A L (f ∩ g)"],"goalsAfter":[],"content":"by"},{"tailPos":3711,"headPos":3605,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.10841\nB : Set M\ns f g : Set (α → M)\nhf : Definable A L f\nhg : Definable A L g\n⊢ Definable A L (f ∩ g)"],"goalsAfter":[],"content":"by\n  rcases hf with ⟨φ, rfl⟩\n  rcases hg with ⟨θ, rfl⟩\n  refine' ⟨φ ⊓ θ, _⟩\n  ext\n  simp"},{"tailPos":3927,"headPos":3899,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nhf : Definable A L f\nhg : Definable A L g\n⊢ Definable A L (f ∪ g)"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nhg : Definable A L g\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\n⊢ Definable A L (f ∪ g)"],"content":"rcases hf with ⟨φ, hφ⟩"},{"tailPos":3958,"headPos":3930,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nhg : Definable A L g\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\n⊢ Definable A L (f ∪ g)"],"goalsAfter":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\n⊢ Definable A L (f ∪ g)"],"content":"rcases hg with ⟨θ, hθ⟩"},{"tailPos":3987,"headPos":3961,"goalsBefore":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\n⊢ Definable A L (f ∪ g)"],"goalsAfter":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\n⊢ f ∪ g = setOf (Formula.Realize (φ ⊔ θ))"],"content":"refine' ⟨φ ⊔ θ, _⟩"},{"tailPos":3993,"headPos":3990,"goalsBefore":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\n⊢ f ∪ g = setOf (Formula.Realize (φ ⊔ θ))"],"goalsAfter":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ f ∪ g ↔ x✝ ∈ setOf (Formula.Realize (φ ⊔ θ))"],"content":"ext"},{"tailPos":4004,"headPos":4000,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ f ∪ g ↔ x✝ ∈ setOf (Formula.Realize (φ ⊔ θ))"],"goalsAfter":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∪ g ↔ x✝ ∈ setOf (Formula.Realize (φ ⊔ θ))"],"content":"hφ,"},{"tailPos":4009,"headPos":4005,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∪ g ↔ x✝ ∈ setOf (Formula.Realize (φ ⊔ θ))"],"goalsAfter":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∪ setOf (Formula.Realize θ) ↔ x✝ ∈ setOf (Formula.Realize (φ ⊔ θ))"],"content":"hθ,"},{"tailPos":4023,"headPos":4010,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∪ setOf (Formula.Realize θ) ↔ x✝ ∈ setOf (Formula.Realize (φ ⊔ θ))"],"goalsAfter":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∪ setOf (Formula.Realize θ) ↔ Formula.Realize (φ ⊔ θ) x✝"],"content":"mem_setOf_eq,"},{"tailPos":4044,"headPos":4024,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∪ setOf (Formula.Realize θ) ↔ Formula.Realize (φ ⊔ θ) x✝"],"goalsAfter":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∪ setOf (Formula.Realize θ) ↔ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝"],"content":"Formula.realize_sup,"},{"tailPos":4055,"headPos":4045,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∪ setOf (Formula.Realize θ) ↔ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝"],"goalsAfter":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∨ x✝ ∈ setOf (Formula.Realize θ) ↔ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝"],"content":"mem_union,"},{"tailPos":4069,"headPos":4056,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ setOf (Formula.Realize φ) ∨ x✝ ∈ setOf (Formula.Realize θ) ↔ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝"],"goalsAfter":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ Formula.Realize φ x✝ ∨ x✝ ∈ setOf (Formula.Realize θ) ↔ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝"],"content":"mem_setOf_eq,"},{"tailPos":4082,"headPos":4070,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ Formula.Realize φ x✝ ∨ x✝ ∈ setOf (Formula.Realize θ) ↔ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝"],"goalsAfter":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝ ↔ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝"],"content":"mem_setOf_eq"},{"tailPos":4083,"headPos":4082,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝ ↔ Formula.Realize φ x✝ ∨ Formula.Realize θ x✝"],"goalsAfter":[],"content":"]"},{"tailPos":4083,"headPos":3996,"goalsBefore":["case intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : f = setOf (Formula.Realize φ)\nθ : Formula (L[[↑A]]) α\nhθ : g = setOf (Formula.Realize θ)\nx✝ : α → M\n⊢ x✝ ∈ f ∪ g ↔ x✝ ∈ setOf (Formula.Realize (φ ⊔ θ))"],"goalsAfter":[],"content":"rw [hφ, hθ, mem_setOf_eq, Formula.realize_sup, mem_union, mem_setOf_eq, mem_setOf_eq]"},{"tailPos":4083,"headPos":3899,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nhf : Definable A L f\nhg : Definable A L g\n⊢ Definable A L (f ∪ g)"],"goalsAfter":[],"content":"rcases hf with ⟨φ, hφ⟩\n  rcases hg with ⟨θ, hθ⟩\n  refine' ⟨φ ⊔ θ, _⟩\n  ext\n  rw [hφ, hθ, mem_setOf_eq, Formula.realize_sup, mem_union, mem_setOf_eq, mem_setOf_eq]"},{"tailPos":3896,"headPos":3894,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nhf : Definable A L f\nhg : Definable A L g\n⊢ Definable A L (f ∪ g)"],"goalsAfter":[],"content":"by"},{"tailPos":4083,"headPos":3894,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.12600\nB : Set M\ns f g : Set (α → M)\nhf : Definable A L f\nhg : Definable A L g\n⊢ Definable A L (f ∪ g)"],"goalsAfter":[],"content":"by\n  rcases hf with ⟨φ, hφ⟩\n  rcases hg with ⟨θ, hθ⟩\n  refine' ⟨φ ⊔ θ, _⟩\n  ext\n  rw [hφ, hθ, mem_setOf_eq, Formula.realize_sup, mem_union, mem_setOf_eq, mem_setOf_eq]"},{"tailPos":4370,"headPos":4310,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s f)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.inf s f)\n⊢ Definable A L (Finset.inf (insert i s) f)"],"content":"refine' Finset.induction definable_univ (fun i s _ h => _) s"},{"tailPos":4396,"headPos":4379,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.inf s f)\n⊢ Definable A L (Finset.inf (insert i s) f)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.inf s f)\n⊢ Definable A L (f i ⊓ Finset.inf s f)"],"content":"Finset.inf_insert"},{"tailPos":4397,"headPos":4396,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.inf s f)\n⊢ Definable A L (f i ⊓ Finset.inf s f)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.inf s f)\n⊢ Definable A L (f i ⊓ Finset.inf s f)"],"content":"]"},{"tailPos":4397,"headPos":4375,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.inf s f)\n⊢ Definable A L (Finset.inf (insert i s) f)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.inf s f)\n⊢ Definable A L (f i ⊓ Finset.inf s f)"],"content":"rw [Finset.inf_insert]"},{"tailPos":4422,"headPos":4402,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.inf s f)\n⊢ Definable A L (f i ⊓ Finset.inf s f)"],"goalsAfter":[],"content":"exact (hf i).inter h"},{"tailPos":4422,"headPos":4310,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s f)"],"goalsAfter":[],"content":"refine' Finset.induction definable_univ (fun i s _ h => _) s\n    rw [Finset.inf_insert]\n    exact (hf i).inter h"},{"tailPos":4422,"headPos":4296,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s f)"],"goalsAfter":[],"content":"classical\n    refine' Finset.induction definable_univ (fun i s _ h => _) s\n    rw [Finset.inf_insert]\n    exact (hf i).inter h"},{"tailPos":4293,"headPos":4291,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s f)"],"goalsAfter":[],"content":"by"},{"tailPos":4422,"headPos":4291,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.13116\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s f)"],"goalsAfter":[],"content":"by\n  classical\n    refine' Finset.induction definable_univ (fun i s _ h => _) s\n    rw [Finset.inf_insert]\n    exact (hf i).inter h"},{"tailPos":4720,"headPos":4659,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s f)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.sup s f)\n⊢ Definable A L (Finset.sup (insert i s) f)"],"content":"refine' Finset.induction definable_empty (fun i s _ h => _) s"},{"tailPos":4746,"headPos":4729,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.sup s f)\n⊢ Definable A L (Finset.sup (insert i s) f)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.sup s f)\n⊢ Definable A L (f i ⊔ Finset.sup s f)"],"content":"Finset.sup_insert"},{"tailPos":4747,"headPos":4746,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.sup s f)\n⊢ Definable A L (f i ⊔ Finset.sup s f)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.sup s f)\n⊢ Definable A L (f i ⊔ Finset.sup s f)"],"content":"]"},{"tailPos":4747,"headPos":4725,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.sup s f)\n⊢ Definable A L (Finset.sup (insert i s) f)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.sup s f)\n⊢ Definable A L (f i ⊔ Finset.sup s f)"],"content":"rw [Finset.sup_insert]"},{"tailPos":4772,"headPos":4752,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝¹ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns✝ : Finset ι\ni : ι\ns : Finset ι\nx✝ : ¬i ∈ s\nh : Definable A L (Finset.sup s f)\n⊢ Definable A L (f i ⊔ Finset.sup s f)"],"goalsAfter":[],"content":"exact (hf i).union h"},{"tailPos":4772,"headPos":4659,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s f)"],"goalsAfter":[],"content":"refine' Finset.induction definable_empty (fun i s _ h => _) s\n    rw [Finset.sup_insert]\n    exact (hf i).union h"},{"tailPos":4772,"headPos":4645,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s f)"],"goalsAfter":[],"content":"classical\n    refine' Finset.induction definable_empty (fun i s _ h => _) s\n    rw [Finset.sup_insert]\n    exact (hf i).union h"},{"tailPos":4642,"headPos":4640,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s f)"],"goalsAfter":[],"content":"by"},{"tailPos":4772,"headPos":4640,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.14150\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s f)"],"goalsAfter":[],"content":"by\n  classical\n    refine' Finset.induction definable_empty (fun i s _ h => _) s\n    rw [Finset.sup_insert]\n    exact (hf i).union h"},{"tailPos":5040,"headPos":5012,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋂ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s fun i => f i)"],"content":"← Finset.inf_set_eq_iInter"},{"tailPos":5041,"headPos":5040,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s fun i => f i)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s fun i => f i)"],"content":"]"},{"tailPos":5041,"headPos":5008,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋂ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s fun i => f i)"],"content":"rw [← Finset.inf_set_eq_iInter]"},{"tailPos":5075,"headPos":5044,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.inf s fun i => f i)"],"goalsAfter":[],"content":"exact definable_finset_inf hf s"},{"tailPos":5075,"headPos":5008,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋂ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":[],"content":"rw [← Finset.inf_set_eq_iInter]\n  exact definable_finset_inf hf s"},{"tailPos":5005,"headPos":5003,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋂ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":[],"content":"by"},{"tailPos":5075,"headPos":5003,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15276\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋂ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":[],"content":"by\n  rw [← Finset.inf_set_eq_iInter]\n  exact definable_finset_inf hf s"},{"tailPos":5351,"headPos":5322,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋃ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s fun i => f i)"],"content":"← Finset.sup_set_eq_biUnion"},{"tailPos":5352,"headPos":5351,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s fun i => f i)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s fun i => f i)"],"content":"]"},{"tailPos":5352,"headPos":5318,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋃ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s fun i => f i)"],"content":"rw [← Finset.sup_set_eq_biUnion]"},{"tailPos":5386,"headPos":5355,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (Finset.sup s fun i => f i)"],"goalsAfter":[],"content":"exact definable_finset_sup hf s"},{"tailPos":5386,"headPos":5318,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋃ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":[],"content":"rw [← Finset.sup_set_eq_biUnion]\n  exact definable_finset_sup hf s"},{"tailPos":5315,"headPos":5313,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋃ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":[],"content":"by"},{"tailPos":5386,"headPos":5313,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15580\nB : Set M\ns✝ : Set (α → M)\nι : Type u_1\nf : ι → Set (α → M)\nhf : ∀ (i : ι), Definable A L (f i)\ns : Finset ι\n⊢ Definable A L (⋃ (i : ι) (_ : i ∈ s), f i)"],"goalsAfter":[],"content":"by\n  rw [← Finset.sup_set_eq_biUnion]\n  exact definable_finset_sup hf s"},{"tailPos":5587,"headPos":5559,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nhf : Definable A L s\n⊢ Definable A L (sᶜ)"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\n⊢ Definable A L (sᶜ)"],"content":"rcases hf with ⟨φ, hφ⟩"},{"tailPos":5613,"headPos":5590,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\n⊢ Definable A L (sᶜ)"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\n⊢ sᶜ = setOf (Formula.Realize (Formula.not φ))"],"content":"refine' ⟨φ.not, _⟩"},{"tailPos":5621,"headPos":5616,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\n⊢ sᶜ = setOf (Formula.Realize (Formula.not φ))"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ v ∈ sᶜ ↔ v ∈ setOf (Formula.Realize (Formula.not φ))"],"content":"ext v"},{"tailPos":5632,"headPos":5628,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ v ∈ sᶜ ↔ v ∈ setOf (Formula.Realize (Formula.not φ))"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ v ∈ setOf (Formula.Realize φ)ᶜ ↔ v ∈ setOf (Formula.Realize (Formula.not φ))"],"content":"hφ,"},{"tailPos":5645,"headPos":5633,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ v ∈ setOf (Formula.Realize φ)ᶜ ↔ v ∈ setOf (Formula.Realize (Formula.not φ))"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ v ∈ {a | ¬Formula.Realize φ a} ↔ v ∈ setOf (Formula.Realize (Formula.not φ))"],"content":"compl_setOf,"},{"tailPos":5656,"headPos":5646,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ v ∈ {a | ¬Formula.Realize φ a} ↔ v ∈ setOf (Formula.Realize (Formula.not φ))"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ ¬Formula.Realize φ v ↔ v ∈ setOf (Formula.Realize (Formula.not φ))"],"content":"mem_setOf,"},{"tailPos":5667,"headPos":5657,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ ¬Formula.Realize φ v ↔ v ∈ setOf (Formula.Realize (Formula.not φ))"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ ¬Formula.Realize φ v ↔ Formula.Realize (Formula.not φ) v"],"content":"mem_setOf,"},{"tailPos":5687,"headPos":5668,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ ¬Formula.Realize φ v ↔ Formula.Realize (Formula.not φ) v"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ ¬Formula.Realize φ v ↔ ¬Formula.Realize φ v"],"content":"Formula.realize_not"},{"tailPos":5688,"headPos":5687,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ ¬Formula.Realize φ v ↔ ¬Formula.Realize φ v"],"goalsAfter":[],"content":"]"},{"tailPos":5688,"headPos":5624,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nφ : Formula (L[[↑A]]) α\nhφ : s = setOf (Formula.Realize φ)\nv : α → M\n⊢ v ∈ sᶜ ↔ v ∈ setOf (Formula.Realize (Formula.not φ))"],"goalsAfter":[],"content":"rw [hφ, compl_setOf, mem_setOf, mem_setOf, Formula.realize_not]"},{"tailPos":5688,"headPos":5559,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nhf : Definable A L s\n⊢ Definable A L (sᶜ)"],"goalsAfter":[],"content":"rcases hf with ⟨φ, hφ⟩\n  refine' ⟨φ.not, _⟩\n  ext v\n  rw [hφ, compl_setOf, mem_setOf, mem_setOf, Formula.realize_not]"},{"tailPos":5556,"headPos":5554,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nhf : Definable A L s\n⊢ Definable A L (sᶜ)"],"goalsAfter":[],"content":"by"},{"tailPos":5688,"headPos":5554,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.15860\nB : Set M\ns✝ s : Set (α → M)\nhf : Definable A L s\n⊢ Definable A L (sᶜ)"],"goalsAfter":[],"content":"by\n  rcases hf with ⟨φ, hφ⟩\n  refine' ⟨φ.not, _⟩\n  ext v\n  rw [hφ, compl_setOf, mem_setOf, mem_setOf, Formula.realize_not]"},{"tailPos":6122,"headPos":6097,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\nf : α → β\ns : Set (α → M)\nh : Definable A L s\n⊢ Definable A L ((fun g => g ∘ f) ⁻¹' s)"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns : Set (α → M)\nf : α → β\nφ : Formula (L[[↑A]]) α\n⊢ Definable A L ((fun g => g ∘ f) ⁻¹' setOf (Formula.Realize φ))"],"content":"obtain ⟨φ, rfl⟩ := h"},{"tailPos":6154,"headPos":6125,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns : Set (α → M)\nf : α → β\nφ : Formula (L[[↑A]]) α\n⊢ Definable A L ((fun g => g ∘ f) ⁻¹' setOf (Formula.Realize φ))"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns : Set (α → M)\nf : α → β\nφ : Formula (L[[↑A]]) α\n⊢ (fun g => g ∘ f) ⁻¹' setOf (Formula.Realize φ) = setOf (Formula.Realize (Formula.relabel f φ))"],"content":"refine' ⟨φ.relabel f, _⟩"},{"tailPos":6160,"headPos":6157,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns : Set (α → M)\nf : α → β\nφ : Formula (L[[↑A]]) α\n⊢ (fun g => g ∘ f) ⁻¹' setOf (Formula.Realize φ) = setOf (Formula.Realize (Formula.relabel f φ))"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns : Set (α → M)\nf : α → β\nφ : Formula (L[[↑A]]) α\nx✝ : β → M\n⊢ x✝ ∈ (fun g => g ∘ f) ⁻¹' setOf (Formula.Realize φ) ↔ x✝ ∈ setOf (Formula.Realize (Formula.relabel f φ))"],"content":"ext"},{"tailPos":6235,"headPos":6163,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns : Set (α → M)\nf : α → β\nφ : Formula (L[[↑A]]) α\nx✝ : β → M\n⊢ x✝ ∈ (fun g => g ∘ f) ⁻¹' setOf (Formula.Realize φ) ↔ x✝ ∈ setOf (Formula.Realize (Formula.relabel f φ))"],"goalsAfter":[],"content":"simp only [Set.preimage_setOf_eq, mem_setOf_eq, Formula.realize_relabel]"},{"tailPos":6235,"headPos":6097,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\nf : α → β\ns : Set (α → M)\nh : Definable A L s\n⊢ Definable A L ((fun g => g ∘ f) ⁻¹' s)"],"goalsAfter":[],"content":"obtain ⟨φ, rfl⟩ := h\n  refine' ⟨φ.relabel f, _⟩\n  ext\n  simp only [Set.preimage_setOf_eq, mem_setOf_eq, Formula.realize_relabel]"},{"tailPos":6094,"headPos":6092,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\nf : α → β\ns : Set (α → M)\nh : Definable A L s\n⊢ Definable A L ((fun g => g ∘ f) ⁻¹' s)"],"goalsAfter":[],"content":"by"},{"tailPos":6235,"headPos":6092,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\nf : α → β\ns : Set (α → M)\nh : Definable A L s\n⊢ Definable A L ((fun g => g ∘ f) ⁻¹' s)"],"goalsAfter":[],"content":"by\n  obtain ⟨φ, rfl⟩ := h\n  refine' ⟨φ.relabel f, _⟩\n  ext\n  simp only [Set.preimage_setOf_eq, mem_setOf_eq, Formula.realize_relabel]"},{"tailPos":6508,"headPos":6459,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ (fun g => g ∘ ↑f.symm) ⁻¹' s = (fun g => g ∘ ↑f) '' s"],"content":"refine' (congr rfl _).mp (h.preimage_comp f.symm)"},{"tailPos":6543,"headPos":6515,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ (fun g => g ∘ ↑f.symm) ⁻¹' s = (fun g => g ∘ ↑f) '' s"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ (fun g => g ∘ ↑f.symm) ⁻¹' s = ?m.17540 ⁻¹' s","case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.LeftInverse ?m.17540 fun g => g ∘ ↑f","case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse ?m.17540 fun g => g ∘ ↑f","M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ (α → M) → β → M"],"content":"image_eq_preimage_of_inverse"},{"tailPos":6544,"headPos":6543,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ (fun g => g ∘ ↑f.symm) ⁻¹' s = ?m.17540 ⁻¹' s","case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.LeftInverse ?m.17540 fun g => g ∘ ↑f","case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse ?m.17540 fun g => g ∘ ↑f","M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ (α → M) → β → M"],"goalsAfter":["case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.LeftInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f","case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"content":"]"},{"tailPos":6544,"headPos":6511,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ (fun g => g ∘ ↑f.symm) ⁻¹' s = (fun g => g ∘ ↑f) '' s"],"goalsAfter":["case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.LeftInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f","case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"content":"rw [image_eq_preimage_of_inverse]"},{"tailPos":6549,"headPos":6547,"goalsBefore":["case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.LeftInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f","case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"goalsAfter":["case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.LeftInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"content":"·"},{"tailPos":6557,"headPos":6550,"goalsBefore":["case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.LeftInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"goalsAfter":["case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\ni : β → M\n⊢ (fun g => g ∘ ↑f.symm) ((fun g => g ∘ ↑f) i) = i"],"content":"intro i"},{"tailPos":6567,"headPos":6562,"goalsBefore":["case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\ni : β → M\n⊢ (fun g => g ∘ ↑f.symm) ((fun g => g ∘ ↑f) i) = i"],"goalsAfter":["case h₁.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\ni : β → M\nb : β\n⊢ (fun g => g ∘ ↑f.symm) ((fun g => g ∘ ↑f) i) b = i b"],"content":"ext b"},{"tailPos":6627,"headPos":6572,"goalsBefore":["case h₁.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\ni : β → M\nb : β\n⊢ (fun g => g ∘ ↑f.symm) ((fun g => g ∘ ↑f) i) b = i b"],"goalsAfter":[],"content":"simp only [Function.comp_apply, Equiv.apply_symm_apply]"},{"tailPos":6627,"headPos":6550,"goalsBefore":["case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.LeftInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"goalsAfter":[],"content":"intro i\n    ext b\n    simp only [Function.comp_apply, Equiv.apply_symm_apply]"},{"tailPos":6627,"headPos":6547,"goalsBefore":["case h₁\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.LeftInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f","case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"goalsAfter":["case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"content":"· intro i\n    ext b\n    simp only [Function.comp_apply, Equiv.apply_symm_apply]"},{"tailPos":6632,"headPos":6630,"goalsBefore":["case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"goalsAfter":["case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"content":"·"},{"tailPos":6640,"headPos":6633,"goalsBefore":["case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"goalsAfter":["case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\ni : α → M\n⊢ (fun g => g ∘ ↑f) ((fun g => g ∘ ↑f.symm) i) = i"],"content":"intro i"},{"tailPos":6650,"headPos":6645,"goalsBefore":["case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\ni : α → M\n⊢ (fun g => g ∘ ↑f) ((fun g => g ∘ ↑f.symm) i) = i"],"goalsAfter":["case h₂.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\ni : α → M\na : α\n⊢ (fun g => g ∘ ↑f) ((fun g => g ∘ ↑f.symm) i) a = i a"],"content":"ext a"},{"tailPos":6659,"headPos":6655,"goalsBefore":["case h₂.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\ni : α → M\na : α\n⊢ (fun g => g ∘ ↑f) ((fun g => g ∘ ↑f.symm) i) a = i a"],"goalsAfter":[],"content":"simp only [Function.comp_apply, Equiv.symm_apply_apply]"},{"tailPos":6659,"headPos":6633,"goalsBefore":["case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"goalsAfter":[],"content":"intro i\n    ext a\n    simp"},{"tailPos":6659,"headPos":6630,"goalsBefore":["case h₂\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Function.RightInverse (fun g => g ∘ ↑f.symm) fun g => g ∘ ↑f"],"goalsAfter":[],"content":"· intro i\n    ext a\n    simp"},{"tailPos":6659,"headPos":6459,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":[],"content":"refine' (congr rfl _).mp (h.preimage_comp f.symm)\n  rw [image_eq_preimage_of_inverse]\n  · intro i\n    ext b\n    simp only [Function.comp_apply, Equiv.apply_symm_apply]\n  · intro i\n    ext a\n    simp"},{"tailPos":6456,"headPos":6454,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":[],"content":"by"},{"tailPos":6659,"headPos":6454,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ≃ β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":[],"content":"by\n  refine' (congr rfl _).mp (h.preimage_comp f.symm)\n  rw [image_eq_preimage_of_inverse]\n  · intro i\n    ext b\n    simp only [Function.comp_apply, Equiv.apply_symm_apply]\n  · intro i\n    ext a\n    simp"},{"tailPos":7019,"headPos":6994,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns✝ : Set (α → M)\nm : ℕ\ns : Set (α ⊕ Fin m → M)\nh : Definable A L s\n⊢ Definable A L ((fun g => g ∘ Sum.inl) '' s)"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\n⊢ Definable A L ((fun g => g ∘ Sum.inl) '' setOf (Formula.Realize φ))"],"content":"obtain ⟨φ, rfl⟩ := h"},{"tailPos":7073,"headPos":7022,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\n⊢ Definable A L ((fun g => g ∘ Sum.inl) '' setOf (Formula.Realize φ))"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\n⊢ (fun g => g ∘ Sum.inl) '' setOf (Formula.Realize φ) =\n    setOf (Formula.Realize (BoundedFormula.exs (BoundedFormula.relabel id φ)))"],"content":"refine' ⟨(BoundedFormula.relabel id φ).exs, _⟩"},{"tailPos":7081,"headPos":7076,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\n⊢ (fun g => g ∘ Sum.inl) '' setOf (Formula.Realize φ) =\n    setOf (Formula.Realize (BoundedFormula.exs (BoundedFormula.relabel id φ)))"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ x ∈ (fun g => g ∘ Sum.inl) '' setOf (Formula.Realize φ) ↔\n    x ∈ setOf (Formula.Realize (BoundedFormula.exs (BoundedFormula.relabel id φ)))"],"content":"ext x"},{"tailPos":7244,"headPos":7084,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ x ∈ (fun g => g ∘ Sum.inl) '' setOf (Formula.Realize φ) ↔\n    x ∈ setOf (Formula.Realize (BoundedFormula.exs (BoundedFormula.relabel id φ)))"],"goalsAfter":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x) ↔\n    ∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))"],"content":"simp only [Set.mem_image, mem_setOf_eq, BoundedFormula.realize_exs,\n    BoundedFormula.realize_relabel, Function.comp.right_id, Fin.castAdd_zero, Fin.cast_refl]"},{"tailPos":7258,"headPos":7247,"goalsBefore":["case intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x) ↔\n    ∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))"],"goalsAfter":["case intro.h.mp\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x) →\n    ∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))","case intro.h.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))) →\n    ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"content":"constructor"},{"tailPos":7263,"headPos":7261,"goalsBefore":["case intro.h.mp\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x) →\n    ∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))","case intro.h.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))) →\n    ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"goalsAfter":["case intro.h.mp\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x) →\n    ∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))"],"content":"·"},{"tailPos":7287,"headPos":7264,"goalsBefore":["case intro.h.mp\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x) →\n    ∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))"],"goalsAfter":["case intro.h.mp.intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\ny : α ⊕ Fin m → M\nhy : Formula.Realize φ y\n⊢ ∃ xs, BoundedFormula.Realize φ (Sum.elim (y ∘ Sum.inl) (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))"],"content":"rintro ⟨y, hy, rfl⟩"},{"tailPos":7402,"headPos":7292,"goalsBefore":["case intro.h.mp.intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\ny : α ⊕ Fin m → M\nhy : Formula.Realize φ y\n⊢ ∃ xs, BoundedFormula.Realize φ (Sum.elim (y ∘ Sum.inl) (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))"],"goalsAfter":[],"content":"exact\n      ⟨y ∘ Sum.inr, (congr (congr rfl (Sum.elim_comp_inl_inr y).symm) (funext finZeroElim)).mp hy⟩"},{"tailPos":7402,"headPos":7264,"goalsBefore":["case intro.h.mp\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x) →\n    ∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))"],"goalsAfter":[],"content":"rintro ⟨y, hy, rfl⟩\n    exact\n      ⟨y ∘ Sum.inr, (congr (congr rfl (Sum.elim_comp_inl_inr y).symm) (funext finZeroElim)).mp hy⟩"},{"tailPos":7402,"headPos":7261,"goalsBefore":["case intro.h.mp\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x) →\n    ∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))","case intro.h.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))) →\n    ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"goalsAfter":["case intro.h.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))) →\n    ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"content":"· rintro ⟨y, hy, rfl⟩\n    exact\n      ⟨y ∘ Sum.inr, (congr (congr rfl (Sum.elim_comp_inl_inr y).symm) (funext finZeroElim)).mp hy⟩"},{"tailPos":7407,"headPos":7405,"goalsBefore":["case intro.h.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))) →\n    ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"goalsAfter":["case intro.h.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))) →\n    ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"content":"·"},{"tailPos":7426,"headPos":7408,"goalsBefore":["case intro.h.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))) →\n    ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"goalsAfter":["case intro.h.mpr.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\ny : Fin (m + 0) → M\nhy : BoundedFormula.Realize φ (Sum.elim x (y ∘ ↑(OrderIso.refl (Fin m)))) (y ∘ ↑(Fin.natAdd m))\n⊢ ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"content":"rintro ⟨y, hy⟩"},{"tailPos":7518,"headPos":7431,"goalsBefore":["case intro.h.mpr.intro\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\ny : Fin (m + 0) → M\nhy : BoundedFormula.Realize φ (Sum.elim x (y ∘ ↑(OrderIso.refl (Fin m)))) (y ∘ ↑(Fin.natAdd m))\n⊢ ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"goalsAfter":[],"content":"exact ⟨Sum.elim x y, (congr rfl (funext finZeroElim)).mp hy, Sum.elim_comp_inl _ _⟩"},{"tailPos":7518,"headPos":7408,"goalsBefore":["case intro.h.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))) →\n    ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"goalsAfter":[],"content":"rintro ⟨y, hy⟩\n    exact ⟨Sum.elim x y, (congr rfl (funext finZeroElim)).mp hy, Sum.elim_comp_inl _ _⟩"},{"tailPos":7518,"headPos":7405,"goalsBefore":["case intro.h.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns : Set (α → M)\nm : ℕ\nφ : Formula (L[[↑A]]) (α ⊕ Fin m)\nx : α → M\n⊢ (∃ xs, BoundedFormula.Realize φ (Sum.elim x (xs ∘ ↑(OrderIso.refl (Fin m)))) (xs ∘ ↑(Fin.natAdd m))) →\n    ∃ x_1, Formula.Realize φ x_1 ∧ x_1 ∘ Sum.inl = x"],"goalsAfter":[],"content":"· rintro ⟨y, hy⟩\n    exact ⟨Sum.elim x y, (congr rfl (funext finZeroElim)).mp hy, Sum.elim_comp_inl _ _⟩"},{"tailPos":7518,"headPos":6994,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns✝ : Set (α → M)\nm : ℕ\ns : Set (α ⊕ Fin m → M)\nh : Definable A L s\n⊢ Definable A L ((fun g => g ∘ Sum.inl) '' s)"],"goalsAfter":[],"content":"obtain ⟨φ, rfl⟩ := h\n  refine' ⟨(BoundedFormula.relabel id φ).exs, _⟩\n  ext x\n  simp only [Set.mem_image, mem_setOf_eq, BoundedFormula.realize_exs,\n    BoundedFormula.realize_relabel, Function.comp.right_id, Fin.castAdd_zero, Fin.cast_refl]\n  constructor\n  · rintro ⟨y, hy, rfl⟩\n    exact\n      ⟨y ∘ Sum.inr, (congr (congr rfl (Sum.elim_comp_inl_inr y).symm) (funext finZeroElim)).mp hy⟩\n  · rintro ⟨y, hy⟩\n    exact ⟨Sum.elim x y, (congr rfl (funext finZeroElim)).mp hy, Sum.elim_comp_inl _ _⟩"},{"tailPos":6991,"headPos":6989,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns✝ : Set (α → M)\nm : ℕ\ns : Set (α ⊕ Fin m → M)\nh : Definable A L s\n⊢ Definable A L ((fun g => g ∘ Sum.inl) '' s)"],"goalsAfter":[],"content":"by"},{"tailPos":7518,"headPos":6989,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝ : Structure L M\nα : Type u₁\nβ : Type ?u.18147\nB : Set M\ns✝ : Set (α → M)\nm : ℕ\ns : Set (α ⊕ Fin m → M)\nh : Definable A L s\n⊢ Definable A L ((fun g => g ∘ Sum.inl) '' s)"],"goalsAfter":[],"content":"by\n  obtain ⟨φ, rfl⟩ := h\n  refine' ⟨(BoundedFormula.relabel id φ).exs, _⟩\n  ext x\n  simp only [Set.mem_image, mem_setOf_eq, BoundedFormula.realize_exs,\n    BoundedFormula.realize_relabel, Function.comp.right_id, Fin.castAdd_zero, Fin.cast_refl]\n  constructor\n  · rintro ⟨y, hy, rfl⟩\n    exact\n      ⟨y ∘ Sum.inr, (congr (congr rfl (Sum.elim_comp_inl_inr y).symm) (funext finZeroElim)).mp hy⟩\n  · rintro ⟨y, hy⟩\n    exact ⟨Sum.elim x y, (congr rfl (funext finZeroElim)).mp hy, Sum.elim_comp_inl _ _⟩"},{"tailPos":7882,"headPos":7857,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\nval✝ : Fintype β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"content":"cases nonempty_fintype β"},{"tailPos":8173,"headPos":7887,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\nval✝ : Fintype β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\nval✝ : Fintype β\nx : α → M\n⊢ x ∈\n      (fun g => g ∘ Sum.inl) ''\n        ((fun g =>\n            g ∘\n              ↑(Equiv.sumCongr (Equiv.ofInjective ↑f (_ : Function.Injective ↑f))\n                  (Fintype.equivFin ↑(range ↑fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range ↑f))) '' s)) ↔\n    x ∈ (fun g => g ∘ ↑f) '' s"],"content":"refine'\n      (congr rfl (ext fun x => _)).mp\n        (((h.image_comp_equiv (Equiv.Set.sumCompl (range f))).image_comp_equiv\n              (Equiv.sumCongr (Equiv.ofInjective f f.injective)\n                (Fintype.equivFin (↥((range f)ᶜ))).symm)).image_comp_sum_inl_fin\n          _)"},{"tailPos":8239,"headPos":8178,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\nval✝ : Fintype β\nx : α → M\n⊢ x ∈\n      (fun g => g ∘ Sum.inl) ''\n        ((fun g =>\n            g ∘\n              ↑(Equiv.sumCongr (Equiv.ofInjective ↑f (_ : Function.Injective ↑f))\n                  (Fintype.equivFin ↑(range ↑fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range ↑f))) '' s)) ↔\n    x ∈ (fun g => g ∘ ↑f) '' s"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\nval✝ : Fintype β\nx : α → M\n⊢ (∃ a,\n      a ∈ s ∧\n        ((a ∘ ↑(Equiv.Set.sumCompl (range ↑f))) ∘\n              ↑(Equiv.sumCongr (Equiv.ofInjective ↑f (_ : Function.Injective ↑f))\n                  (Fintype.equivFin ↑(range ↑fᶜ)).symm)) ∘\n            Sum.inl =\n          x) ↔\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ ↑f = x"],"content":"simp only [mem_preimage, mem_image, exists_exists_and_eq_and]"},{"tailPos":8332,"headPos":8244,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\nval✝ : Fintype β\nx : α → M\n⊢ (∃ a,\n      a ∈ s ∧\n        ((a ∘ ↑(Equiv.Set.sumCompl (range ↑f))) ∘\n              ↑(Equiv.sumCongr (Equiv.ofInjective ↑f (_ : Function.Injective ↑f))\n                  (Fintype.equivFin ↑(range ↑fᶜ)).symm)) ∘\n            Sum.inl =\n          x) ↔\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ ↑f = x"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\nval✝ : Fintype β\nx : α → M\ny : β → M\nx✝ : y ∈ s\na : α\n⊢ (((y ∘ ↑(Equiv.Set.sumCompl (range ↑f))) ∘\n          ↑(Equiv.sumCongr (Equiv.ofInjective ↑f (_ : Function.Injective ↑f)) (Fintype.equivFin ↑(range ↑fᶜ)).symm)) ∘\n        Sum.inl)\n      a =\n    (y ∘ ↑f) a"],"content":"refine' exists_congr fun y => and_congr_right fun _ => Eq.congr_left (funext fun a => _)"},{"tailPos":8341,"headPos":8337,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\nval✝ : Fintype β\nx : α → M\ny : β → M\nx✝ : y ∈ s\na : α\n⊢ (((y ∘ ↑(Equiv.Set.sumCompl (range ↑f))) ∘\n          ↑(Equiv.sumCongr (Equiv.ofInjective ↑f (_ : Function.Injective ↑f)) (Fintype.equivFin ↑(range ↑fᶜ)).symm)) ∘\n        Sum.inl)\n      a =\n    (y ∘ ↑f) a"],"goalsAfter":[],"content":"simp only [Function.comp_apply, Equiv.sumCongr_apply, Sum.map_inl, Equiv.ofInjective_apply,\n  Equiv.Set.sumCompl_apply_inl]"},{"tailPos":8341,"headPos":7857,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":[],"content":"cases nonempty_fintype β\n    refine'\n      (congr rfl (ext fun x => _)).mp\n        (((h.image_comp_equiv (Equiv.Set.sumCompl (range f))).image_comp_equiv\n              (Equiv.sumCongr (Equiv.ofInjective f f.injective)\n                (Fintype.equivFin (↥((range f)ᶜ))).symm)).image_comp_sum_inl_fin\n          _)\n    simp only [mem_preimage, mem_image, exists_exists_and_eq_and]\n    refine' exists_congr fun y => and_congr_right fun _ => Eq.congr_left (funext fun a => _)\n    simp"},{"tailPos":8341,"headPos":7843,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":[],"content":"classical\n    cases nonempty_fintype β\n    refine'\n      (congr rfl (ext fun x => _)).mp\n        (((h.image_comp_equiv (Equiv.Set.sumCompl (range f))).image_comp_equiv\n              (Equiv.sumCongr (Equiv.ofInjective f f.injective)\n                (Fintype.equivFin (↥((range f)ᶜ))).symm)).image_comp_sum_inl_fin\n          _)\n    simp only [mem_preimage, mem_image, exists_exists_and_eq_and]\n    refine' exists_congr fun y => and_congr_right fun _ => Eq.congr_left (funext fun a => _)\n    simp"},{"tailPos":7840,"headPos":7838,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":[],"content":"by"},{"tailPos":8341,"headPos":7838,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝¹ : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α ↪ β\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ ↑f) '' s)"],"goalsAfter":[],"content":"by\n  classical\n    cases nonempty_fintype β\n    refine'\n      (congr rfl (ext fun x => _)).mp\n        (((h.image_comp_equiv (Equiv.Set.sumCompl (range f))).image_comp_equiv\n              (Equiv.sumCongr (Equiv.ofInjective f f.injective)\n                (Fintype.equivFin (↥((range f)ᶜ))).symm)).image_comp_sum_inl_fin\n          _)\n    simp only [mem_preimage, mem_image, exists_exists_and_eq_and]\n    refine' exists_congr fun y => and_congr_right fun _ => Eq.congr_left (funext fun a => _)\n    simp"},{"tailPos":8703,"headPos":8678,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"goalsAfter":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝ : Fintype α\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"content":"cases nonempty_fintype α"},{"tailPos":8733,"headPos":8708,"goalsBefore":["case intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝ : Fintype α\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"goalsAfter":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"content":"cases nonempty_fintype β"},{"tailPos":9003,"headPos":8738,"goalsBefore":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"goalsAfter":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"content":"have h :=\n      (((h.image_comp_equiv (Equiv.Set.sumCompl (range f))).image_comp_equiv\n                (Equiv.sumCongr (_root_.Equiv.refl _)\n                  (Fintype.equivFin _).symm)).image_comp_sum_inl_fin\n            _).preimage_comp\n        (rangeSplitting f)"},{"tailPos":9347,"headPos":9254,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ ∀ (a : α), Definable A L {x | x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\na : α\n⊢ ∀ (x : α → M),\n    x ∈ {x | x a = x (rangeSplitting f (rangeFactorization f a))} ↔\n      x ∈ setOf (Formula.Realize (Term.equal (var a) (var (rangeSplitting f (rangeFactorization f a)))))"],"content":"refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩"},{"tailPos":9362,"headPos":9358,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\na : α\n⊢ ∀ (x : α → M),\n    x ∈ {x | x a = x (rangeSplitting f (rangeFactorization f a))} ↔\n      x ∈ setOf (Formula.Realize (Term.equal (var a) (var (rangeSplitting f (rangeFactorization f a)))))"],"goalsAfter":[],"content":"simp only [mem_setOf_eq, Formula.realize_equal, Term.realize_var, implies_true]"},{"tailPos":9362,"headPos":9254,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ ∀ (a : α), Definable A L {x | x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":[],"content":"refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩\n          simp"},{"tailPos":9243,"headPos":9241,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ ∀ (a : α), Definable A L {x | x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":[],"content":"by"},{"tailPos":9362,"headPos":9241,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ ∀ (a : α), Definable A L {x | x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":[],"content":"by\n          refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩\n          simp"},{"tailPos":9362,"headPos":9128,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : ∀ (a : α), Definable A L {x | x a = x (rangeSplitting f (rangeFactorization f a))}\n⊢ Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}"],"content":"have h' : ∀ a,\n        A.Definable L { x : α → M | x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n          refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩\n          simp"},{"tailPos":9441,"headPos":9369,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : ∀ (a : α), Definable A L {x | x a = x (rangeSplitting f (rangeFactorization f a))}\n⊢ Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : ∀ (a : α), Definable A L {x | x a = x (rangeSplitting f (rangeFactorization f a))}\n⊢ ∀ (x : α → M),\n    (x ∈ ⋂ (i : α) (_ : i ∈ Finset.univ), {x | x i = x (rangeSplitting f (rangeFactorization f i))}) ↔\n      x ∈ {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}"],"content":"refine' (congr rfl (ext _)).mp (definable_finset_biInter h' Finset.univ)"},{"tailPos":9452,"headPos":9448,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : ∀ (a : α), Definable A L {x | x a = x (rangeSplitting f (rangeFactorization f a))}\n⊢ ∀ (x : α → M),\n    (x ∈ ⋂ (i : α) (_ : i ∈ Finset.univ), {x | x i = x (rangeSplitting f (rangeFactorization f i))}) ↔\n      x ∈ {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":[],"content":"simp only [Finset.mem_univ, iInter_true, mem_iInter, mem_setOf_eq, implies_true]"},{"tailPos":9452,"headPos":9128,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":[],"content":"have h' : ∀ a,\n        A.Definable L { x : α → M | x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n          refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩\n          simp\n      refine' (congr rfl (ext _)).mp (definable_finset_biInter h' Finset.univ)\n      simp"},{"tailPos":9121,"headPos":9119,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":[],"content":"by"},{"tailPos":9452,"headPos":9119,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}"],"goalsAfter":[],"content":"by\n      have h' : ∀ a,\n        A.Definable L { x : α → M | x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n          refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩\n          simp\n      refine' (congr rfl (ext _)).mp (definable_finset_biInter h' Finset.univ)\n      simp"},{"tailPos":9452,"headPos":9008,"goalsBefore":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"goalsAfter":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"content":"have h' :\n      A.Definable L { x : α → M | ∀ a, x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n      have h' : ∀ a,\n        A.Definable L { x : α → M | x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n          refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩\n          simp\n      refine' (congr rfl (ext _)).mp (definable_finset_biInter h' Finset.univ)\n      simp"},{"tailPos":9509,"headPos":9457,"goalsBefore":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"goalsAfter":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ x ∈\n      (fun g => g ∘ rangeSplitting f) ⁻¹'\n          ((fun g => g ∘ Sum.inl) ''\n            ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n              ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))) ∩\n        {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))} ↔\n    x ∈ (fun g => g ∘ f) '' s"],"content":"refine' (congr rfl (ext fun x => _)).mp (h.inter h')"},{"tailPos":9627,"headPos":9514,"goalsBefore":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ x ∈\n      (fun g => g ∘ rangeSplitting f) ⁻¹'\n          ((fun g => g ∘ Sum.inl) ''\n            ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n              ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))) ∩\n        {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))} ↔\n    x ∈ (fun g => g ∘ f) '' s"],"goalsAfter":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ ((∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))) ↔\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x"],"content":"simp only [Equiv.coe_trans, mem_inter_iff, mem_preimage, mem_image, exists_exists_and_eq_and,\n      mem_setOf_eq]"},{"tailPos":9643,"headPos":9632,"goalsBefore":["case intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ ((∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))) ↔\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x"],"goalsAfter":["case intro.intro.mp\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ ((∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))) →\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x","case intro.intro.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ (∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x) →\n    (∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))"],"content":"constructor"},{"tailPos":9650,"headPos":9648,"goalsBefore":["case intro.intro.mp\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ ((∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))) →\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x","case intro.intro.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ (∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x) →\n    (∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mp\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ ((∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))) →\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x"],"content":"·"},{"tailPos":9683,"headPos":9651,"goalsBefore":["case intro.intro.mp\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ ((∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))) →\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x"],"goalsAfter":["case intro.intro.mp.intro.intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\n⊢ ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x"],"content":"rintro ⟨⟨y, ys, hy⟩, hx⟩"},{"tailPos":9712,"headPos":9690,"goalsBefore":["case intro.intro.mp.intro.intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\n⊢ ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x"],"goalsAfter":["case intro.intro.mp.intro.intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\n⊢ y ∘ f = x"],"content":"refine' ⟨y, ys, _⟩"},{"tailPos":9724,"headPos":9719,"goalsBefore":["case intro.intro.mp.intro.intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\n⊢ y ∘ f = x"],"goalsAfter":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a = x a"],"content":"ext a"},{"tailPos":9740,"headPos":9735,"goalsBefore":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a = x a"],"goalsAfter":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a = x (rangeSplitting f (rangeFactorization f a))"],"content":"hx a,"},{"tailPos":9774,"headPos":9741,"goalsBefore":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a = x (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a = (x ∘ rangeSplitting f) (rangeFactorization f a)"],"content":"← Function.comp_apply (f := x),"},{"tailPos":9781,"headPos":9775,"goalsBefore":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a = (x ∘ rangeSplitting f) (rangeFactorization f a)"],"goalsAfter":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a =\n    (((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n          ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n        Sum.inl)\n      (rangeFactorization f a)"],"content":"← hy"},{"tailPos":9782,"headPos":9781,"goalsBefore":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a =\n    (((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n          ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n        Sum.inl)\n      (rangeFactorization f a)"],"goalsAfter":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a =\n    (((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n          ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n        Sum.inl)\n      (rangeFactorization f a)"],"content":"]"},{"tailPos":9782,"headPos":9731,"goalsBefore":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a = x a"],"goalsAfter":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a =\n    (((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n          ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n        Sum.inl)\n      (rangeFactorization f a)"],"content":"rw [hx a, ← Function.comp_apply (f := x), ← hy]"},{"tailPos":9793,"headPos":9789,"goalsBefore":["case intro.intro.mp.intro.intro.intro.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\nhx : ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))\ny : β → M\nys : y ∈ s\nhy :\n  ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    x ∘ rangeSplitting f\na : α\n⊢ (y ∘ f) a =\n    (((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n          ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n        Sum.inl)\n      (rangeFactorization f a)"],"goalsAfter":[],"content":"simp only [Function.comp_apply, Equiv.sumCongr_apply, Equiv.coe_refl, Sum.map_inl, id_eq,\n  Equiv.Set.sumCompl_apply_inl, rangeFactorization_coe]"},{"tailPos":9793,"headPos":9651,"goalsBefore":["case intro.intro.mp\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ ((∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))) →\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x"],"goalsAfter":[],"content":"rintro ⟨⟨y, ys, hy⟩, hx⟩\n      refine' ⟨y, ys, _⟩\n      ext a\n      rw [hx a, ← Function.comp_apply (f := x), ← hy]\n      simp"},{"tailPos":9793,"headPos":9648,"goalsBefore":["case intro.intro.mp\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ ((∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))) →\n    ∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x","case intro.intro.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ (∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x) →\n    (∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ (∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x) →\n    (∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))"],"content":"· rintro ⟨⟨y, ys, hy⟩, hx⟩\n      refine' ⟨y, ys, _⟩\n      ext a\n      rw [hx a, ← Function.comp_apply (f := x), ← hy]\n      simp"},{"tailPos":9800,"headPos":9798,"goalsBefore":["case intro.intro.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ (∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x) →\n    (∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ (∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x) →\n    (∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))"],"content":"·"},{"tailPos":9824,"headPos":9801,"goalsBefore":["case intro.intro.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ (∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x) →\n    (∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mpr.intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\n⊢ (∃ a,\n      a ∈ s ∧\n        ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n              ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n            Sum.inl =\n          (y ∘ f) ∘ rangeSplitting f) ∧\n    ∀ (a : α), (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"content":"rintro ⟨y, ys, rfl⟩"},{"tailPos":9871,"headPos":9831,"goalsBefore":["case intro.intro.mpr.intro.intro\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\n⊢ (∃ a,\n      a ∈ s ∧\n        ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n              ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n            Sum.inl =\n          (y ∘ f) ∘ rangeSplitting f) ∧\n    ∀ (a : α), (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mpr.intro.intro.refine'_1\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\n⊢ ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    (y ∘ f) ∘ rangeSplitting f","case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"content":"refine' ⟨⟨y, ys, _⟩, fun a => _⟩"},{"tailPos":9880,"headPos":9878,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_1\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\n⊢ ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    (y ∘ f) ∘ rangeSplitting f","case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mpr.intro.intro.refine'_1\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\n⊢ ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    (y ∘ f) ∘ rangeSplitting f"],"content":"·"},{"tailPos":9884,"headPos":9881,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_1\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\n⊢ ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    (y ∘ f) ∘ rangeSplitting f"],"goalsAfter":["case intro.intro.mpr.intro.intro.refine'_1.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\nx✝ : ↑(range f)\n⊢ (((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n          ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n        Sum.inl)\n      x✝ =\n    ((y ∘ f) ∘ rangeSplitting f) x✝"],"content":"ext"},{"tailPos":9926,"headPos":9893,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_1.h\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\nx✝ : ↑(range f)\n⊢ (((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n          ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n        Sum.inl)\n      x✝ =\n    ((y ∘ f) ∘ rangeSplitting f) x✝"],"goalsAfter":[],"content":"simp [Set.apply_rangeSplitting f]"},{"tailPos":9926,"headPos":9881,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_1\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\n⊢ ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    (y ∘ f) ∘ rangeSplitting f"],"goalsAfter":[],"content":"ext\n        simp [Set.apply_rangeSplitting f]"},{"tailPos":9926,"headPos":9878,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_1\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\n⊢ ((y ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n        ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n      Sum.inl =\n    (y ∘ f) ∘ rangeSplitting f","case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"content":"· ext\n        simp [Set.apply_rangeSplitting f]"},{"tailPos":9935,"headPos":9933,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"content":"·"},{"tailPos":9960,"headPos":9940,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ y (f a) = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"content":"Function.comp_apply,"},{"tailPos":9981,"headPos":9961,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ y (f a) = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ y (f a) = y (f (rangeSplitting f (rangeFactorization f a)))"],"content":"Function.comp_apply,"},{"tailPos":10005,"headPos":9982,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ y (f a) = y (f (rangeSplitting f (rangeFactorization f a)))"],"goalsAfter":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ y (f a) = y ↑(rangeFactorization f a)"],"content":"apply_rangeSplitting f,"},{"tailPos":10038,"headPos":10016,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ y (f a) = y ↑(rangeFactorization f a)"],"goalsAfter":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ y (f a) = y (f a)"],"content":"rangeFactorization_coe"},{"tailPos":10039,"headPos":10038,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ y (f a) = y (f a)"],"goalsAfter":[],"content":"]"},{"tailPos":10039,"headPos":9936,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":[],"content":"rw [Function.comp_apply, Function.comp_apply, apply_rangeSplitting f,\n          rangeFactorization_coe]"},{"tailPos":10039,"headPos":9933,"goalsBefore":["case intro.intro.mpr.intro.intro.refine'_2\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\ny : β → M\nys : y ∈ s\na : α\n⊢ (y ∘ f) a = (y ∘ f) (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":[],"content":"· rw [Function.comp_apply, Function.comp_apply, apply_rangeSplitting f,\n          rangeFactorization_coe]"},{"tailPos":10039,"headPos":9801,"goalsBefore":["case intro.intro.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ (∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x) →\n    (∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":[],"content":"rintro ⟨y, ys, rfl⟩\n      refine' ⟨⟨y, ys, _⟩, fun a => _⟩\n      · ext\n        simp [Set.apply_rangeSplitting f]\n      · rw [Function.comp_apply, Function.comp_apply, apply_rangeSplitting f,\n          rangeFactorization_coe]"},{"tailPos":10039,"headPos":9798,"goalsBefore":["case intro.intro.mpr\nM : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh✝ : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\nval✝¹ : Fintype α\nval✝ : Fintype β\nh :\n  Definable A L\n    ((fun g => g ∘ rangeSplitting f) ⁻¹'\n      ((fun g => g ∘ Sum.inl) ''\n        ((fun g => g ∘ ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ''\n          ((fun g => g ∘ ↑(Equiv.Set.sumCompl (range f))) '' s))))\nh' : Definable A L {x | ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))}\nx : α → M\n⊢ (∃ x_1, x_1 ∈ s ∧ x_1 ∘ f = x) →\n    (∃ a,\n        a ∈ s ∧\n          ((a ∘ ↑(Equiv.Set.sumCompl (range f))) ∘\n                ↑(Equiv.sumCongr (Equiv.refl ↑(range f)) (Fintype.equivFin ↑(range fᶜ)).symm)) ∘\n              Sum.inl =\n            x ∘ rangeSplitting f) ∧\n      ∀ (a : α), x a = x (rangeSplitting f (rangeFactorization f a))"],"goalsAfter":[],"content":"· rintro ⟨y, ys, rfl⟩\n      refine' ⟨⟨y, ys, _⟩, fun a => _⟩\n      · ext\n        simp [Set.apply_rangeSplitting f]\n      · rw [Function.comp_apply, Function.comp_apply, apply_rangeSplitting f,\n          rangeFactorization_coe]"},{"tailPos":10039,"headPos":8678,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"goalsAfter":[],"content":"cases nonempty_fintype α\n    cases nonempty_fintype β\n    have h :=\n      (((h.image_comp_equiv (Equiv.Set.sumCompl (range f))).image_comp_equiv\n                (Equiv.sumCongr (_root_.Equiv.refl _)\n                  (Fintype.equivFin _).symm)).image_comp_sum_inl_fin\n            _).preimage_comp\n        (rangeSplitting f)\n    have h' :\n      A.Definable L { x : α → M | ∀ a, x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n      have h' : ∀ a,\n        A.Definable L { x : α → M | x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n          refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩\n          simp\n      refine' (congr rfl (ext _)).mp (definable_finset_biInter h' Finset.univ)\n      simp\n    refine' (congr rfl (ext fun x => _)).mp (h.inter h')\n    simp only [Equiv.coe_trans, mem_inter_iff, mem_preimage, mem_image, exists_exists_and_eq_and,\n      mem_setOf_eq]\n    constructor\n    · rintro ⟨⟨y, ys, hy⟩, hx⟩\n      refine' ⟨y, ys, _⟩\n      ext a\n      rw [hx a, ← Function.comp_apply (f := x), ← hy]\n      simp\n    · rintro ⟨y, ys, rfl⟩\n      refine' ⟨⟨y, ys, _⟩, fun a => _⟩\n      · ext\n        simp [Set.apply_rangeSplitting f]\n      · rw [Function.comp_apply, Function.comp_apply, apply_rangeSplitting f,\n          rangeFactorization_coe]"},{"tailPos":10039,"headPos":8664,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"goalsAfter":[],"content":"classical\n    cases nonempty_fintype α\n    cases nonempty_fintype β\n    have h :=\n      (((h.image_comp_equiv (Equiv.Set.sumCompl (range f))).image_comp_equiv\n                (Equiv.sumCongr (_root_.Equiv.refl _)\n                  (Fintype.equivFin _).symm)).image_comp_sum_inl_fin\n            _).preimage_comp\n        (rangeSplitting f)\n    have h' :\n      A.Definable L { x : α → M | ∀ a, x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n      have h' : ∀ a,\n        A.Definable L { x : α → M | x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n          refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩\n          simp\n      refine' (congr rfl (ext _)).mp (definable_finset_biInter h' Finset.univ)\n      simp\n    refine' (congr rfl (ext fun x => _)).mp (h.inter h')\n    simp only [Equiv.coe_trans, mem_inter_iff, mem_preimage, mem_image, exists_exists_and_eq_and,\n      mem_setOf_eq]\n    constructor\n    · rintro ⟨⟨y, ys, hy⟩, hx⟩\n      refine' ⟨y, ys, _⟩\n      ext a\n      rw [hx a, ← Function.comp_apply (f := x), ← hy]\n      simp\n    · rintro ⟨y, ys, rfl⟩\n      refine' ⟨⟨y, ys, _⟩, fun a => _⟩\n      · ext\n        simp [Set.apply_rangeSplitting f]\n      · rw [Function.comp_apply, Function.comp_apply, apply_rangeSplitting f,\n          rangeFactorization_coe]"},{"tailPos":8661,"headPos":8659,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"goalsAfter":[],"content":"by"},{"tailPos":10039,"headPos":8659,"goalsBefore":["M : Type w\nA : Set M\nL : Language\ninst✝² : Structure L M\nα : Type u₁\nβ : Type u_1\nB : Set M\ns✝ : Set (α → M)\ns : Set (β → M)\nh : Definable A L s\nf : α → β\ninst✝¹ : Finite α\ninst✝ : Finite β\n⊢ Definable A L ((fun g => g ∘ f) '' s)"],"goalsAfter":[],"content":"by\n  classical\n    cases nonempty_fintype α\n    cases nonempty_fintype β\n    have h :=\n      (((h.image_comp_equiv (Equiv.Set.sumCompl (range f))).image_comp_equiv\n                (Equiv.sumCongr (_root_.Equiv.refl _)\n                  (Fintype.equivFin _).symm)).image_comp_sum_inl_fin\n            _).preimage_comp\n        (rangeSplitting f)\n    have h' :\n      A.Definable L { x : α → M | ∀ a, x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n      have h' : ∀ a,\n        A.Definable L { x : α → M | x a = x (rangeSplitting f (rangeFactorization f a)) } := by\n          refine' fun a => ⟨(var a).equal (var (rangeSplitting f (rangeFactorization f a))), ext _⟩\n          simp\n      refine' (congr rfl (ext _)).mp (definable_finset_biInter h' Finset.univ)\n      simp\n    refine' (congr rfl (ext fun x => _)).mp (h.inter h')\n    simp only [Equiv.coe_trans, mem_inter_iff, mem_preimage, mem_image, exists_exists_and_eq_and,\n      mem_setOf_eq]\n    constructor\n    · rintro ⟨⟨y, ys, hy⟩, hx⟩\n      refine' ⟨y, ys, _⟩\n      ext a\n      rw [hx a, ← Function.comp_apply (f := x), ← hy]\n      simp\n    · rintro ⟨y, ys, rfl⟩\n      refine' ⟨⟨y, ys, _⟩, fun a => _⟩\n      · ext\n        simp [Set.apply_rangeSplitting f]\n      · rw [Function.comp_apply, Function.comp_apply, apply_rangeSplitting f,\n          rangeFactorization_coe]"}]