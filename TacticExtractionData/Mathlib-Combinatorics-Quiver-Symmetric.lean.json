[{"tailPos":2715,"headPos":2703,"goalsBefore":["U : Type ?u.581\nV : Type u_1\nW : Type ?u.587\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\n⊢ reverse (reverse f) = f"],"goalsAfter":[],"content":"apply h.inv'"},{"tailPos":2702,"headPos":2700,"goalsBefore":["U : Type ?u.581\nV : Type u_1\nW : Type ?u.587\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\n⊢ reverse (reverse f) = f"],"goalsAfter":[],"content":"by"},{"tailPos":2715,"headPos":2700,"goalsBefore":["U : Type ?u.581\nV : Type u_1\nW : Type ?u.587\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\n⊢ reverse (reverse f) = f"],"goalsAfter":[],"content":"by apply h.inv'"},{"tailPos":2910,"headPos":2899,"goalsBefore":["U : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g ↔ f = g"],"goalsAfter":["case mp\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g → f = g","case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ f = g → reverse f = reverse g"],"content":"constructor"},{"tailPos":2915,"headPos":2913,"goalsBefore":["case mp\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g → f = g","case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ f = g → reverse f = reverse g"],"goalsAfter":["case mp\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g → f = g"],"content":"·"},{"tailPos":2924,"headPos":2916,"goalsBefore":["case mp\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g → f = g"],"goalsAfter":["case mp\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\nh : reverse f = reverse g\n⊢ f = g"],"content":"rintro h"},{"tailPos":2967,"headPos":2929,"goalsBefore":["case mp\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\nh : reverse f = reverse g\n⊢ f = g"],"goalsAfter":[],"content":"simpa only [reverse_reverse] using congr_arg Quiver.reverse h"},{"tailPos":2967,"headPos":2916,"goalsBefore":["case mp\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g → f = g"],"goalsAfter":[],"content":"rintro h\n    simpa using congr_arg Quiver.reverse h"},{"tailPos":2967,"headPos":2913,"goalsBefore":["case mp\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g → f = g","case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ f = g → reverse f = reverse g"],"goalsAfter":["case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ f = g → reverse f = reverse g"],"content":"· rintro h\n    simpa using congr_arg Quiver.reverse h"},{"tailPos":2972,"headPos":2970,"goalsBefore":["case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ f = g → reverse f = reverse g"],"goalsAfter":["case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ f = g → reverse f = reverse g"],"content":"·"},{"tailPos":2981,"headPos":2973,"goalsBefore":["case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ f = g → reverse f = reverse g"],"goalsAfter":["case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\nh : f = g\n⊢ reverse f = reverse g"],"content":"rintro h"},{"tailPos":2991,"headPos":2986,"goalsBefore":["case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\nh : f = g\n⊢ reverse f = reverse g"],"goalsAfter":[],"content":"congr"},{"tailPos":2991,"headPos":2973,"goalsBefore":["case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ f = g → reverse f = reverse g"],"goalsAfter":[],"content":"rintro h\n    congr"},{"tailPos":2991,"headPos":2970,"goalsBefore":["case mpr\nU : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ f = g → reverse f = reverse g"],"goalsAfter":[],"content":"· rintro h\n    congr"},{"tailPos":2991,"headPos":2899,"goalsBefore":["U : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g ↔ f = g"],"goalsAfter":[],"content":"constructor\n  · rintro h\n    simpa using congr_arg Quiver.reverse h\n  · rintro h\n    congr"},{"tailPos":2896,"headPos":2894,"goalsBefore":["U : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g ↔ f = g"],"goalsAfter":[],"content":"by"},{"tailPos":2991,"headPos":2894,"goalsBefore":["U : Type ?u.753\nV : Type u_1\nW : Type ?u.759\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf g : a ⟶ b\n⊢ reverse f = reverse g ↔ f = g"],"goalsAfter":[],"content":"by\n  constructor\n  · rintro h\n    simpa using congr_arg Quiver.reverse h\n  · rintro h\n    congr"},{"tailPos":3193,"headPos":3178,"goalsBefore":["U : Type ?u.1267\nV : Type u_1\nW : Type ?u.1273\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\ng : b ⟶ a\n⊢ f = reverse g ↔ reverse f = g"],"goalsAfter":["U : Type ?u.1267\nV : Type u_1\nW : Type ?u.1273\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\ng : b ⟶ a\n⊢ reverse f = reverse (reverse g) ↔ reverse f = g"],"content":"←reverse_inj,"},{"tailPos":3209,"headPos":3194,"goalsBefore":["U : Type ?u.1267\nV : Type u_1\nW : Type ?u.1273\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\ng : b ⟶ a\n⊢ reverse f = reverse (reverse g) ↔ reverse f = g"],"goalsAfter":["U : Type ?u.1267\nV : Type u_1\nW : Type ?u.1273\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\ng : b ⟶ a\n⊢ reverse f = g ↔ reverse f = g"],"content":"reverse_reverse"},{"tailPos":3210,"headPos":3209,"goalsBefore":["U : Type ?u.1267\nV : Type u_1\nW : Type ?u.1273\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\ng : b ⟶ a\n⊢ reverse f = g ↔ reverse f = g"],"goalsAfter":[],"content":"]"},{"tailPos":3210,"headPos":3174,"goalsBefore":["U : Type ?u.1267\nV : Type u_1\nW : Type ?u.1273\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\ng : b ⟶ a\n⊢ f = reverse g ↔ reverse f = g"],"goalsAfter":[],"content":"rw [←reverse_inj, reverse_reverse]"},{"tailPos":3171,"headPos":3169,"goalsBefore":["U : Type ?u.1267\nV : Type u_1\nW : Type ?u.1273\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\ng : b ⟶ a\n⊢ f = reverse g ↔ reverse f = g"],"goalsAfter":[],"content":"by"},{"tailPos":3210,"headPos":3169,"goalsBefore":["U : Type ?u.1267\nV : Type u_1\nW : Type ?u.1273\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\nf : a ⟶ b\ng : b ⟶ a\n⊢ f = reverse g ↔ reverse f = g"],"goalsAfter":[],"content":"by\n  rw [←reverse_inj, reverse_reverse]"},{"tailPos":4130,"headPos":4063,"goalsBefore":["U : Type ?u.2115\nV : Type ?u.2118\nW : Type ?u.2121\ninst✝⁷ : Quiver U\ninst✝⁶ : Quiver V\ninst✝⁵ : Quiver W\ninst✝⁴ : HasReverse U\ninst✝³ : HasReverse V\ninst✝² : HasReverse W\nφ : U ⥤q V\nψ : V ⥤q W\ninst✝¹ : Prefunctor.MapReverse φ\ninst✝ : Prefunctor.MapReverse ψ\nu✝ v✝ : U\ne : u✝ ⟶ v✝\n⊢ (φ ⋙q ψ).map (reverse e) = reverse ((φ ⋙q ψ).map e)"],"goalsAfter":[],"content":"simp only [Prefunctor.comp_map, Prefunctor.MapReverse.map_reverse']"},{"tailPos":4058,"headPos":4056,"goalsBefore":["U : Type ?u.2115\nV : Type ?u.2118\nW : Type ?u.2121\ninst✝⁷ : Quiver U\ninst✝⁶ : Quiver V\ninst✝⁵ : Quiver W\ninst✝⁴ : HasReverse U\ninst✝³ : HasReverse V\ninst✝² : HasReverse W\nφ : U ⥤q V\nψ : V ⥤q W\ninst✝¹ : Prefunctor.MapReverse φ\ninst✝ : Prefunctor.MapReverse ψ\nu✝ v✝ : U\ne : u✝ ⟶ v✝\n⊢ (φ ⋙q ψ).map (reverse e) = reverse ((φ ⋙q ψ).map e)"],"goalsAfter":[],"content":"by"},{"tailPos":4130,"headPos":4056,"goalsBefore":["U : Type ?u.2115\nV : Type ?u.2118\nW : Type ?u.2121\ninst✝⁷ : Quiver U\ninst✝⁶ : Quiver V\ninst✝⁵ : Quiver W\ninst✝⁴ : HasReverse U\ninst✝³ : HasReverse V\ninst✝² : HasReverse W\nφ : U ⥤q V\nψ : V ⥤q W\ninst✝¹ : Prefunctor.MapReverse φ\ninst✝ : Prefunctor.MapReverse ψ\nu✝ v✝ : U\ne : u✝ ⟶ v✝\n⊢ (φ ⋙q ψ).map (reverse e) = reverse ((φ ⋙q ψ).map e)"],"goalsAfter":[],"content":"by\n    simp only [Prefunctor.comp_map, Prefunctor.MapReverse.map_reverse']"},{"tailPos":5831,"headPos":5804,"goalsBefore":["U : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nq : Path b c\n⊢ reverse (comp p q) = comp (reverse q) (reverse p)"],"goalsAfter":["case nil\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\n⊢ reverse (comp p nil) = comp (reverse nil) (reverse p)","case cons\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nb✝ c✝ : V\na✝¹ : Path b b✝\na✝ : b✝ ⟶ c✝\nh : reverse (comp p a✝¹) = comp (reverse a✝¹) (reverse p)\n⊢ reverse (comp p (cons a✝¹ a✝)) = comp (reverse (cons a✝¹ a✝)) (reverse p)"],"content":"induction' q with _ _ _ _ h"},{"tailPos":5836,"headPos":5834,"goalsBefore":["case nil\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\n⊢ reverse (comp p nil) = comp (reverse nil) (reverse p)","case cons\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nb✝ c✝ : V\na✝¹ : Path b b✝\na✝ : b✝ ⟶ c✝\nh : reverse (comp p a✝¹) = comp (reverse a✝¹) (reverse p)\n⊢ reverse (comp p (cons a✝¹ a✝)) = comp (reverse (cons a✝¹ a✝)) (reverse p)"],"goalsAfter":["case nil\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\n⊢ reverse (comp p nil) = comp (reverse nil) (reverse p)"],"content":"·"},{"tailPos":5841,"headPos":5837,"goalsBefore":["case nil\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\n⊢ reverse (comp p nil) = comp (reverse nil) (reverse p)"],"goalsAfter":[],"content":"simp only [comp_nil, reverse, nil_comp]"},{"tailPos":5841,"headPos":5834,"goalsBefore":["case nil\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\n⊢ reverse (comp p nil) = comp (reverse nil) (reverse p)","case cons\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nb✝ c✝ : V\na✝¹ : Path b b✝\na✝ : b✝ ⟶ c✝\nh : reverse (comp p a✝¹) = comp (reverse a✝¹) (reverse p)\n⊢ reverse (comp p (cons a✝¹ a✝)) = comp (reverse (cons a✝¹ a✝)) (reverse p)"],"goalsAfter":["case cons\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nb✝ c✝ : V\na✝¹ : Path b b✝\na✝ : b✝ ⟶ c✝\nh : reverse (comp p a✝¹) = comp (reverse a✝¹) (reverse p)\n⊢ reverse (comp p (cons a✝¹ a✝)) = comp (reverse (cons a✝¹ a✝)) (reverse p)"],"content":"· simp"},{"tailPos":5846,"headPos":5844,"goalsBefore":["case cons\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nb✝ c✝ : V\na✝¹ : Path b b✝\na✝ : b✝ ⟶ c✝\nh : reverse (comp p a✝¹) = comp (reverse a✝¹) (reverse p)\n⊢ reverse (comp p (cons a✝¹ a✝)) = comp (reverse (cons a✝¹ a✝)) (reverse p)"],"goalsAfter":["case cons\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nb✝ c✝ : V\na✝¹ : Path b b✝\na✝ : b✝ ⟶ c✝\nh : reverse (comp p a✝¹) = comp (reverse a✝¹) (reverse p)\n⊢ reverse (comp p (cons a✝¹ a✝)) = comp (reverse (cons a✝¹ a✝)) (reverse p)"],"content":"·"},{"tailPos":5855,"headPos":5847,"goalsBefore":["case cons\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nb✝ c✝ : V\na✝¹ : Path b b✝\na✝ : b✝ ⟶ c✝\nh : reverse (comp p a✝¹) = comp (reverse a✝¹) (reverse p)\n⊢ reverse (comp p (cons a✝¹ a✝)) = comp (reverse (cons a✝¹ a✝)) (reverse p)"],"goalsAfter":[],"content":"simp [h]"},{"tailPos":5855,"headPos":5844,"goalsBefore":["case cons\nU : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nb✝ c✝ : V\na✝¹ : Path b b✝\na✝ : b✝ ⟶ c✝\nh : reverse (comp p a✝¹) = comp (reverse a✝¹) (reverse p)\n⊢ reverse (comp p (cons a✝¹ a✝)) = comp (reverse (cons a✝¹ a✝)) (reverse p)"],"goalsAfter":[],"content":"· simp [h]"},{"tailPos":5855,"headPos":5804,"goalsBefore":["U : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nq : Path b c\n⊢ reverse (comp p q) = comp (reverse q) (reverse p)"],"goalsAfter":[],"content":"induction' q with _ _ _ _ h\n  · simp\n  · simp [h]"},{"tailPos":5801,"headPos":5799,"goalsBefore":["U : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nq : Path b c\n⊢ reverse (comp p q) = comp (reverse q) (reverse p)"],"goalsAfter":[],"content":"by"},{"tailPos":5855,"headPos":5799,"goalsBefore":["U : Type ?u.5751\nV : Type u_1\nW : Type ?u.5757\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\ninst✝ : HasReverse V\na b c : V\np : Path a b\nq : Path b c\n⊢ reverse (comp p q) = comp (reverse q) (reverse p)"],"goalsAfter":[],"content":"by\n  induction' q with _ _ _ _ h\n  · simp\n  · simp [h]"},{"tailPos":6068,"headPos":6041,"goalsBefore":["U : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\np : Path a b\n⊢ reverse (reverse p) = p"],"goalsAfter":["case nil\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\n⊢ reverse (reverse nil) = nil","case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"content":"induction' p with _ _ _ _ h"},{"tailPos":6073,"headPos":6071,"goalsBefore":["case nil\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\n⊢ reverse (reverse nil) = nil","case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"goalsAfter":["case nil\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\n⊢ reverse (reverse nil) = nil"],"content":"·"},{"tailPos":6078,"headPos":6074,"goalsBefore":["case nil\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\n⊢ reverse (reverse nil) = nil"],"goalsAfter":[],"content":"simp only [reverse]"},{"tailPos":6078,"headPos":6071,"goalsBefore":["case nil\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\n⊢ reverse (reverse nil) = nil","case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"goalsAfter":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"content":"· simp"},{"tailPos":6083,"headPos":6081,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"goalsAfter":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"content":"·"},{"tailPos":6101,"headPos":6088,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"goalsAfter":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (comp (Hom.toPath (Quiver.reverse a✝)) (reverse a✝¹)) = cons a✝¹ a✝"],"content":"Path.reverse,"},{"tailPos":6120,"headPos":6102,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (comp (Hom.toPath (Quiver.reverse a✝)) (reverse a✝¹)) = cons a✝¹ a✝"],"goalsAfter":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp (reverse (reverse a✝¹)) (reverse (Hom.toPath (Quiver.reverse a✝))) = cons a✝¹ a✝"],"content":"Path.reverse_comp,"},{"tailPos":6123,"headPos":6121,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp (reverse (reverse a✝¹)) (reverse (Hom.toPath (Quiver.reverse a✝))) = cons a✝¹ a✝"],"goalsAfter":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp a✝¹ (reverse (Hom.toPath (Quiver.reverse a✝))) = cons a✝¹ a✝"],"content":"h,"},{"tailPos":6144,"headPos":6124,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp a✝¹ (reverse (Hom.toPath (Quiver.reverse a✝))) = cons a✝¹ a✝"],"goalsAfter":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp a✝¹ (Hom.toPath (Quiver.reverse (Quiver.reverse a✝))) = cons a✝¹ a✝"],"content":"Path.reverse_toPath,"},{"tailPos":6167,"headPos":6145,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp a✝¹ (Hom.toPath (Quiver.reverse (Quiver.reverse a✝))) = cons a✝¹ a✝"],"goalsAfter":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp a✝¹ (Hom.toPath a✝) = cons a✝¹ a✝"],"content":"Quiver.reverse_reverse"},{"tailPos":6168,"headPos":6167,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp a✝¹ (Hom.toPath a✝) = cons a✝¹ a✝"],"goalsAfter":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp a✝¹ (Hom.toPath a✝) = cons a✝¹ a✝"],"content":"]"},{"tailPos":6168,"headPos":6084,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"goalsAfter":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp a✝¹ (Hom.toPath a✝) = cons a✝¹ a✝"],"content":"rw [Path.reverse, Path.reverse_comp, h, Path.reverse_toPath, Quiver.reverse_reverse]"},{"tailPos":6176,"headPos":6173,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ comp a✝¹ (Hom.toPath a✝) = cons a✝¹ a✝"],"goalsAfter":[],"content":"rfl"},{"tailPos":6176,"headPos":6084,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"goalsAfter":[],"content":"rw [Path.reverse, Path.reverse_comp, h, Path.reverse_toPath, Quiver.reverse_reverse]\n    rfl"},{"tailPos":6176,"headPos":6081,"goalsBefore":["case cons\nU : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh✝ : HasInvolutiveReverse V\na b b✝ c✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ c✝\nh : reverse (reverse a✝¹) = a✝¹\n⊢ reverse (reverse (cons a✝¹ a✝)) = cons a✝¹ a✝"],"goalsAfter":[],"content":"· rw [Path.reverse, Path.reverse_comp, h, Path.reverse_toPath, Quiver.reverse_reverse]\n    rfl"},{"tailPos":6176,"headPos":6041,"goalsBefore":["U : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\np : Path a b\n⊢ reverse (reverse p) = p"],"goalsAfter":[],"content":"induction' p with _ _ _ _ h\n  · simp\n  · rw [Path.reverse, Path.reverse_comp, h, Path.reverse_toPath, Quiver.reverse_reverse]\n    rfl"},{"tailPos":6038,"headPos":6036,"goalsBefore":["U : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\np : Path a b\n⊢ reverse (reverse p) = p"],"goalsAfter":[],"content":"by"},{"tailPos":6176,"headPos":6036,"goalsBefore":["U : Type ?u.6232\nV : Type u_1\nW : Type ?u.6238\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nh : HasInvolutiveReverse V\na b : V\np : Path a b\n⊢ reverse (reverse p) = p"],"goalsAfter":[],"content":"by\n  induction' p with _ _ _ _ h\n  · simp\n  · rw [Path.reverse, Path.reverse_comp, h, Path.reverse_toPath, Quiver.reverse_reverse]\n    rfl"},{"tailPos":7005,"headPos":6984,"goalsBefore":["U : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ of ⋙q lift φ = φ"],"goalsAfter":["case h_obj\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X : V), (of ⋙q lift φ).obj X = φ.obj X","case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of ⋙q lift φ).map f =\n      Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"content":"fapply Prefunctor.ext"},{"tailPos":7010,"headPos":7008,"goalsBefore":["case h_obj\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X : V), (of ⋙q lift φ).obj X = φ.obj X","case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of ⋙q lift φ).map f =\n      Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"goalsAfter":["case h_obj\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X : V), (of ⋙q lift φ).obj X = φ.obj X"],"content":"·"},{"tailPos":7019,"headPos":7011,"goalsBefore":["case h_obj\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X : V), (of ⋙q lift φ).obj X = φ.obj X"],"goalsAfter":["case h_obj\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\nX : V\n⊢ (of ⋙q lift φ).obj X = φ.obj X"],"content":"rintro X"},{"tailPos":7027,"headPos":7024,"goalsBefore":["case h_obj\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\nX : V\n⊢ (of ⋙q lift φ).obj X = φ.obj X"],"goalsAfter":[],"content":"rfl"},{"tailPos":7027,"headPos":7011,"goalsBefore":["case h_obj\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X : V), (of ⋙q lift φ).obj X = φ.obj X"],"goalsAfter":[],"content":"rintro X\n    rfl"},{"tailPos":7027,"headPos":7008,"goalsBefore":["case h_obj\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X : V), (of ⋙q lift φ).obj X = φ.obj X","case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of ⋙q lift φ).map f =\n      Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"goalsAfter":["case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of ⋙q lift φ).map f =\n      Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"content":"· rintro X\n    rfl"},{"tailPos":7032,"headPos":7030,"goalsBefore":["case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of ⋙q lift φ).map f =\n      Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"goalsAfter":["case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of ⋙q lift φ).map f =\n      Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"content":"·"},{"tailPos":7045,"headPos":7033,"goalsBefore":["case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of ⋙q lift φ).map f =\n      Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"goalsAfter":["case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\nX Y : V\nf : X ⟶ Y\n⊢ (of ⋙q lift φ).map f =\n    Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"content":"rintro X Y f"},{"tailPos":7053,"headPos":7050,"goalsBefore":["case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\nX Y : V\nf : X ⟶ Y\n⊢ (of ⋙q lift φ).map f =\n    Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"goalsAfter":[],"content":"rfl"},{"tailPos":7053,"headPos":7033,"goalsBefore":["case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of ⋙q lift φ).map f =\n      Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"goalsAfter":[],"content":"rintro X Y f\n    rfl"},{"tailPos":7053,"headPos":7030,"goalsBefore":["case h_map\nU : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of ⋙q lift φ).map f =\n      Eq.recOn (_ : φ.obj Y = (of ⋙q lift φ).obj Y) (Eq.recOn (_ : φ.obj X = (of ⋙q lift φ).obj X) (φ.map f))"],"goalsAfter":[],"content":"· rintro X Y f\n    rfl"},{"tailPos":7053,"headPos":6984,"goalsBefore":["U : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ of ⋙q lift φ = φ"],"goalsAfter":[],"content":"fapply Prefunctor.ext\n  · rintro X\n    rfl\n  · rintro X Y f\n    rfl"},{"tailPos":6981,"headPos":6979,"goalsBefore":["U : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ of ⋙q lift φ = φ"],"goalsAfter":[],"content":"by"},{"tailPos":7053,"headPos":6979,"goalsBefore":["U : Type ?u.7420\nV : Type u_2\nW : Type ?u.7426\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\n⊢ of ⋙q lift φ = φ"],"goalsAfter":[],"content":"by\n  fapply Prefunctor.ext\n  · rintro X\n    rfl\n  · rintro X Y f\n    rfl"},{"tailPos":7358,"headPos":7335,"goalsBefore":["U : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ (lift φ).map (reverse f) = reverse ((lift φ).map f)"],"goalsAfter":["U : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ (match Sum.swap f with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match f with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"content":"dsimp [Symmetrify.lift]"},{"tailPos":7359,"headPos":7358,"goalsBefore":["U : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ (match Sum.swap f with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match f with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":["U : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ (match Sum.swap f with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match f with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"content":";"},{"tailPos":7367,"headPos":7360,"goalsBefore":["U : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ (match Sum.swap f with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match f with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":["case inl\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ (match Sum.swap (Sum.inl val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inl val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))","case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inr val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"content":"cases f"},{"tailPos":7372,"headPos":7370,"goalsBefore":["case inl\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ (match Sum.swap (Sum.inl val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inl val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))","case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inr val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":["case inl\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ (match Sum.swap (Sum.inl val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inl val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"content":"·"},{"tailPos":7382,"headPos":7373,"goalsBefore":["case inl\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ (match Sum.swap (Sum.inl val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inl val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":["case inl\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ (match Sum.swap (Sum.inl val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse (φ.map val✝)"],"content":"simp only"},{"tailPos":7390,"headPos":7387,"goalsBefore":["case inl\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ (match Sum.swap (Sum.inl val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse (φ.map val✝)"],"goalsAfter":[],"content":"rfl"},{"tailPos":7390,"headPos":7373,"goalsBefore":["case inl\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ (match Sum.swap (Sum.inl val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inl val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":[],"content":"simp only\n    rfl"},{"tailPos":7390,"headPos":7370,"goalsBefore":["case inl\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ (match Sum.swap (Sum.inl val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inl val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))","case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inr val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":["case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inr val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"content":"· simp only\n    rfl"},{"tailPos":7395,"headPos":7393,"goalsBefore":["case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inr val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":["case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inr val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"content":"·"},{"tailPos":7423,"headPos":7396,"goalsBefore":["case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inr val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":["case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    φ.map val✝"],"content":"simp only [reverse_reverse]"},{"tailPos":7431,"headPos":7428,"goalsBefore":["case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    φ.map val✝"],"goalsAfter":[],"content":"rfl"},{"tailPos":7431,"headPos":7396,"goalsBefore":["case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inr val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":[],"content":"simp only [reverse_reverse]\n    rfl"},{"tailPos":7431,"headPos":7393,"goalsBefore":["case inr\nU : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ (match Sum.swap (Sum.inr val✝) with\n    | Sum.inl g => φ.map g\n    | Sum.inr g => reverse (φ.map g)) =\n    reverse\n      (match Sum.inr val✝ with\n      | Sum.inl g => φ.map g\n      | Sum.inr g => reverse (φ.map g))"],"goalsAfter":[],"content":"· simp only [reverse_reverse]\n    rfl"},{"tailPos":7431,"headPos":7335,"goalsBefore":["U : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ (lift φ).map (reverse f) = reverse ((lift φ).map f)"],"goalsAfter":[],"content":"dsimp [Symmetrify.lift]; cases f\n  · simp only\n    rfl\n  · simp only [reverse_reverse]\n    rfl"},{"tailPos":7332,"headPos":7330,"goalsBefore":["U : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ (lift φ).map (reverse f) = reverse ((lift φ).map f)"],"goalsAfter":[],"content":"by"},{"tailPos":7431,"headPos":7330,"goalsBefore":["U : Type ?u.7670\nV : Type u_2\nW : Type ?u.7676\ninst✝³ : Quiver U\ninst✝² : Quiver V\ninst✝¹ : Quiver W\nV' : Type u_1\ninst✝ : Quiver V'\nh : HasInvolutiveReverse V'\nφ : V ⥤q V'\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ (lift φ).map (reverse f) = reverse ((lift φ).map f)"],"goalsAfter":[],"content":"by\n  dsimp [Symmetrify.lift]; cases f\n  · simp only\n    rfl\n  · simp only [reverse_reverse]\n    rfl"},{"tailPos":7852,"headPos":7842,"goalsBefore":["U : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\nΦ : Symmetrify V ⥤q V'\nhΦ : of ⋙q Φ = φ\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ Φ = lift φ"],"goalsAfter":["U : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ Φ = lift (of ⋙q Φ)"],"content":"subst_vars"},{"tailPos":7876,"headPos":7855,"goalsBefore":["U : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ Φ = lift (of ⋙q Φ)"],"goalsAfter":["case h_obj\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X : Symmetrify V), Φ.obj X = (lift (of ⋙q Φ)).obj X","case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X Y : Symmetrify V) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n        (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"content":"fapply Prefunctor.ext"},{"tailPos":7881,"headPos":7879,"goalsBefore":["case h_obj\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X : Symmetrify V), Φ.obj X = (lift (of ⋙q Φ)).obj X","case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X Y : Symmetrify V) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n        (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"goalsAfter":["case h_obj\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X : Symmetrify V), Φ.obj X = (lift (of ⋙q Φ)).obj X"],"content":"·"},{"tailPos":7890,"headPos":7882,"goalsBefore":["case h_obj\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X : Symmetrify V), Φ.obj X = (lift (of ⋙q Φ)).obj X"],"goalsAfter":["case h_obj\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX : Symmetrify V\n⊢ Φ.obj X = (lift (of ⋙q Φ)).obj X"],"content":"rintro X"},{"tailPos":7898,"headPos":7895,"goalsBefore":["case h_obj\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX : Symmetrify V\n⊢ Φ.obj X = (lift (of ⋙q Φ)).obj X"],"goalsAfter":[],"content":"rfl"},{"tailPos":7898,"headPos":7882,"goalsBefore":["case h_obj\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X : Symmetrify V), Φ.obj X = (lift (of ⋙q Φ)).obj X"],"goalsAfter":[],"content":"rintro X\n    rfl"},{"tailPos":7898,"headPos":7879,"goalsBefore":["case h_obj\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X : Symmetrify V), Φ.obj X = (lift (of ⋙q Φ)).obj X","case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X Y : Symmetrify V) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n        (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"goalsAfter":["case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X Y : Symmetrify V) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n        (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"content":"· rintro X\n    rfl"},{"tailPos":7903,"headPos":7901,"goalsBefore":["case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X Y : Symmetrify V) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n        (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"goalsAfter":["case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X Y : Symmetrify V) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n        (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"content":"·"},{"tailPos":7916,"headPos":7904,"goalsBefore":["case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X Y : Symmetrify V) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n        (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"goalsAfter":["case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ Φ.map f =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"content":"rintro X Y f"},{"tailPos":7928,"headPos":7921,"goalsBefore":["case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nf : X ⟶ Y\n⊢ Φ.map f =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"goalsAfter":["case h_map.inl\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ Φ.map (Sum.inl val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inl val✝)))","case h_map.inr\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ Φ.map (Sum.inr val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inr val✝)))"],"content":"cases f"},{"tailPos":7935,"headPos":7933,"goalsBefore":["case h_map.inl\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ Φ.map (Sum.inl val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inl val✝)))","case h_map.inr\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ Φ.map (Sum.inr val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inr val✝)))"],"goalsAfter":["case h_map.inl\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ Φ.map (Sum.inl val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inl val✝)))"],"content":"·"},{"tailPos":7939,"headPos":7936,"goalsBefore":["case h_map.inl\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ Φ.map (Sum.inl val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inl val✝)))"],"goalsAfter":[],"content":"rfl"},{"tailPos":7939,"headPos":7933,"goalsBefore":["case h_map.inl\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : X ⟶ Y\n⊢ Φ.map (Sum.inl val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inl val✝)))","case h_map.inr\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ Φ.map (Sum.inr val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inr val✝)))"],"goalsAfter":["case h_map.inr\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ Φ.map (Sum.inr val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inr val✝)))"],"content":"· rfl"},{"tailPos":7946,"headPos":7944,"goalsBefore":["case h_map.inr\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ Φ.map (Sum.inr val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inr val✝)))"],"goalsAfter":["case h_map.inr\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ Φ.map (Sum.inr val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inr val✝)))"],"content":"·"},{"tailPos":7971,"headPos":7947,"goalsBefore":["case h_map.inr\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ Φ.map (Sum.inr val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inr val✝)))"],"goalsAfter":[],"content":"exact hΦinv (Sum.inl _)"},{"tailPos":7971,"headPos":7944,"goalsBefore":["case h_map.inr\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\nX Y : Symmetrify V\nval✝ : Y ⟶ X\n⊢ Φ.map (Sum.inr val✝) =\n    Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n      (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map (Sum.inr val✝)))"],"goalsAfter":[],"content":"· exact hΦinv (Sum.inl _)"},{"tailPos":7971,"headPos":7904,"goalsBefore":["case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X Y : Symmetrify V) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n        (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"goalsAfter":[],"content":"rintro X Y f\n    cases f\n    · rfl\n    · exact hΦinv (Sum.inl _)"},{"tailPos":7971,"headPos":7901,"goalsBefore":["case h_map\nU : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nΦ : Symmetrify V ⥤q V'\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ ∀ (X Y : Symmetrify V) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn (_ : (lift (of ⋙q Φ)).obj Y = Φ.obj Y)\n        (Eq.recOn (_ : (lift (of ⋙q Φ)).obj X = Φ.obj X) ((lift (of ⋙q Φ)).map f))"],"goalsAfter":[],"content":"· rintro X Y f\n    cases f\n    · rfl\n    · exact hΦinv (Sum.inl _)"},{"tailPos":7971,"headPos":7842,"goalsBefore":["U : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\nΦ : Symmetrify V ⥤q V'\nhΦ : of ⋙q Φ = φ\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ Φ = lift φ"],"goalsAfter":[],"content":"subst_vars\n  fapply Prefunctor.ext\n  · rintro X\n    rfl\n  · rintro X Y f\n    cases f\n    · rfl\n    · exact hΦinv (Sum.inl _)"},{"tailPos":7839,"headPos":7837,"goalsBefore":["U : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\nΦ : Symmetrify V ⥤q V'\nhΦ : of ⋙q Φ = φ\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ Φ = lift φ"],"goalsAfter":[],"content":"by"},{"tailPos":7971,"headPos":7837,"goalsBefore":["U : Type ?u.8739\nV : Type u_2\nW : Type ?u.8745\ninst✝⁴ : Quiver U\ninst✝³ : Quiver V\ninst✝² : Quiver W\nV' : Type u_1\ninst✝¹ : Quiver V'\ninst✝ : HasReverse V'\nφ : V ⥤q V'\nΦ : Symmetrify V ⥤q V'\nhΦ : of ⋙q Φ = φ\nhΦinv : ∀ {X Y : Symmetrify V} (f : X ⟶ Y), Φ.map (reverse f) = reverse (Φ.map f)\n⊢ Φ = lift φ"],"goalsAfter":[],"content":"by\n  subst_vars\n  fapply Prefunctor.ext\n  · rintro X\n    rfl\n  · rintro X Y f\n    cases f\n    · rfl\n    · exact hΦinv (Sum.inl _)"},{"tailPos":8470,"headPos":8455,"goalsBefore":["U : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ reverse (reverse (PushQuiver.arrow f)) = PushQuiver.arrow f"],"goalsAfter":["U : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ PushQuiver.arrow (HasReverse.reverse' (HasReverse.reverse' f)) = PushQuiver.arrow f"],"content":"dsimp [reverse]"},{"tailPos":8471,"headPos":8470,"goalsBefore":["U : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ PushQuiver.arrow (HasReverse.reverse' (HasReverse.reverse' f)) = PushQuiver.arrow f"],"goalsAfter":["U : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ PushQuiver.arrow (HasReverse.reverse' (HasReverse.reverse' f)) = PushQuiver.arrow f"],"content":";"},{"tailPos":8477,"headPos":8472,"goalsBefore":["U : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ PushQuiver.arrow (HasReverse.reverse' (HasReverse.reverse' f)) = PushQuiver.arrow f"],"goalsAfter":["case e_f\nU : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ HasReverse.reverse' (HasReverse.reverse' f) = f"],"content":"congr"},{"tailPos":8478,"headPos":8477,"goalsBefore":["case e_f\nU : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ HasReverse.reverse' (HasReverse.reverse' f) = f"],"goalsAfter":["case e_f\nU : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ HasReverse.reverse' (HasReverse.reverse' f) = f"],"content":";"},{"tailPos":8491,"headPos":8479,"goalsBefore":["case e_f\nU : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ HasReverse.reverse' (HasReverse.reverse' f) = f"],"goalsAfter":[],"content":"apply h.inv'"},{"tailPos":8491,"headPos":8455,"goalsBefore":["U : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ reverse (reverse (PushQuiver.arrow f)) = PushQuiver.arrow f"],"goalsAfter":[],"content":"dsimp [reverse]; congr; apply h.inv'"},{"tailPos":8454,"headPos":8452,"goalsBefore":["U : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ reverse (reverse (PushQuiver.arrow f)) = PushQuiver.arrow f"],"goalsAfter":[],"content":"by"},{"tailPos":8491,"headPos":8452,"goalsBefore":["U : Type ?u.10668\nV : Type ?u.10671\nW : Type ?u.10674\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.10686\nσ : V → V'\nh : HasInvolutiveReverse V\na✝ b✝ : Push σ\nX✝ Y✝ : V\nf : X✝ ⟶ Y✝\n⊢ reverse (reverse (PushQuiver.arrow f)) = PushQuiver.arrow f"],"goalsAfter":[],"content":"by dsimp [reverse]; congr; apply h.inv'"},{"tailPos":8798,"headPos":8781,"goalsBefore":["U : Type ?u.13656\nV : Type ?u.13659\nW : Type ?u.13662\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.13674\nσ : V → V'\nh : HasInvolutiveReverse V\n⊢ ∀ {u v : V} (e : u ⟶ v), (of σ).map (reverse e) = reverse ((of σ).map e)"],"goalsAfter":[],"content":"simp [of_reverse]"},{"tailPos":8780,"headPos":8778,"goalsBefore":["U : Type ?u.13656\nV : Type ?u.13659\nW : Type ?u.13662\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.13674\nσ : V → V'\nh : HasInvolutiveReverse V\n⊢ ∀ {u v : V} (e : u ⟶ v), (of σ).map (reverse e) = reverse ((of σ).map e)"],"goalsAfter":[],"content":"by"},{"tailPos":8798,"headPos":8778,"goalsBefore":["U : Type ?u.13656\nV : Type ?u.13659\nW : Type ?u.13662\ninst✝² : Quiver U\ninst✝¹ : Quiver V\ninst✝ : Quiver W\nV' : Type ?u.13674\nσ : V → V'\nh : HasInvolutiveReverse V\n⊢ ∀ {u v : V} (e : u ⟶ v), (of σ).map (reverse e) = reverse ((of σ).map e)"],"goalsAfter":[],"content":"by simp [of_reverse]"}]