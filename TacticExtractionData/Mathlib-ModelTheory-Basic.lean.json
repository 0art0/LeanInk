[{"tailPos":3949,"headPos":3920,"goalsBefore":["a₀ a₁ a₂ : Type u\ni : ℕ\n⊢ lift (#Sequence₂ a₀ a₁ a₂ i) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) i)"],"goalsAfter":["case zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ Nat.zero) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) Nat.zero)","case succ.zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ Nat.zero)) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ Nat.zero))","case succ.succ.zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ (Nat.succ Nat.zero))) =\n    (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ (Nat.succ Nat.zero)))","case succ.succ.succ\na₀ a₁ a₂ : Type u\ni : ℕ\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ (Nat.succ (Nat.succ i)))) =\n    (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ (Nat.succ (Nat.succ i))))"],"content":"rcases i with (_ | _ | _ | i)"},{"tailPos":3953,"headPos":3950,"goalsBefore":["case zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ Nat.zero) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) Nat.zero)","case succ.zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ Nat.zero)) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ Nat.zero))","case succ.succ.zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ (Nat.succ Nat.zero))) =\n    (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ (Nat.succ Nat.zero)))","case succ.succ.succ\na₀ a₁ a₂ : Type u\ni : ℕ\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ (Nat.succ (Nat.succ i)))) =\n    (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ (Nat.succ (Nat.succ i))))"],"goalsAfter":["case zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ Nat.zero) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) Nat.zero)","case succ.zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ Nat.zero)) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ Nat.zero))","case succ.succ.zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ (Nat.succ Nat.zero))) =\n    (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ (Nat.succ Nat.zero)))","case succ.succ.succ\na₀ a₁ a₂ : Type u\ni : ℕ\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ (Nat.succ (Nat.succ i)))) =\n    (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ (Nat.succ (Nat.succ i))))"],"content":"<;>"},{"tailPos":4054,"headPos":3958,"goalsBefore":["case zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ Nat.zero) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) Nat.zero)"],"goalsAfter":[],"content":"simp only [Sequence₂, mk_uLift, mk_fintype, Fintype.card_of_isEmpty, Nat.cast_zero, lift_zero]"},{"tailPos":4054,"headPos":3958,"goalsBefore":["case succ.zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ Nat.zero)) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ Nat.zero))"],"goalsAfter":[],"content":"simp only [Sequence₂, mk_uLift, mk_fintype, Fintype.card_of_isEmpty, Nat.cast_zero, lift_zero]"},{"tailPos":4054,"headPos":3958,"goalsBefore":["case succ.succ.zero\na₀ a₁ a₂ : Type u\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ (Nat.succ Nat.zero))) =\n    (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ (Nat.succ Nat.zero)))"],"goalsAfter":[],"content":"simp only [Sequence₂, mk_uLift, mk_fintype, Fintype.card_of_isEmpty, Nat.cast_zero, lift_zero]"},{"tailPos":4054,"headPos":3958,"goalsBefore":["case succ.succ.succ\na₀ a₁ a₂ : Type u\ni : ℕ\n⊢ lift (#Sequence₂ a₀ a₁ a₂ (Nat.succ (Nat.succ (Nat.succ i)))) =\n    (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) (Nat.succ (Nat.succ (Nat.succ i))))"],"goalsAfter":[],"content":"simp only [Sequence₂, mk_uLift, mk_fintype, Fintype.card_of_isEmpty, Nat.cast_zero, lift_zero]"},{"tailPos":4054,"headPos":3920,"goalsBefore":["a₀ a₁ a₂ : Type u\ni : ℕ\n⊢ lift (#Sequence₂ a₀ a₁ a₂ i) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) i)"],"goalsAfter":[],"content":"rcases i with (_ | _ | _ | i) <;>\n    simp only [Sequence₂, mk_uLift, mk_fintype, Fintype.card_of_isEmpty, Nat.cast_zero, lift_zero]"},{"tailPos":3917,"headPos":3915,"goalsBefore":["a₀ a₁ a₂ : Type u\ni : ℕ\n⊢ lift (#Sequence₂ a₀ a₁ a₂ i) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) i)"],"goalsAfter":[],"content":"by"},{"tailPos":4054,"headPos":3915,"goalsBefore":["a₀ a₁ a₂ : Type u\ni : ℕ\n⊢ lift (#Sequence₂ a₀ a₁ a₂ i) = (#Sequence₂ (ULift a₀) (ULift a₁) (ULift a₂) i)"],"goalsAfter":[],"content":"by\n  rcases i with (_ | _ | _ | i) <;>\n    simp only [Sequence₂, mk_uLift, mk_fintype, Fintype.card_of_isEmpty, Nat.cast_zero, lift_zero]"},{"tailPos":4273,"headPos":4249,"goalsBefore":["a₀ a₁ a₂ : Type u\n⊢ (sum fun i => #Sequence₂ a₀ a₁ a₂ i) = (#a₀) + (#a₁) + (#a₂)"],"goalsAfter":["a₀ a₁ a₂ : Type u\n⊢ ((#Sequence₂ a₀ a₁ a₂ 0) + sum fun i => #Sequence₂ a₀ a₁ a₂ (i + 1)) = (#a₀) + (#a₁) + (#a₂)"],"content":"sum_nat_eq_add_sum_succ,"},{"tailPos":4298,"headPos":4274,"goalsBefore":["a₀ a₁ a₂ : Type u\n⊢ ((#Sequence₂ a₀ a₁ a₂ 0) + sum fun i => #Sequence₂ a₀ a₁ a₂ (i + 1)) = (#a₀) + (#a₁) + (#a₂)"],"goalsAfter":["a₀ a₁ a₂ : Type u\n⊢ (#Sequence₂ a₀ a₁ a₂ 0) + ((#Sequence₂ a₀ a₁ a₂ (0 + 1)) + sum fun i => #Sequence₂ a₀ a₁ a₂ (i + 1 + 1)) =\n    (#a₀) + (#a₁) + (#a₂)"],"content":"sum_nat_eq_add_sum_succ,"},{"tailPos":4322,"headPos":4299,"goalsBefore":["a₀ a₁ a₂ : Type u\n⊢ (#Sequence₂ a₀ a₁ a₂ 0) + ((#Sequence₂ a₀ a₁ a₂ (0 + 1)) + sum fun i => #Sequence₂ a₀ a₁ a₂ (i + 1 + 1)) =\n    (#a₀) + (#a₁) + (#a₂)"],"goalsAfter":["a₀ a₁ a₂ : Type u\n⊢ (#Sequence₂ a₀ a₁ a₂ 0) +\n      ((#Sequence₂ a₀ a₁ a₂ (0 + 1)) +\n        ((#Sequence₂ a₀ a₁ a₂ (0 + 1 + 1)) + sum fun i => #Sequence₂ a₀ a₁ a₂ (i + 1 + 1 + 1))) =\n    (#a₀) + (#a₁) + (#a₂)"],"content":"sum_nat_eq_add_sum_succ"},{"tailPos":4323,"headPos":4322,"goalsBefore":["a₀ a₁ a₂ : Type u\n⊢ (#Sequence₂ a₀ a₁ a₂ 0) +\n      ((#Sequence₂ a₀ a₁ a₂ (0 + 1)) +\n        ((#Sequence₂ a₀ a₁ a₂ (0 + 1 + 1)) + sum fun i => #Sequence₂ a₀ a₁ a₂ (i + 1 + 1 + 1))) =\n    (#a₀) + (#a₁) + (#a₂)"],"goalsAfter":["a₀ a₁ a₂ : Type u\n⊢ (#Sequence₂ a₀ a₁ a₂ 0) +\n      ((#Sequence₂ a₀ a₁ a₂ (0 + 1)) +\n        ((#Sequence₂ a₀ a₁ a₂ (0 + 1 + 1)) + sum fun i => #Sequence₂ a₀ a₁ a₂ (i + 1 + 1 + 1))) =\n    (#a₀) + (#a₁) + (#a₂)"],"content":"]"},{"tailPos":4323,"headPos":4245,"goalsBefore":["a₀ a₁ a₂ : Type u\n⊢ (sum fun i => #Sequence₂ a₀ a₁ a₂ i) = (#a₀) + (#a₁) + (#a₂)"],"goalsAfter":["a₀ a₁ a₂ : Type u\n⊢ (#Sequence₂ a₀ a₁ a₂ 0) +\n      ((#Sequence₂ a₀ a₁ a₂ (0 + 1)) +\n        ((#Sequence₂ a₀ a₁ a₂ (0 + 1 + 1)) + sum fun i => #Sequence₂ a₀ a₁ a₂ (i + 1 + 1 + 1))) =\n    (#a₀) + (#a₁) + (#a₂)"],"content":"rw [sum_nat_eq_add_sum_succ, sum_nat_eq_add_sum_succ, sum_nat_eq_add_sum_succ]"},{"tailPos":4355,"headPos":4326,"goalsBefore":["a₀ a₁ a₂ : Type u\n⊢ (#Sequence₂ a₀ a₁ a₂ 0) +\n      ((#Sequence₂ a₀ a₁ a₂ (0 + 1)) +\n        ((#Sequence₂ a₀ a₁ a₂ (0 + 1 + 1)) + sum fun i => #Sequence₂ a₀ a₁ a₂ (i + 1 + 1 + 1))) =\n    (#a₀) + (#a₁) + (#a₂)"],"goalsAfter":[],"content":"simp [add_assoc, Sequence₂]"},{"tailPos":4355,"headPos":4245,"goalsBefore":["a₀ a₁ a₂ : Type u\n⊢ (sum fun i => #Sequence₂ a₀ a₁ a₂ i) = (#a₀) + (#a₁) + (#a₂)"],"goalsAfter":[],"content":"rw [sum_nat_eq_add_sum_succ, sum_nat_eq_add_sum_succ, sum_nat_eq_add_sum_succ]\n  simp [add_assoc, Sequence₂]"},{"tailPos":4242,"headPos":4240,"goalsBefore":["a₀ a₁ a₂ : Type u\n⊢ (sum fun i => #Sequence₂ a₀ a₁ a₂ i) = (#a₀) + (#a₁) + (#a₂)"],"goalsAfter":[],"content":"by"},{"tailPos":4355,"headPos":4240,"goalsBefore":["a₀ a₁ a₂ : Type u\n⊢ (sum fun i => #Sequence₂ a₀ a₁ a₂ i) = (#a₀) + (#a₁) + (#a₂)"],"goalsAfter":[],"content":"by\n  rw [sum_nat_eq_add_sum_succ, sum_nat_eq_add_sum_succ, sum_nat_eq_add_sum_succ]\n  simp [add_assoc, Sequence₂]"},{"tailPos":7175,"headPos":7155,"goalsBefore":["L : Language\nL' : Language\n⊢ card L = (sum fun l => lift (#Functions L l)) + sum fun l => lift (#Relations L l)"],"goalsAfter":[],"content":"simp [card, Symbols]"},{"tailPos":7152,"headPos":7150,"goalsBefore":["L : Language\nL' : Language\n⊢ card L = (sum fun l => lift (#Functions L l)) + sum fun l => lift (#Relations L l)"],"goalsAfter":[],"content":"by"},{"tailPos":7175,"headPos":7150,"goalsBefore":["L : Language\nL' : Language\n⊢ card L = (sum fun l => lift (#Functions L l)) + sum fun l => lift (#Relations L l)"],"goalsAfter":[],"content":"by\n  simp [card, Symbols]"},{"tailPos":10682,"headPos":10634,"goalsBefore":["L : Language\nL' : Language\n⊢ card Language.empty = 0"],"goalsAfter":[],"content":"simp [card_eq_card_functions_add_card_relations]"},{"tailPos":10633,"headPos":10631,"goalsBefore":["L : Language\nL' : Language\n⊢ card Language.empty = 0"],"goalsAfter":[],"content":"by"},{"tailPos":10682,"headPos":10631,"goalsBefore":["L : Language\nL' : Language\n⊢ card Language.empty = 0"],"goalsAfter":[],"content":"by simp [card_eq_card_functions_add_card_relations]"},{"tailPos":10874,"headPos":10818,"goalsBefore":["L : Language\nL' : Language\n⊢ IsEmpty (Symbols Language.empty)"],"goalsAfter":["L : Language\nL' : Language\n⊢ (∀ (a : ℕ), IsEmpty (Functions Language.empty a)) ∧ ∀ (a : ℕ), IsEmpty (Relations Language.empty a)"],"content":"simp only [Language.Symbols, isEmpty_sum, isEmpty_sigma]"},{"tailPos":10935,"headPos":10877,"goalsBefore":["L : Language\nL' : Language\n⊢ (∀ (a : ℕ), IsEmpty (Functions Language.empty a)) ∧ ∀ (a : ℕ), IsEmpty (Relations Language.empty a)"],"goalsAfter":[],"content":"exact ⟨fun _ => inferInstance, fun _ => inferInstance⟩"},{"tailPos":10935,"headPos":10818,"goalsBefore":["L : Language\nL' : Language\n⊢ IsEmpty (Symbols Language.empty)"],"goalsAfter":[],"content":"simp only [Language.Symbols, isEmpty_sum, isEmpty_sigma]\n  exact ⟨fun _ => inferInstance, fun _ => inferInstance⟩"},{"tailPos":10815,"headPos":10813,"goalsBefore":["L : Language\nL' : Language\n⊢ IsEmpty (Symbols Language.empty)"],"goalsAfter":[],"content":"by"},{"tailPos":10935,"headPos":10813,"goalsBefore":["L : Language\nL' : Language\n⊢ IsEmpty (Symbols Language.empty)"],"goalsAfter":[],"content":"by\n  simp only [Language.Symbols, isEmpty_sum, isEmpty_sigma]\n  exact ⟨fun _ => inferInstance, fun _ => inferInstance⟩"},{"tailPos":11481,"headPos":11462,"goalsBefore":["L : Language\nL' : Language\ni : ℕ\n⊢ (#Functions (Language.sum L L') i) = lift (#Functions L i) + lift (#Functions L' i)"],"goalsAfter":[],"content":"simp [Language.sum]"},{"tailPos":11459,"headPos":11457,"goalsBefore":["L : Language\nL' : Language\ni : ℕ\n⊢ (#Functions (Language.sum L L') i) = lift (#Functions L i) + lift (#Functions L' i)"],"goalsAfter":[],"content":"by"},{"tailPos":11481,"headPos":11457,"goalsBefore":["L : Language\nL' : Language\ni : ℕ\n⊢ (#Functions (Language.sum L L') i) = lift (#Functions L i) + lift (#Functions L' i)"],"goalsAfter":[],"content":"by\n  simp [Language.sum]"},{"tailPos":11755,"headPos":11736,"goalsBefore":["L : Language\nL' : Language\ni : ℕ\n⊢ (#Relations (Language.sum L L') i) = lift (#Relations L i) + lift (#Relations L' i)"],"goalsAfter":[],"content":"simp [Language.sum]"},{"tailPos":11733,"headPos":11731,"goalsBefore":["L : Language\nL' : Language\ni : ℕ\n⊢ (#Relations (Language.sum L L') i) = lift (#Relations L i) + lift (#Relations L' i)"],"goalsAfter":[],"content":"by"},{"tailPos":11755,"headPos":11731,"goalsBefore":["L : Language\nL' : Language\ni : ℕ\n⊢ (#Relations (Language.sum L L') i) = lift (#Relations L i) + lift (#Relations L' i)"],"goalsAfter":[],"content":"by\n  simp [Language.sum]"},{"tailPos":12113,"headPos":11967,"goalsBefore":["L : Language\nL' : Language\n⊢ card (Language.sum L L') = lift (card L) + lift (card L')"],"goalsAfter":["L : Language\nL' : Language\n⊢ ((sum fun i => lift (#Functions L i)) + sum fun i => lift (#Functions L' i)) +\n      ((sum fun i => lift (#Relations L i)) + sum fun i => lift (#Relations L' i)) =\n    ((sum fun i => lift (#Functions L i)) + sum fun i => lift (#Relations L i)) +\n      ((sum fun i => lift (#Functions L' i)) + sum fun i => lift (#Relations L' i))"],"content":"simp only [card_eq_card_functions_add_card_relations, card_functions_sum, card_relations_sum,\n    sum_add_distrib', lift_add, lift_sum, lift_lift]"},{"tailPos":12194,"headPos":12116,"goalsBefore":["L : Language\nL' : Language\n⊢ ((sum fun i => lift (#Functions L i)) + sum fun i => lift (#Functions L' i)) +\n      ((sum fun i => lift (#Relations L i)) + sum fun i => lift (#Relations L' i)) =\n    ((sum fun i => lift (#Functions L i)) + sum fun i => lift (#Relations L i)) +\n      ((sum fun i => lift (#Functions L' i)) + sum fun i => lift (#Relations L' i))"],"goalsAfter":[],"content":"simp only [add_assoc, add_comm (Cardinal.sum fun i => (#L'.Functions i).lift)]"},{"tailPos":12194,"headPos":11967,"goalsBefore":["L : Language\nL' : Language\n⊢ card (Language.sum L L') = lift (card L) + lift (card L')"],"goalsAfter":[],"content":"simp only [card_eq_card_functions_add_card_relations, card_functions_sum, card_relations_sum,\n    sum_add_distrib', lift_add, lift_sum, lift_lift]\n  simp only [add_assoc, add_comm (Cardinal.sum fun i => (#L'.Functions i).lift)]"},{"tailPos":11964,"headPos":11962,"goalsBefore":["L : Language\nL' : Language\n⊢ card (Language.sum L L') = lift (card L) + lift (card L')"],"goalsAfter":[],"content":"by"},{"tailPos":12194,"headPos":11962,"goalsBefore":["L : Language\nL' : Language\n⊢ card (Language.sum L L') = lift (card L) + lift (card L')"],"goalsAfter":[],"content":"by\n  simp only [card_eq_card_functions_add_card_relations, card_functions_sum, card_relations_sum,\n    sum_add_distrib', lift_add, lift_sum, lift_lift]\n  simp only [add_assoc, add_comm (Cardinal.sum fun i => (#L'.Functions i).lift)]"},{"tailPos":12603,"headPos":12544,"goalsBefore":["L : Language\nL' : Language\nc f₁ f₂ : Type u\nr₁ r₂ : Type v\n⊢ card (Language.mk₂ c f₁ f₂ r₁ r₂) = lift (#c) + lift (#f₁) + lift (#f₂) + lift (#r₁) + lift (#r₂)"],"goalsAfter":[],"content":"simp [card_eq_card_functions_add_card_relations, add_assoc]"},{"tailPos":12541,"headPos":12539,"goalsBefore":["L : Language\nL' : Language\nc f₁ f₂ : Type u\nr₁ r₂ : Type v\n⊢ card (Language.mk₂ c f₁ f₂ r₁ r₂) = lift (#c) + lift (#f₁) + lift (#f₂) + lift (#r₁) + lift (#r₂)"],"goalsAfter":[],"content":"by"},{"tailPos":12603,"headPos":12539,"goalsBefore":["L : Language\nL' : Language\nc f₁ f₂ : Type u\nr₁ r₂ : Type v\n⊢ card (Language.mk₂ c f₁ f₂ r₁ r₂) = lift (#c) + lift (#f₁) + lift (#f₂) + lift (#r₁) + lift (#r₂)"],"goalsAfter":[],"content":"by\n  simp [card_eq_card_functions_add_card_relations, add_assoc]"},{"tailPos":23662,"headPos":23655,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\nf g : M →[L] N\nh : f.toFun = g.toFun\n⊢ f = g"],"goalsAfter":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ng : M →[L] N\ntoFun✝ : M → N\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nh : (mk toFun✝).toFun = g.toFun\n⊢ mk toFun✝ = g"],"content":"cases f"},{"tailPos":23663,"headPos":23662,"goalsBefore":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ng : M →[L] N\ntoFun✝ : M → N\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nh : (mk toFun✝).toFun = g.toFun\n⊢ mk toFun✝ = g"],"goalsAfter":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ng : M →[L] N\ntoFun✝ : M → N\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nh : (mk toFun✝).toFun = g.toFun\n⊢ mk toFun✝ = g"],"content":";"},{"tailPos":23671,"headPos":23664,"goalsBefore":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ng : M →[L] N\ntoFun✝ : M → N\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nh : (mk toFun✝).toFun = g.toFun\n⊢ mk toFun✝ = g"],"goalsAfter":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ntoFun✝¹ : M → N\nmap_fun'✝¹ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝¹ (funMap f x) = funMap f (toFun✝¹ ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝¹ ∘ x)\ntoFun✝ : M → N\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nh : (mk toFun✝¹).toFun = (mk toFun✝).toFun\n⊢ mk toFun✝¹ = mk toFun✝"],"content":"cases g"},{"tailPos":23672,"headPos":23671,"goalsBefore":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ntoFun✝¹ : M → N\nmap_fun'✝¹ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝¹ (funMap f x) = funMap f (toFun✝¹ ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝¹ ∘ x)\ntoFun✝ : M → N\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nh : (mk toFun✝¹).toFun = (mk toFun✝).toFun\n⊢ mk toFun✝¹ = mk toFun✝"],"goalsAfter":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ntoFun✝¹ : M → N\nmap_fun'✝¹ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝¹ (funMap f x) = funMap f (toFun✝¹ ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝¹ ∘ x)\ntoFun✝ : M → N\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nh : (mk toFun✝¹).toFun = (mk toFun✝).toFun\n⊢ mk toFun✝¹ = mk toFun✝"],"content":";"},{"tailPos":23680,"headPos":23673,"goalsBefore":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ntoFun✝¹ : M → N\nmap_fun'✝¹ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝¹ (funMap f x) = funMap f (toFun✝¹ ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝¹ ∘ x)\ntoFun✝ : M → N\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nh : (mk toFun✝¹).toFun = (mk toFun✝).toFun\n⊢ mk toFun✝¹ = mk toFun✝"],"goalsAfter":["case mk.mk.refl\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ntoFun✝ : M → N\nmap_fun'✝¹ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\n⊢ mk toFun✝ = mk toFun✝"],"content":"cases h"},{"tailPos":23681,"headPos":23680,"goalsBefore":["case mk.mk.refl\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ntoFun✝ : M → N\nmap_fun'✝¹ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\n⊢ mk toFun✝ = mk toFun✝"],"goalsAfter":["case mk.mk.refl\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ntoFun✝ : M → N\nmap_fun'✝¹ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\n⊢ mk toFun✝ = mk toFun✝"],"content":";"},{"tailPos":23685,"headPos":23682,"goalsBefore":["case mk.mk.refl\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\ntoFun✝ : M → N\nmap_fun'✝¹ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\nmap_fun'✝ : ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), toFun✝ (funMap f x) = funMap f (toFun✝ ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r x → RelMap r (toFun✝ ∘ x)\n⊢ mk toFun✝ = mk toFun✝"],"goalsAfter":[],"content":"rfl"},{"tailPos":23685,"headPos":23655,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\nf g : M →[L] N\nh : f.toFun = g.toFun\n⊢ f = g"],"goalsAfter":[],"content":"cases f; cases g; cases h; rfl"},{"tailPos":23654,"headPos":23652,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\nf g : M →[L] N\nh : f.toFun = g.toFun\n⊢ f = g"],"goalsAfter":[],"content":"by"},{"tailPos":23685,"headPos":23652,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.63715\ninst✝¹ : Structure L P\nQ : Type ?u.63723\ninst✝ : Structure L Q\nf g : M →[L] N\nh : f.toFun = g.toFun\n⊢ f = g"],"goalsAfter":[],"content":"by cases f; cases g; cases h; rfl"},{"tailPos":25960,"headPos":25956,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.67923\ninst✝¹ : Structure L P\nQ : Type ?u.67931\ninst✝ : Structure L Q\nhnp : N →[L] P\nhmn : M →[L] N\nn✝ : ℕ\nx✝¹ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ (↑hnp ∘ ↑hmn) (funMap x✝¹ x✝) = funMap x✝¹ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.67923\ninst✝¹ : Structure L P\nQ : Type ?u.67931\ninst✝ : Structure L Q\nhnp : N →[L] P\nhmn : M →[L] N\nn✝ : ℕ\nx✝¹ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap x✝¹ (↑hnp ∘ ↑hmn ∘ x✝) = funMap x✝¹ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"content":"simp only [Function.comp_apply, map_fun]"},{"tailPos":25961,"headPos":25960,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.67923\ninst✝¹ : Structure L P\nQ : Type ?u.67931\ninst✝ : Structure L Q\nhnp : N →[L] P\nhmn : M →[L] N\nn✝ : ℕ\nx✝¹ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap x✝¹ (↑hnp ∘ ↑hmn ∘ x✝) = funMap x✝¹ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.67923\ninst✝¹ : Structure L P\nQ : Type ?u.67931\ninst✝ : Structure L Q\nhnp : N →[L] P\nhmn : M →[L] N\nn✝ : ℕ\nx✝¹ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap x✝¹ (↑hnp ∘ ↑hmn ∘ x✝) = funMap x✝¹ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"content":";"},{"tailPos":25965,"headPos":25962,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.67923\ninst✝¹ : Structure L P\nQ : Type ?u.67931\ninst✝ : Structure L Q\nhnp : N →[L] P\nhmn : M →[L] N\nn✝ : ℕ\nx✝¹ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap x✝¹ (↑hnp ∘ ↑hmn ∘ x✝) = funMap x✝¹ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":[],"content":"rfl"},{"tailPos":25965,"headPos":25956,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.67923\ninst✝¹ : Structure L P\nQ : Type ?u.67931\ninst✝ : Structure L Q\nhnp : N →[L] P\nhmn : M →[L] N\nn✝ : ℕ\nx✝¹ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ (↑hnp ∘ ↑hmn) (funMap x✝¹ x✝) = funMap x✝¹ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":[],"content":"simp; rfl"},{"tailPos":25955,"headPos":25953,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.67923\ninst✝¹ : Structure L P\nQ : Type ?u.67931\ninst✝ : Structure L Q\nhnp : N →[L] P\nhmn : M →[L] N\nn✝ : ℕ\nx✝¹ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ (↑hnp ∘ ↑hmn) (funMap x✝¹ x✝) = funMap x✝¹ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":[],"content":"by"},{"tailPos":25965,"headPos":25953,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.67923\ninst✝¹ : Structure L P\nQ : Type ?u.67931\ninst✝ : Structure L Q\nhnp : N →[L] P\nhmn : M →[L] N\nn✝ : ℕ\nx✝¹ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ (↑hnp ∘ ↑hmn) (funMap x✝¹ x✝) = funMap x✝¹ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":[],"content":"by simp; rfl"},{"tailPos":27127,"headPos":27120,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\nf g : M ↪[L] N\nh : (fun f => f.toFun) f = (fun f => f.toFun) g\n⊢ f = g"],"goalsAfter":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\ng : M ↪[L] N\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : (fun f => f.toFun) (mk toEmbedding✝) = (fun f => f.toFun) g\n⊢ mk toEmbedding✝ = g"],"content":"cases f"},{"tailPos":27139,"headPos":27132,"goalsBefore":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\ng : M ↪[L] N\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : (fun f => f.toFun) (mk toEmbedding✝) = (fun f => f.toFun) g\n⊢ mk toEmbedding✝ = g"],"goalsAfter":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : (fun f => f.toFun) (mk toEmbedding✝¹) = (fun f => f.toFun) (mk toEmbedding✝)\n⊢ mk toEmbedding✝¹ = mk toEmbedding✝"],"content":"cases g"},{"tailPos":27149,"headPos":27144,"goalsBefore":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : (fun f => f.toFun) (mk toEmbedding✝¹) = (fun f => f.toFun) (mk toEmbedding✝)\n⊢ mk toEmbedding✝¹ = mk toEmbedding✝"],"goalsAfter":["case mk.mk.e_toEmbedding\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : (fun f => f.toFun) (mk toEmbedding✝¹) = (fun f => f.toFun) (mk toEmbedding✝)\n⊢ toEmbedding✝¹ = toEmbedding✝"],"content":"congr"},{"tailPos":27159,"headPos":27154,"goalsBefore":["case mk.mk.e_toEmbedding\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : (fun f => f.toFun) (mk toEmbedding✝¹) = (fun f => f.toFun) (mk toEmbedding✝)\n⊢ toEmbedding✝¹ = toEmbedding✝"],"goalsAfter":["case mk.mk.e_toEmbedding.h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : (fun f => f.toFun) (mk toEmbedding✝¹) = (fun f => f.toFun) (mk toEmbedding✝)\nx : M\n⊢ ↑toEmbedding✝¹ x = ↑toEmbedding✝ x"],"content":"ext x"},{"tailPos":27195,"headPos":27164,"goalsBefore":["case mk.mk.e_toEmbedding.h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : (fun f => f.toFun) (mk toEmbedding✝¹) = (fun f => f.toFun) (mk toEmbedding✝)\nx : M\n⊢ ↑toEmbedding✝¹ x = ↑toEmbedding✝ x"],"goalsAfter":[],"content":"exact Function.funext_iff.1 h x"},{"tailPos":27195,"headPos":27120,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\nf g : M ↪[L] N\nh : (fun f => f.toFun) f = (fun f => f.toFun) g\n⊢ f = g"],"goalsAfter":[],"content":"cases f\n    cases g\n    congr\n    ext x\n    exact Function.funext_iff.1 h x"},{"tailPos":27115,"headPos":27113,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\nf g : M ↪[L] N\nh : (fun f => f.toFun) f = (fun f => f.toFun) g\n⊢ f = g"],"goalsAfter":[],"content":"by"},{"tailPos":27195,"headPos":27113,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.70671\ninst✝¹ : Structure L P\nQ : Type ?u.70679\ninst✝ : Structure L Q\nf g : M ↪[L] N\nh : (fun f => f.toFun) f = (fun f => f.toFun) g\n⊢ f = g"],"goalsAfter":[],"content":"by\n    cases f\n    cases g\n    congr\n    ext x\n    exact Function.funext_iff.1 h x"},{"tailPos":28871,"headPos":28864,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\nf g : M ↪[L] N\nh : ↑f = ↑g\n⊢ f = g"],"goalsAfter":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\ng : M ↪[L] N\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : ↑(mk toEmbedding✝) = ↑g\n⊢ mk toEmbedding✝ = g"],"content":"cases f"},{"tailPos":28883,"headPos":28876,"goalsBefore":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\ng : M ↪[L] N\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : ↑(mk toEmbedding✝) = ↑g\n⊢ mk toEmbedding✝ = g"],"goalsAfter":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : ↑(mk toEmbedding✝¹) = ↑(mk toEmbedding✝)\n⊢ mk toEmbedding✝¹ = mk toEmbedding✝"],"content":"cases g"},{"tailPos":28893,"headPos":28888,"goalsBefore":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : ↑(mk toEmbedding✝¹) = ↑(mk toEmbedding✝)\n⊢ mk toEmbedding✝¹ = mk toEmbedding✝"],"goalsAfter":["case mk.mk.e_toEmbedding\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : ↑(mk toEmbedding✝¹) = ↑(mk toEmbedding✝)\n⊢ toEmbedding✝¹ = toEmbedding✝"],"content":"congr"},{"tailPos":28903,"headPos":28898,"goalsBefore":["case mk.mk.e_toEmbedding\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : ↑(mk toEmbedding✝¹) = ↑(mk toEmbedding✝)\n⊢ toEmbedding✝¹ = toEmbedding✝"],"goalsAfter":["case mk.mk.e_toEmbedding.h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : ↑(mk toEmbedding✝¹) = ↑(mk toEmbedding✝)\nx : M\n⊢ ↑toEmbedding✝¹ x = ↑toEmbedding✝ x"],"content":"ext x"},{"tailPos":28939,"headPos":28908,"goalsBefore":["case mk.mk.e_toEmbedding.h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\ntoEmbedding✝¹ : M ↪ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝¹ (funMap f x) = funMap f (toEmbedding✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝¹.toFun ∘ x) ↔ RelMap r x\ntoEmbedding✝ : M ↪ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun toEmbedding✝ (funMap f x) = funMap f (toEmbedding✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEmbedding✝.toFun ∘ x) ↔ RelMap r x\nh : ↑(mk toEmbedding✝¹) = ↑(mk toEmbedding✝)\nx : M\n⊢ ↑toEmbedding✝¹ x = ↑toEmbedding✝ x"],"goalsAfter":[],"content":"exact Function.funext_iff.1 h x"},{"tailPos":28939,"headPos":28864,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\nf g : M ↪[L] N\nh : ↑f = ↑g\n⊢ f = g"],"goalsAfter":[],"content":"cases f\n    cases g\n    congr\n    ext x\n    exact Function.funext_iff.1 h x"},{"tailPos":28859,"headPos":28857,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\nf g : M ↪[L] N\nh : ↑f = ↑g\n⊢ f = g"],"goalsAfter":[],"content":"by"},{"tailPos":28939,"headPos":28857,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.138427\ninst✝¹ : Structure L P\nQ : Type ?u.138435\ninst✝ : Structure L Q\nf g : M ↪[L] N\nh : ↑f = ↑g\n⊢ f = g"],"goalsAfter":[],"content":"by\n    cases f\n    cases g\n    congr\n    ext x\n    exact Function.funext_iff.1 h x"},{"tailPos":30339,"headPos":30336,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝⁴ : Structure L M\ninst✝³ : Structure L N\nP : Type ?u.148304\ninst✝² : Structure L P\nQ : Type ?u.148312\ninst✝¹ : Structure L Q\ninst✝ : IsAlgebraic L\nf : M →[L] N\nhf : Function.Injective ↑f\n⊢ toHom (ofInjective hf) = f"],"goalsAfter":["case h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝⁴ : Structure L M\ninst✝³ : Structure L N\nP : Type ?u.148304\ninst✝² : Structure L P\nQ : Type ?u.148312\ninst✝¹ : Structure L Q\ninst✝ : IsAlgebraic L\nf : M →[L] N\nhf : Function.Injective ↑f\nx✝ : M\n⊢ ↑(toHom (ofInjective hf)) x✝ = ↑f x✝"],"content":"ext"},{"tailPos":30340,"headPos":30339,"goalsBefore":["case h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝⁴ : Structure L M\ninst✝³ : Structure L N\nP : Type ?u.148304\ninst✝² : Structure L P\nQ : Type ?u.148312\ninst✝¹ : Structure L Q\ninst✝ : IsAlgebraic L\nf : M →[L] N\nhf : Function.Injective ↑f\nx✝ : M\n⊢ ↑(toHom (ofInjective hf)) x✝ = ↑f x✝"],"goalsAfter":["case h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝⁴ : Structure L M\ninst✝³ : Structure L N\nP : Type ?u.148304\ninst✝² : Structure L P\nQ : Type ?u.148312\ninst✝¹ : Structure L Q\ninst✝ : IsAlgebraic L\nf : M →[L] N\nhf : Function.Injective ↑f\nx✝ : M\n⊢ ↑(toHom (ofInjective hf)) x✝ = ↑f x✝"],"content":";"},{"tailPos":30345,"headPos":30341,"goalsBefore":["case h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝⁴ : Structure L M\ninst✝³ : Structure L N\nP : Type ?u.148304\ninst✝² : Structure L P\nQ : Type ?u.148312\ninst✝¹ : Structure L Q\ninst✝ : IsAlgebraic L\nf : M →[L] N\nhf : Function.Injective ↑f\nx✝ : M\n⊢ ↑(toHom (ofInjective hf)) x✝ = ↑f x✝"],"goalsAfter":[],"content":"simp only [coe_toHom, ofInjective_toFun]"},{"tailPos":30345,"headPos":30336,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝⁴ : Structure L M\ninst✝³ : Structure L N\nP : Type ?u.148304\ninst✝² : Structure L P\nQ : Type ?u.148312\ninst✝¹ : Structure L Q\ninst✝ : IsAlgebraic L\nf : M →[L] N\nhf : Function.Injective ↑f\n⊢ toHom (ofInjective hf) = f"],"goalsAfter":[],"content":"ext; simp"},{"tailPos":30333,"headPos":30331,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝⁴ : Structure L M\ninst✝³ : Structure L N\nP : Type ?u.148304\ninst✝² : Structure L P\nQ : Type ?u.148312\ninst✝¹ : Structure L Q\ninst✝ : IsAlgebraic L\nf : M →[L] N\nhf : Function.Injective ↑f\n⊢ toHom (ofInjective hf) = f"],"goalsAfter":[],"content":"by"},{"tailPos":30345,"headPos":30331,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝⁴ : Structure L M\ninst✝³ : Structure L N\nP : Type ?u.148304\ninst✝² : Structure L P\nQ : Type ?u.148312\ninst✝¹ : Structure L Q\ninst✝ : IsAlgebraic L\nf : M →[L] N\nhf : Function.Injective ↑f\n⊢ toHom (ofInjective hf) = f"],"goalsAfter":[],"content":"by\n  ext; simp"},{"tailPos":31168,"headPos":31162,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun { toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) } (funMap f x) =\n      funMap f ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ Function.Embedding.toFun { toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) } (funMap f✝ x✝) =\n    funMap f✝ ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x✝)"],"content":"intros"},{"tailPos":31169,"headPos":31168,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ Function.Embedding.toFun { toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) } (funMap f✝ x✝) =\n    funMap f✝ ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x✝)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ Function.Embedding.toFun { toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) } (funMap f✝ x✝) =\n    funMap f✝ ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x✝)"],"content":";"},{"tailPos":31210,"headPos":31170,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ Function.Embedding.toFun { toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) } (funMap f✝ x✝) =\n    funMap f✝ ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x✝)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap f✝ (↑hnp ∘ ↑hmn ∘ x✝) = funMap f✝ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"content":"simp only [Function.comp_apply, map_fun]"},{"tailPos":31211,"headPos":31210,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap f✝ (↑hnp ∘ ↑hmn ∘ x✝) = funMap f✝ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap f✝ (↑hnp ∘ ↑hmn ∘ x✝) = funMap f✝ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"content":";"},{"tailPos":31219,"headPos":31212,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap f✝ (↑hnp ∘ ↑hmn ∘ x✝) = funMap f✝ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":[],"content":"trivial"},{"tailPos":31219,"headPos":31162,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun { toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) } (funMap f x) =\n      funMap f ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x)"],"goalsAfter":[],"content":"intros; simp only [Function.comp_apply, map_fun]; trivial"},{"tailPos":31161,"headPos":31159,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun { toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) } (funMap f x) =\n      funMap f ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x)"],"goalsAfter":[],"content":"by"},{"tailPos":31219,"headPos":31159,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Function.Embedding.toFun { toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) } (funMap f x) =\n      funMap f ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x)"],"goalsAfter":[],"content":"by intros; simp only [Function.comp_apply, map_fun]; trivial"},{"tailPos":31291,"headPos":31285,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M),\n    RelMap r ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x) ↔ RelMap r x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x✝) ↔ RelMap r✝ x✝"],"content":"intros"},{"tailPos":31292,"headPos":31291,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x✝) ↔ RelMap r✝ x✝"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x✝) ↔ RelMap r✝ x✝"],"content":";"},{"tailPos":31317,"headPos":31297,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x✝) ↔ RelMap r✝ x✝"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ (↑hnp ∘ ↑hmn ∘ x✝) ↔ RelMap r✝ x✝"],"content":"Function.comp.assoc,"},{"tailPos":31326,"headPos":31318,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ (↑hnp ∘ ↑hmn ∘ x✝) ↔ RelMap r✝ x✝"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ (↑hmn ∘ x✝) ↔ RelMap r✝ x✝"],"content":"map_rel,"},{"tailPos":31334,"headPos":31327,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ (↑hmn ∘ x✝) ↔ RelMap r✝ x✝"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ x✝ ↔ RelMap r✝ x✝"],"content":"map_rel"},{"tailPos":31335,"headPos":31334,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ x✝ ↔ RelMap r✝ x✝"],"goalsAfter":[],"content":"]"},{"tailPos":31335,"headPos":31293,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x✝) ↔ RelMap r✝ x✝"],"goalsAfter":[],"content":"rw [Function.comp.assoc, map_rel, map_rel]"},{"tailPos":31335,"headPos":31285,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M),\n    RelMap r ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x) ↔ RelMap r x"],"goalsAfter":[],"content":"intros; rw [Function.comp.assoc, map_rel, map_rel]"},{"tailPos":31284,"headPos":31282,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M),\n    RelMap r ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x) ↔ RelMap r x"],"goalsAfter":[],"content":"by"},{"tailPos":31335,"headPos":31282,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.149318\ninst✝¹ : Structure L P\nQ : Type ?u.149326\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M),\n    RelMap r ({ toFun := ↑hnp ∘ ↑hmn, inj' := (_ : Function.Injective (↑hnp ∘ ↑hmn)) }.toFun ∘ x) ↔ RelMap r x"],"goalsAfter":[],"content":"by intros; rw [Function.comp.assoc, map_rel, map_rel]"},{"tailPos":32012,"headPos":32009,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type u_1\ninst✝¹ : Structure L P\nQ : Type ?u.151174\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ toHom (comp hnp hmn) = Hom.comp (toHom hnp) (toHom hmn)"],"goalsAfter":["case h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type u_1\ninst✝¹ : Structure L P\nQ : Type ?u.151174\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nx✝ : M\n⊢ ↑(toHom (comp hnp hmn)) x✝ = ↑(Hom.comp (toHom hnp) (toHom hmn)) x✝"],"content":"ext"},{"tailPos":32064,"headPos":32015,"goalsBefore":["case h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type u_1\ninst✝¹ : Structure L P\nQ : Type ?u.151174\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\nx✝ : M\n⊢ ↑(toHom (comp hnp hmn)) x✝ = ↑(Hom.comp (toHom hnp) (toHom hmn)) x✝"],"goalsAfter":[],"content":"simp only [coe_toHom, comp_apply, Hom.comp_apply]"},{"tailPos":32064,"headPos":32009,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type u_1\ninst✝¹ : Structure L P\nQ : Type ?u.151174\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ toHom (comp hnp hmn) = Hom.comp (toHom hnp) (toHom hmn)"],"goalsAfter":[],"content":"ext\n  simp only [coe_toHom, comp_apply, Hom.comp_apply]"},{"tailPos":32006,"headPos":32004,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type u_1\ninst✝¹ : Structure L P\nQ : Type ?u.151174\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ toHom (comp hnp hmn) = Hom.comp (toHom hnp) (toHom hmn)"],"goalsAfter":[],"content":"by"},{"tailPos":32064,"headPos":32004,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type u_1\ninst✝¹ : Structure L P\nQ : Type ?u.151174\ninst✝ : Structure L Q\nhnp : N ↪[L] P\nhmn : M ↪[L] N\n⊢ toHom (comp hnp hmn) = Hom.comp (toHom hnp) (toHom hmn)"],"goalsAfter":[],"content":"by\n  ext\n  simp only [coe_toHom, comp_apply, Hom.comp_apply]"},{"tailPos":32831,"headPos":32824,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\nf g : M ≃[L] N\nh₁ : (fun f => f.toFun) f = (fun f => f.toFun) g\nh₂ : (fun f => f.invFun) f = (fun f => f.invFun) g\n⊢ f = g"],"goalsAfter":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\ng : M ≃[L] N\ntoEquiv✝ : M ≃ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝ (funMap f x) = funMap f (toEquiv✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝.toFun ∘ x) ↔ RelMap r x\nh₁ : (fun f => f.toFun) (mk toEquiv✝) = (fun f => f.toFun) g\nh₂ : (fun f => f.invFun) (mk toEquiv✝) = (fun f => f.invFun) g\n⊢ mk toEquiv✝ = g"],"content":"cases f"},{"tailPos":32843,"headPos":32836,"goalsBefore":["case mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\ng : M ≃[L] N\ntoEquiv✝ : M ≃ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝ (funMap f x) = funMap f (toEquiv✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝.toFun ∘ x) ↔ RelMap r x\nh₁ : (fun f => f.toFun) (mk toEquiv✝) = (fun f => f.toFun) g\nh₂ : (fun f => f.invFun) (mk toEquiv✝) = (fun f => f.invFun) g\n⊢ mk toEquiv✝ = g"],"goalsAfter":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\ntoEquiv✝¹ : M ≃ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝¹ (funMap f x) = funMap f (toEquiv✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝¹.toFun ∘ x) ↔ RelMap r x\ntoEquiv✝ : M ≃ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝ (funMap f x) = funMap f (toEquiv✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝.toFun ∘ x) ↔ RelMap r x\nh₁ : (fun f => f.toFun) (mk toEquiv✝¹) = (fun f => f.toFun) (mk toEquiv✝)\nh₂ : (fun f => f.invFun) (mk toEquiv✝¹) = (fun f => f.invFun) (mk toEquiv✝)\n⊢ mk toEquiv✝¹ = mk toEquiv✝"],"content":"cases g"},{"tailPos":32868,"headPos":32848,"goalsBefore":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\ntoEquiv✝¹ : M ≃ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝¹ (funMap f x) = funMap f (toEquiv✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝¹.toFun ∘ x) ↔ RelMap r x\ntoEquiv✝ : M ≃ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝ (funMap f x) = funMap f (toEquiv✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝.toFun ∘ x) ↔ RelMap r x\nh₁ : (fun f => f.toFun) (mk toEquiv✝¹) = (fun f => f.toFun) (mk toEquiv✝)\nh₂ : (fun f => f.invFun) (mk toEquiv✝¹) = (fun f => f.invFun) (mk toEquiv✝)\n⊢ mk toEquiv✝¹ = mk toEquiv✝"],"goalsAfter":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\ntoEquiv✝¹ : M ≃ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝¹ (funMap f x) = funMap f (toEquiv✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝¹.toFun ∘ x) ↔ RelMap r x\ntoEquiv✝ : M ≃ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝ (funMap f x) = funMap f (toEquiv✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝.toFun ∘ x) ↔ RelMap r x\nh₁ : (fun f => f.toFun) (mk toEquiv✝¹) = (fun f => f.toFun) (mk toEquiv✝)\nh₂ : (fun f => f.invFun) (mk toEquiv✝¹) = (fun f => f.invFun) (mk toEquiv✝)\n⊢ toEquiv✝¹ = toEquiv✝"],"content":"simp only [mk.injEq]"},{"tailPos":32878,"headPos":32873,"goalsBefore":["case mk.mk\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\ntoEquiv✝¹ : M ≃ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝¹ (funMap f x) = funMap f (toEquiv✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝¹.toFun ∘ x) ↔ RelMap r x\ntoEquiv✝ : M ≃ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝ (funMap f x) = funMap f (toEquiv✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝.toFun ∘ x) ↔ RelMap r x\nh₁ : (fun f => f.toFun) (mk toEquiv✝¹) = (fun f => f.toFun) (mk toEquiv✝)\nh₂ : (fun f => f.invFun) (mk toEquiv✝¹) = (fun f => f.invFun) (mk toEquiv✝)\n⊢ toEquiv✝¹ = toEquiv✝"],"goalsAfter":["case mk.mk.H\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\ntoEquiv✝¹ : M ≃ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝¹ (funMap f x) = funMap f (toEquiv✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝¹.toFun ∘ x) ↔ RelMap r x\ntoEquiv✝ : M ≃ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝ (funMap f x) = funMap f (toEquiv✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝.toFun ∘ x) ↔ RelMap r x\nh₁ : (fun f => f.toFun) (mk toEquiv✝¹) = (fun f => f.toFun) (mk toEquiv✝)\nh₂ : (fun f => f.invFun) (mk toEquiv✝¹) = (fun f => f.invFun) (mk toEquiv✝)\nx : M\n⊢ ↑toEquiv✝¹ x = ↑toEquiv✝ x"],"content":"ext x"},{"tailPos":32917,"headPos":32883,"goalsBefore":["case mk.mk.H\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\ntoEquiv✝¹ : M ≃ N\nmap_fun'✝¹ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝¹ (funMap f x) = funMap f (toEquiv✝¹.toFun ∘ x)\nmap_rel'✝¹ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝¹.toFun ∘ x) ↔ RelMap r x\ntoEquiv✝ : M ≃ N\nmap_fun'✝ :\n  ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M), Equiv.toFun toEquiv✝ (funMap f x) = funMap f (toEquiv✝.toFun ∘ x)\nmap_rel'✝ : ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M), RelMap r (toEquiv✝.toFun ∘ x) ↔ RelMap r x\nh₁ : (fun f => f.toFun) (mk toEquiv✝¹) = (fun f => f.toFun) (mk toEquiv✝)\nh₂ : (fun f => f.invFun) (mk toEquiv✝¹) = (fun f => f.invFun) (mk toEquiv✝)\nx : M\n⊢ ↑toEquiv✝¹ x = ↑toEquiv✝ x"],"goalsAfter":[],"content":"exact Function.funext_iff.1 h₁ x"},{"tailPos":32917,"headPos":32824,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\nf g : M ≃[L] N\nh₁ : (fun f => f.toFun) f = (fun f => f.toFun) g\nh₂ : (fun f => f.invFun) f = (fun f => f.invFun) g\n⊢ f = g"],"goalsAfter":[],"content":"cases f\n    cases g\n    simp only [mk.injEq]\n    ext x\n    exact Function.funext_iff.1 h₁ x"},{"tailPos":32819,"headPos":32817,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\nf g : M ≃[L] N\nh₁ : (fun f => f.toFun) f = (fun f => f.toFun) g\nh₂ : (fun f => f.invFun) f = (fun f => f.invFun) g\n⊢ f = g"],"goalsAfter":[],"content":"by"},{"tailPos":32917,"headPos":32817,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.179415\ninst✝¹ : Structure L P\nQ : Type ?u.179423\ninst✝ : Structure L Q\nf g : M ≃[L] N\nh₁ : (fun f => f.toFun) f = (fun f => f.toFun) g\nh₂ : (fun f => f.invFun) f = (fun f => f.invFun) g\n⊢ f = g"],"goalsAfter":[],"content":"by\n    cases f\n    cases g\n    simp only [mk.injEq]\n    ext x\n    exact Function.funext_iff.1 h₁ x"},{"tailPos":33238,"headPos":33208,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ Equiv.toFun\n      { toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n        right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n      (funMap f' x) =\n    funMap f'\n      ({ toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ ↑f.symm (funMap f' x) = funMap f' (↑f.symm ∘ x)"],"content":"simp only [Equiv.toFun_as_coe]"},{"tailPos":33268,"headPos":33249,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ ↑f.symm (funMap f' x) = funMap f' (↑f.symm ∘ x)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = ↑f.toEquiv (funMap f' (↑f.symm ∘ x))"],"content":"Equiv.symm_apply_eq"},{"tailPos":33269,"headPos":33268,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = ↑f.toEquiv (funMap f' (↑f.symm ∘ x))"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = ↑f.toEquiv (funMap f' (↑f.symm ∘ x))"],"content":"]"},{"tailPos":33269,"headPos":33245,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ ↑f.symm (funMap f' x) = funMap f' (↑f.symm ∘ x)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = ↑f.toEquiv (funMap f' (↑f.symm ∘ x))"],"content":"rw [Equiv.symm_apply_eq]"},{"tailPos":33338,"headPos":33276,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = ↑f.toEquiv (funMap f' (↑f.symm ∘ x))"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' (f.toFun ∘ ↑f.symm ∘ x)"],"content":"refine' Eq.trans _ (f.map_fun' f' (f.toEquiv.symm ∘ x)).symm"},{"tailPos":33373,"headPos":33349,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' (f.toFun ∘ ↑f.symm ∘ x)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' ((f.toFun ∘ ↑f.symm) ∘ x)"],"content":"← Function.comp.assoc,"},{"tailPos":33393,"headPos":33374,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' ((f.toFun ∘ ↑f.symm) ∘ x)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' ((↑f.toEquiv ∘ ↑f.symm) ∘ x)"],"content":"Equiv.toFun_as_coe,"},{"tailPos":33415,"headPos":33394,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' ((↑f.toEquiv ∘ ↑f.symm) ∘ x)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' (id ∘ x)"],"content":"Equiv.self_comp_symm,"},{"tailPos":33437,"headPos":33416,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' (id ∘ x)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' x"],"content":"Function.comp.left_id"},{"tailPos":33438,"headPos":33437,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' x"],"goalsAfter":[],"content":"]"},{"tailPos":33438,"headPos":33345,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ funMap f' x = funMap f' (f.toFun ∘ ↑f.symm ∘ x)"],"goalsAfter":[],"content":"rw [← Function.comp.assoc, Equiv.toFun_as_coe, Equiv.self_comp_symm, Function.comp.left_id]"},{"tailPos":33438,"headPos":33208,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ Equiv.toFun\n      { toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n        right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n      (funMap f' x) =\n    funMap f'\n      ({ toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x)"],"goalsAfter":[],"content":"simp only [Equiv.toFun_as_coe]\n      rw [Equiv.symm_apply_eq]\n      refine' Eq.trans _ (f.map_fun' f' (f.toEquiv.symm ∘ x)).symm\n      rw [← Function.comp.assoc, Equiv.toFun_as_coe, Equiv.self_comp_symm, Function.comp.left_id]"},{"tailPos":33201,"headPos":33199,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ Equiv.toFun\n      { toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n        right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n      (funMap f' x) =\n    funMap f'\n      ({ toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x)"],"goalsAfter":[],"content":"by"},{"tailPos":33438,"headPos":33199,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nf' : Functions L n\nx : Fin n → N\n⊢ Equiv.toFun\n      { toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n        right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n      (funMap f' x) =\n    funMap f'\n      ({ toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x)"],"goalsAfter":[],"content":"by\n      simp only [Equiv.toFun_as_coe]\n      rw [Equiv.symm_apply_eq]\n      refine' Eq.trans _ (f.map_fun' f' (f.toEquiv.symm ∘ x)).symm\n      rw [← Function.comp.assoc, Equiv.toFun_as_coe, Equiv.self_comp_symm, Function.comp.left_id]"},{"tailPos":33509,"headPos":33479,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r\n      ({ toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x) ↔\n    RelMap r x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r (↑f.symm ∘ x) ↔ RelMap r x"],"content":"simp only [Equiv.toFun_as_coe]"},{"tailPos":33574,"headPos":33516,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r (↑f.symm ∘ x) ↔ RelMap r x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r (f.toFun ∘ ↑f.symm ∘ x) ↔ RelMap r x"],"content":"refine' (f.map_rel' r (f.toEquiv.symm ∘ x)).symm.trans _"},{"tailPos":33609,"headPos":33585,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r (f.toFun ∘ ↑f.symm ∘ x) ↔ RelMap r x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r ((f.toFun ∘ ↑f.symm) ∘ x) ↔ RelMap r x"],"content":"← Function.comp.assoc,"},{"tailPos":33629,"headPos":33610,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r ((f.toFun ∘ ↑f.symm) ∘ x) ↔ RelMap r x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r ((↑f.toEquiv ∘ ↑f.symm) ∘ x) ↔ RelMap r x"],"content":"Equiv.toFun_as_coe,"},{"tailPos":33651,"headPos":33630,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r ((↑f.toEquiv ∘ ↑f.symm) ∘ x) ↔ RelMap r x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r (id ∘ x) ↔ RelMap r x"],"content":"Equiv.self_comp_symm,"},{"tailPos":33673,"headPos":33652,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r (id ∘ x) ↔ RelMap r x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r x ↔ RelMap r x"],"content":"Function.comp.left_id"},{"tailPos":33674,"headPos":33673,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r x ↔ RelMap r x"],"goalsAfter":[],"content":"]"},{"tailPos":33674,"headPos":33581,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r (f.toFun ∘ ↑f.symm ∘ x) ↔ RelMap r x"],"goalsAfter":[],"content":"rw [← Function.comp.assoc, Equiv.toFun_as_coe, Equiv.self_comp_symm, Function.comp.left_id]"},{"tailPos":33674,"headPos":33479,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r\n      ({ toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x) ↔\n    RelMap r x"],"goalsAfter":[],"content":"simp only [Equiv.toFun_as_coe]\n      refine' (f.map_rel' r (f.toEquiv.symm ∘ x)).symm.trans _\n      rw [← Function.comp.assoc, Equiv.toFun_as_coe, Equiv.self_comp_symm, Function.comp.left_id]"},{"tailPos":33472,"headPos":33470,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r\n      ({ toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x) ↔\n    RelMap r x"],"goalsAfter":[],"content":"by"},{"tailPos":33674,"headPos":33470,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.193481\ninst✝¹ : Structure L P\nQ : Type ?u.193489\ninst✝ : Structure L Q\nf : M ≃[L] N\nsrc✝ : N ≃ M := f.symm\nn : ℕ\nr : Relations L n\nx : Fin n → N\n⊢ RelMap r\n      ({ toFun := src✝.toFun, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x) ↔\n    RelMap r x"],"goalsAfter":[],"content":"by\n      simp only [Equiv.toFun_as_coe]\n      refine' (f.map_rel' r (f.toEquiv.symm ∘ x)).symm.trans _\n      rw [← Function.comp.assoc, Equiv.toFun_as_coe, Equiv.self_comp_symm, Function.comp.left_id]"},{"tailPos":37418,"headPos":37407,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.257731\ninst✝¹ : Structure L P\nQ : Type ?u.257739\ninst✝ : Structure L Q\nx : M\n⊢ ↑(refl L M) x = x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.257731\ninst✝¹ : Structure L P\nQ : Type ?u.257739\ninst✝ : Structure L Q\nx : M\n⊢ ↑(mk (_root_.Equiv.refl M)) x = x"],"content":"simp [refl]"},{"tailPos":37419,"headPos":37418,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.257731\ninst✝¹ : Structure L P\nQ : Type ?u.257739\ninst✝ : Structure L Q\nx : M\n⊢ ↑(mk (_root_.Equiv.refl M)) x = x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.257731\ninst✝¹ : Structure L P\nQ : Type ?u.257739\ninst✝ : Structure L Q\nx : M\n⊢ ↑(mk (_root_.Equiv.refl M)) x = x"],"content":";"},{"tailPos":37423,"headPos":37420,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.257731\ninst✝¹ : Structure L P\nQ : Type ?u.257739\ninst✝ : Structure L Q\nx : M\n⊢ ↑(mk (_root_.Equiv.refl M)) x = x"],"goalsAfter":[],"content":"rfl"},{"tailPos":37423,"headPos":37407,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.257731\ninst✝¹ : Structure L P\nQ : Type ?u.257739\ninst✝ : Structure L Q\nx : M\n⊢ ↑(refl L M) x = x"],"goalsAfter":[],"content":"simp [refl]; rfl"},{"tailPos":37406,"headPos":37404,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.257731\ninst✝¹ : Structure L P\nQ : Type ?u.257739\ninst✝ : Structure L Q\nx : M\n⊢ ↑(refl L M) x = x"],"goalsAfter":[],"content":"by"},{"tailPos":37423,"headPos":37404,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.257731\ninst✝¹ : Structure L P\nQ : Type ?u.257739\ninst✝ : Structure L Q\nx : M\n⊢ ↑(refl L M) x = x"],"goalsAfter":[],"content":"by simp [refl]; rfl"},{"tailPos":37766,"headPos":37760,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\n⊢ ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Equiv.toFun\n        { toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n          right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n        (funMap f x) =\n      funMap f\n        ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n              right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n          x)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ Equiv.toFun\n      { toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n        right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n      (funMap f✝ x✝) =\n    funMap f✝\n      ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x✝)"],"content":"intros"},{"tailPos":37767,"headPos":37766,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ Equiv.toFun\n      { toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n        right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n      (funMap f✝ x✝) =\n    funMap f✝\n      ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x✝)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ Equiv.toFun\n      { toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n        right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n      (funMap f✝ x✝) =\n    funMap f✝\n      ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x✝)"],"content":";"},{"tailPos":37808,"headPos":37768,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ Equiv.toFun\n      { toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n        right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n      (funMap f✝ x✝) =\n    funMap f✝\n      ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x✝)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap f✝ (↑hnp ∘ ↑hmn ∘ x✝) = funMap f✝ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"content":"simp only [Function.comp_apply, map_fun]"},{"tailPos":37809,"headPos":37808,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap f✝ (↑hnp ∘ ↑hmn ∘ x✝) = funMap f✝ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap f✝ (↑hnp ∘ ↑hmn ∘ x✝) = funMap f✝ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"content":";"},{"tailPos":37817,"headPos":37810,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nf✝ : Functions L n✝\nx✝ : Fin n✝ → M\n⊢ funMap f✝ (↑hnp ∘ ↑hmn ∘ x✝) = funMap f✝ ((↑hnp ∘ ↑hmn) ∘ x✝)"],"goalsAfter":[],"content":"trivial"},{"tailPos":37817,"headPos":37760,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\n⊢ ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Equiv.toFun\n        { toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n          right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n        (funMap f x) =\n      funMap f\n        ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n              right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n          x)"],"goalsAfter":[],"content":"intros; simp only [Function.comp_apply, map_fun]; trivial"},{"tailPos":37759,"headPos":37757,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\n⊢ ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Equiv.toFun\n        { toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n          right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n        (funMap f x) =\n      funMap f\n        ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n              right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n          x)"],"goalsAfter":[],"content":"by"},{"tailPos":37817,"headPos":37757,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\n⊢ ∀ {n : ℕ} (f : Functions L n) (x : Fin n → M),\n    Equiv.toFun\n        { toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n          right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }\n        (funMap f x) =\n      funMap f\n        ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n              right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n          x)"],"goalsAfter":[],"content":"by intros; simp only [Function.comp_apply, map_fun]; trivial"},{"tailPos":37893,"headPos":37887,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\n⊢ ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M),\n    RelMap r\n        ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n              right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n          x) ↔\n      RelMap r x"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝\n      ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x✝) ↔\n    RelMap r✝ x✝"],"content":"intros"},{"tailPos":37894,"headPos":37893,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝\n      ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x✝) ↔\n    RelMap r✝ x✝"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝\n      ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x✝) ↔\n    RelMap r✝ x✝"],"content":";"},{"tailPos":37919,"headPos":37899,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝\n      ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x✝) ↔\n    RelMap r✝ x✝"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ (↑hnp ∘ ↑hmn ∘ x✝) ↔ RelMap r✝ x✝"],"content":"Function.comp.assoc,"},{"tailPos":37928,"headPos":37920,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ (↑hnp ∘ ↑hmn ∘ x✝) ↔ RelMap r✝ x✝"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ (↑hmn ∘ x✝) ↔ RelMap r✝ x✝"],"content":"map_rel,"},{"tailPos":37936,"headPos":37929,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ (↑hmn ∘ x✝) ↔ RelMap r✝ x✝"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ x✝ ↔ RelMap r✝ x✝"],"content":"map_rel"},{"tailPos":37937,"headPos":37936,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝ x✝ ↔ RelMap r✝ x✝"],"goalsAfter":[],"content":"]"},{"tailPos":37937,"headPos":37895,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\nn✝ : ℕ\nr✝ : Relations L n✝\nx✝ : Fin n✝ → M\n⊢ RelMap r✝\n      ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n            right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n        x✝) ↔\n    RelMap r✝ x✝"],"goalsAfter":[],"content":"rw [Function.comp.assoc, map_rel, map_rel]"},{"tailPos":37937,"headPos":37887,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\n⊢ ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M),\n    RelMap r\n        ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n              right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n          x) ↔\n      RelMap r x"],"goalsAfter":[],"content":"intros; rw [Function.comp.assoc, map_rel, map_rel]"},{"tailPos":37886,"headPos":37884,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\n⊢ ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M),\n    RelMap r\n        ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n              right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n          x) ↔\n      RelMap r x"],"goalsAfter":[],"content":"by"},{"tailPos":37937,"headPos":37884,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.258068\ninst✝¹ : Structure L P\nQ : Type ?u.258076\ninst✝ : Structure L Q\nhnp : N ≃[L] P\nhmn : M ≃[L] N\nsrc✝ : M ≃ P := hmn.trans hnp.toEquiv\n⊢ ∀ {n : ℕ} (r : Relations L n) (x : Fin n → M),\n    RelMap r\n        ({ toFun := ↑hnp ∘ ↑hmn, invFun := src✝.invFun, left_inv := (_ : Function.LeftInverse src✝.invFun src✝.toFun),\n              right_inv := (_ : Function.RightInverse src✝.invFun src✝.toFun) }.toFun ∘\n          x) ↔\n      RelMap r x"],"goalsAfter":[],"content":"by intros; rw [Function.comp.assoc, map_rel, map_rel]"},{"tailPos":41356,"headPos":41349,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\n⊢ a = default"],"goalsAfter":["case funMap.h.h.h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\nx✝¹ : ℕ\nf : Functions Language.empty x✝¹\nx✝ : Fin x✝¹ → M\n⊢ funMap f x✝ = funMap f x✝","case RelMap.h.h.h.a\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\nx✝¹ : ℕ\nf : Relations Language.empty x✝¹\nx✝ : Fin x✝¹ → M\n⊢ RelMap f x✝ ↔ RelMap f x✝"],"content":"ext _ f"},{"tailPos":41360,"headPos":41357,"goalsBefore":["case funMap.h.h.h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\nx✝¹ : ℕ\nf : Functions Language.empty x✝¹\nx✝ : Fin x✝¹ → M\n⊢ funMap f x✝ = funMap f x✝","case RelMap.h.h.h.a\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\nx✝¹ : ℕ\nf : Relations Language.empty x✝¹\nx✝ : Fin x✝¹ → M\n⊢ RelMap f x✝ ↔ RelMap f x✝"],"goalsAfter":["case funMap.h.h.h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\nx✝¹ : ℕ\nf : Functions Language.empty x✝¹\nx✝ : Fin x✝¹ → M\n⊢ funMap f x✝ = funMap f x✝","case RelMap.h.h.h.a\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\nx✝¹ : ℕ\nf : Relations Language.empty x✝¹\nx✝ : Fin x✝¹ → M\n⊢ RelMap f x✝ ↔ RelMap f x✝"],"content":"<;>"},{"tailPos":41379,"headPos":41361,"goalsBefore":["case funMap.h.h.h\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\nx✝¹ : ℕ\nf : Functions Language.empty x✝¹\nx✝ : Fin x✝¹ → M\n⊢ funMap f x✝ = funMap f x✝"],"goalsAfter":[],"content":"exact Empty.elim f"},{"tailPos":41379,"headPos":41361,"goalsBefore":["case RelMap.h.h.h.a\nL : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\nx✝¹ : ℕ\nf : Relations Language.empty x✝¹\nx✝ : Fin x✝¹ → M\n⊢ RelMap f x✝ ↔ RelMap f x✝"],"goalsAfter":[],"content":"exact Empty.elim f"},{"tailPos":41379,"headPos":41349,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\n⊢ a = default"],"goalsAfter":[],"content":"ext _ f <;> exact Empty.elim f"},{"tailPos":41344,"headPos":41342,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\n⊢ a = default"],"goalsAfter":[],"content":"by"},{"tailPos":41379,"headPos":41342,"goalsBefore":["L : Language\nL' : Language\nM : Type w\nN : Type w'\ninst✝³ : Structure L M\ninst✝² : Structure L N\nP : Type ?u.289795\ninst✝¹ : Structure L P\nQ : Type ?u.289803\ninst✝ : Structure L Q\na : Structure Language.empty M\n⊢ a = default"],"goalsAfter":[],"content":"by\n    ext _ f <;> exact Empty.elim f"},{"tailPos":43530,"headPos":43488,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\n⊢ M ≃[L] N"],"goalsAfter":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\n⊢ M ≃[L] N"],"content":"letI : L.Structure N := inducedStructure e"},{"tailPos":43624,"headPos":43583,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\nn : ℕ\nf : Functions L n\nx : Fin n → M\n⊢ toFun\n      { toFun := e.toFun, invFun := e.invFun, left_inv := (_ : Function.LeftInverse e.invFun e.toFun),\n        right_inv := (_ : Function.RightInverse e.invFun e.toFun) }\n      (funMap f x) =\n    funMap f\n      ({ toFun := e.toFun, invFun := e.invFun, left_inv := (_ : Function.LeftInverse e.invFun e.toFun),\n            right_inv := (_ : Function.RightInverse e.invFun e.toFun) }.toFun ∘\n        x)"],"goalsAfter":[],"content":"simp [← Function.comp.assoc e.symm e x]"},{"tailPos":43582,"headPos":43580,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\nn : ℕ\nf : Functions L n\nx : Fin n → M\n⊢ toFun\n      { toFun := e.toFun, invFun := e.invFun, left_inv := (_ : Function.LeftInverse e.invFun e.toFun),\n        right_inv := (_ : Function.RightInverse e.invFun e.toFun) }\n      (funMap f x) =\n    funMap f\n      ({ toFun := e.toFun, invFun := e.invFun, left_inv := (_ : Function.LeftInverse e.invFun e.toFun),\n            right_inv := (_ : Function.RightInverse e.invFun e.toFun) }.toFun ∘\n        x)"],"goalsAfter":[],"content":"by"},{"tailPos":43624,"headPos":43580,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\nn : ℕ\nf : Functions L n\nx : Fin n → M\n⊢ toFun\n      { toFun := e.toFun, invFun := e.invFun, left_inv := (_ : Function.LeftInverse e.invFun e.toFun),\n        right_inv := (_ : Function.RightInverse e.invFun e.toFun) }\n      (funMap f x) =\n    funMap f\n      ({ toFun := e.toFun, invFun := e.invFun, left_inv := (_ : Function.LeftInverse e.invFun e.toFun),\n            right_inv := (_ : Function.RightInverse e.invFun e.toFun) }.toFun ∘\n        x)"],"goalsAfter":[],"content":"by simp [← Function.comp.assoc e.symm e x]"},{"tailPos":43699,"headPos":43658,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\nn : ℕ\nr : Relations L n\nx : Fin n → M\n⊢ RelMap r\n      ({ toFun := e.toFun, invFun := e.invFun, left_inv := (_ : Function.LeftInverse e.invFun e.toFun),\n            right_inv := (_ : Function.RightInverse e.invFun e.toFun) }.toFun ∘\n        x) ↔\n    RelMap r x"],"goalsAfter":[],"content":"simp [← Function.comp.assoc e.symm e x]"},{"tailPos":43657,"headPos":43655,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\nn : ℕ\nr : Relations L n\nx : Fin n → M\n⊢ RelMap r\n      ({ toFun := e.toFun, invFun := e.invFun, left_inv := (_ : Function.LeftInverse e.invFun e.toFun),\n            right_inv := (_ : Function.RightInverse e.invFun e.toFun) }.toFun ∘\n        x) ↔\n    RelMap r x"],"goalsAfter":[],"content":"by"},{"tailPos":43699,"headPos":43655,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\nn : ℕ\nr : Relations L n\nx : Fin n → M\n⊢ RelMap r\n      ({ toFun := e.toFun, invFun := e.invFun, left_inv := (_ : Function.LeftInverse e.invFun e.toFun),\n            right_inv := (_ : Function.RightInverse e.invFun e.toFun) }.toFun ∘\n        x) ↔\n    RelMap r x"],"goalsAfter":[],"content":"by simp [← Function.comp.assoc e.symm e x]"},{"tailPos":43701,"headPos":43533,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\n⊢ M ≃[L] N"],"goalsAfter":[],"content":"exact\n  { e with\n    map_fun' := @fun n f x => by simp [← Function.comp.assoc e.symm e x]\n    map_rel' := @fun n r x => by simp [← Function.comp.assoc e.symm e x] }"},{"tailPos":43701,"headPos":43488,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\n⊢ M ≃[L] N"],"goalsAfter":[],"content":"letI : L.Structure N := inducedStructure e\n  exact\n  { e with\n    map_fun' := @fun n f x => by simp [← Function.comp.assoc e.symm e x]\n    map_rel' := @fun n r x => by simp [← Function.comp.assoc e.symm e x] }"},{"tailPos":43485,"headPos":43483,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\n⊢ M ≃[L] N"],"goalsAfter":[],"content":"by"},{"tailPos":43701,"headPos":43483,"goalsBefore":["L : Language\nM : Type ?u.308270\nN : Type ?u.308273\ninst✝ : Structure L M\ne : M ≃ N\n⊢ M ≃[L] N"],"goalsAfter":[],"content":"by\n  letI : L.Structure N := inducedStructure e\n  exact\n  { e with\n    map_fun' := @fun n f x => by simp [← Function.comp.assoc e.symm e x]\n    map_rel' := @fun n r x => by simp [← Function.comp.assoc e.symm e x] }"},{"tailPos":44211,"headPos":44169,"goalsBefore":["L : Language\nM : Type ?u.318087\nN : Type ?u.318090\ninst✝ : Structure L M\ne : M ≃ N\n⊢ (a : N) → (fun x => M) a"],"goalsAfter":["L : Language\nM : Type ?u.318087\nN : Type ?u.318090\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\n⊢ (a : N) → (fun x => M) a"],"content":"letI : L.Structure N := inducedStructure e"},{"tailPos":44273,"headPos":44216,"goalsBefore":["L : Language\nM : Type ?u.318087\nN : Type ?u.318090\ninst✝ : Structure L M\ne : M ≃ N\nthis : Structure L N := inducedStructure e\n⊢ (a : N) → (fun x => M) a"],"goalsAfter":[],"content":"exact FunLike.coe (@inducedStructureEquiv L M N _ e).symm"},{"tailPos":44273,"headPos":44169,"goalsBefore":["L : Language\nM : Type ?u.318087\nN : Type ?u.318090\ninst✝ : Structure L M\ne : M ≃ N\n⊢ (a : N) → (fun x => M) a"],"goalsAfter":[],"content":"letI : L.Structure N := inducedStructure e\n    exact FunLike.coe (@inducedStructureEquiv L M N _ e).symm"},{"tailPos":44164,"headPos":44162,"goalsBefore":["L : Language\nM : Type ?u.318087\nN : Type ?u.318090\ninst✝ : Structure L M\ne : M ≃ N\n⊢ (a : N) → (fun x => M) a"],"goalsAfter":[],"content":"by"},{"tailPos":44273,"headPos":44162,"goalsBefore":["L : Language\nM : Type ?u.318087\nN : Type ?u.318090\ninst✝ : Structure L M\ne : M ≃ N\n⊢ (a : N) → (fun x => M) a"],"goalsAfter":[],"content":"by\n    letI : L.Structure N := inducedStructure e\n    exact FunLike.coe (@inducedStructureEquiv L M N _ e).symm"}]