[{"tailPos":3697,"headPos":3688,"goalsBefore":["M : Type ?u.885\ninst✝ : Semigroup M\nsrc✝ : Mul (Ultrafilter M) := mul\nU V W : Ultrafilter M\np : M → Prop\n⊢ (∀ᶠ (x : M) in ↑(U * V * W), p x) ↔ ∀ᶠ (x : M) in ↑(U * (V * W)), p x"],"goalsAfter":["M : Type ?u.885\ninst✝ : Semigroup M\nsrc✝ : Mul (Ultrafilter M) := mul\nU V W : Ultrafilter M\np : M → Prop\n⊢ (∀ᶠ (x : M) in ↑(U * V * W), p x) ↔ ∀ᶠ (x : M) in ↑(U * (V * W)), p x"],"content":"simp_rw ["},{"tailPos":3724,"headPos":3697,"goalsBefore":["M : Type ?u.885\ninst✝ : Semigroup M\nsrc✝ : Mul (Ultrafilter M) := mul\nU V W : Ultrafilter M\np : M → Prop\n⊢ (∀ᶠ (x : M) in ↑(U * V * W), p x) ↔ ∀ᶠ (x : M) in ↑(U * (V * W)), p x"],"goalsAfter":["M : Type ?u.885\ninst✝ : Semigroup M\nsrc✝ : Mul (Ultrafilter M) := mul\nU V W : Ultrafilter M\np : M → Prop\n⊢ (∀ᶠ (m : M) in ↑U, ∀ᶠ (m' : M) in ↑V, ∀ᶠ (m'_1 : M) in ↑W, p (m * m' * m'_1)) ↔\n    ∀ᶠ (m : M) in ↑U, ∀ᶠ (m_1 : M) in ↑V, ∀ᶠ (m' : M) in ↑W, p (m * (m_1 * m'))"],"content":"Ultrafilter.eventually_mul,"},{"tailPos":3734,"headPos":3725,"goalsBefore":["M : Type ?u.885\ninst✝ : Semigroup M\nsrc✝ : Mul (Ultrafilter M) := mul\nU V W : Ultrafilter M\np : M → Prop\n⊢ (∀ᶠ (m : M) in ↑U, ∀ᶠ (m' : M) in ↑V, ∀ᶠ (m'_1 : M) in ↑W, p (m * m' * m'_1)) ↔\n    ∀ᶠ (m : M) in ↑U, ∀ᶠ (m_1 : M) in ↑V, ∀ᶠ (m' : M) in ↑W, p (m * (m_1 * m'))"],"goalsAfter":[],"content":"simp only [mul_assoc]"},{"tailPos":3735,"headPos":3688,"goalsBefore":["M : Type ?u.885\ninst✝ : Semigroup M\nsrc✝ : Mul (Ultrafilter M) := mul\nU V W : Ultrafilter M\np : M → Prop\n⊢ (∀ᶠ (x : M) in ↑(U * V * W), p x) ↔ ∀ᶠ (x : M) in ↑(U * (V * W)), p x"],"goalsAfter":[],"content":"simp_rw [Ultrafilter.eventually_mul, mul_assoc]"},{"tailPos":3687,"headPos":3685,"goalsBefore":["M : Type ?u.885\ninst✝ : Semigroup M\nsrc✝ : Mul (Ultrafilter M) := mul\nU V W : Ultrafilter M\np : M → Prop\n⊢ (∀ᶠ (x : M) in ↑(U * V * W), p x) ↔ ∀ᶠ (x : M) in ↑(U * (V * W)), p x"],"goalsAfter":[],"content":"by"},{"tailPos":3735,"headPos":3685,"goalsBefore":["M : Type ?u.885\ninst✝ : Semigroup M\nsrc✝ : Mul (Ultrafilter M) := mul\nU V W : Ultrafilter M\np : M → Prop\n⊢ (∀ᶠ (x : M) in ↑(U * V * W), p x) ↔ ∀ᶠ (x : M) in ↑(U * (V * W)), p x"],"goalsAfter":[],"content":"by simp_rw [Ultrafilter.eventually_mul, mul_assoc]"},{"tailPos":6171,"headPos":6131,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nm : M\nhm : m ∈ FP a\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a"],"goalsAfter":["case head\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm : M\na : Stream' M\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m' ∈ FP a","case tail\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a","case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"content":"induction' hm with a a m hm ih a m hm ih"},{"tailPos":6176,"headPos":6174,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm : M\na : Stream' M\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m' ∈ FP a","case tail\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a","case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case head\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm : M\na : Stream' M\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m' ∈ FP a"],"content":"·"},{"tailPos":6218,"headPos":6177,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm : M\na : Stream' M\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m' ∈ FP a"],"goalsAfter":[],"content":"exact ⟨1, fun m hm => FP.cons a m hm⟩"},{"tailPos":6218,"headPos":6174,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm : M\na : Stream' M\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m' ∈ FP a","case tail\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a","case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case tail\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a","case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"content":"· exact ⟨1, fun m hm => FP.cons a m hm⟩"},{"tailPos":6223,"headPos":6221,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a","case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case tail\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a"],"content":"·"},{"tailPos":6243,"headPos":6224,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a"],"goalsAfter":["case tail.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a"],"content":"cases' ih with n hn"},{"tailPos":6257,"headPos":6248,"goalsBefore":["case tail.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a"],"goalsAfter":["case tail.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∀ (m' : M), m' ∈ FP (Stream'.drop (n + 1) a) → m * m' ∈ FP a"],"content":"use n + 1"},{"tailPos":6274,"headPos":6262,"goalsBefore":["case tail.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∀ (m' : M), m' ∈ FP (Stream'.drop (n + 1) a) → m * m' ∈ FP a"],"goalsAfter":["case tail.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ m * m' ∈ FP a"],"content":"intro m' hm'"},{"tailPos":6307,"headPos":6279,"goalsBefore":["case tail.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ m * m' ∈ FP a"],"goalsAfter":[],"content":"exact FP.tail _ _ (hn _ hm')"},{"tailPos":6307,"headPos":6224,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a"],"goalsAfter":[],"content":"cases' ih with n hn\n    use n + 1\n    intro m' hm'\n    exact FP.tail _ _ (hn _ hm')"},{"tailPos":6307,"headPos":6221,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a","case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"content":"· cases' ih with n hn\n    use n + 1\n    intro m' hm'\n    exact FP.tail _ _ (hn _ hm')"},{"tailPos":6312,"headPos":6310,"goalsBefore":["case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"content":"·"},{"tailPos":6332,"headPos":6313,"goalsBefore":["case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"content":"cases' ih with n hn"},{"tailPos":6346,"headPos":6337,"goalsBefore":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∀ (m' : M), m' ∈ FP (Stream'.drop (n + 1) a) → Stream'.head a * m * m' ∈ FP a"],"content":"use n + 1"},{"tailPos":6363,"headPos":6351,"goalsBefore":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∀ (m' : M), m' ∈ FP (Stream'.drop (n + 1) a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ Stream'.head a * m * m' ∈ FP a"],"content":"intro m' hm'"},{"tailPos":6381,"headPos":6372,"goalsBefore":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ Stream'.head a * (m * m') ∈ FP a"],"content":"mul_assoc"},{"tailPos":6382,"headPos":6381,"goalsBefore":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ Stream'.head a * (m * m') ∈ FP a"],"goalsAfter":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ Stream'.head a * (m * m') ∈ FP a"],"content":"]"},{"tailPos":6382,"headPos":6368,"goalsBefore":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ Stream'.head a * m * m' ∈ FP a"],"goalsAfter":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ Stream'.head a * (m * m') ∈ FP a"],"content":"rw [mul_assoc]"},{"tailPos":6415,"headPos":6387,"goalsBefore":["case cons.intro\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nn : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n + 1) a)\n⊢ Stream'.head a * (m * m') ∈ FP a"],"goalsAfter":[],"content":"exact FP.cons _ _ (hn _ hm')"},{"tailPos":6415,"headPos":6313,"goalsBefore":["case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":[],"content":"cases' ih with n hn\n    use n + 1\n    intro m' hm'\n    rw [mul_assoc]\n    exact FP.cons _ _ (hn _ hm')"},{"tailPos":6415,"headPos":6310,"goalsBefore":["case cons\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\nm✝ : M\na : Stream' M\nm : M\nhm : FP (Stream'.tail a) m\nih : ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n (Stream'.tail a)) → m * m' ∈ FP (Stream'.tail a)\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → Stream'.head a * m * m' ∈ FP a"],"goalsAfter":[],"content":"· cases' ih with n hn\n    use n + 1\n    intro m' hm'\n    rw [mul_assoc]\n    exact FP.cons _ _ (hn _ hm')"},{"tailPos":6415,"headPos":6131,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nm : M\nhm : m ∈ FP a\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a"],"goalsAfter":[],"content":"induction' hm with a a m hm ih a m hm ih\n  · exact ⟨1, fun m hm => FP.cons a m hm⟩\n  · cases' ih with n hn\n    use n + 1\n    intro m' hm'\n    exact FP.tail _ _ (hn _ hm')\n  · cases' ih with n hn\n    use n + 1\n    intro m' hm'\n    rw [mul_assoc]\n    exact FP.cons _ _ (hn _ hm')"},{"tailPos":6128,"headPos":6126,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nm : M\nhm : m ∈ FP a\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a"],"goalsAfter":[],"content":"by"},{"tailPos":6415,"headPos":6126,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nm : M\nhm : m ∈ FP a\n⊢ ∃ n, ∀ (m' : M), m' ∈ FP (Stream'.drop n a) → m * m' ∈ FP a"],"goalsAfter":[],"content":"by\n  induction' hm with a a m hm ih a m hm ih\n  · exact ⟨1, fun m hm => FP.cons a m hm⟩\n  · cases' ih with n hn\n    use n + 1\n    intro m' hm'\n    exact FP.tail _ _ (hn _ hm')\n  · cases' ih with n hn\n    use n + 1\n    intro m' hm'\n    rw [mul_assoc]\n    exact FP.cons _ _ (hn _ hm')"},{"tailPos":6861,"headPos":6781,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"content":"let S : Set (Ultrafilter M) := ⋂ n, { U | ∀ᶠ m in U, m ∈ FP (a.drop n) }"},{"tailPos":6929,"headPos":6864,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"goalsAfter":["case refine_5\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nh : ∃ m, m ∈ S ∧ m * m = m\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a","case refine_1\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (r : Ultrafilter M), Continuous fun x => x * r","case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S","case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"content":"have h := exists_idempotent_in_compact_subsemigroup ?_ S ?_ ?_ ?_"},{"tailPos":6934,"headPos":6932,"goalsBefore":["case refine_5\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nh : ∃ m, m ∈ S ∧ m * m = m\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a","case refine_1\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (r : Ultrafilter M), Continuous fun x => x * r","case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S","case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_5\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nh : ∃ m, m ∈ S ∧ m * m = m\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"content":"·"},{"tailPos":6968,"headPos":6935,"goalsBefore":["case refine_5\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nh : ∃ m, m ∈ S ∧ m * m = m\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"goalsAfter":["case refine_5.intro.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : U ∈ S\nU_idem : U * U = U\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"content":"rcases h with ⟨U, hU, U_idem⟩"},{"tailPos":6999,"headPos":6973,"goalsBefore":["case refine_5.intro.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : U ∈ S\nU_idem : U * U = U\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"goalsAfter":["case refine_5.intro.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : U ∈ S\nU_idem : U * U = U\n⊢ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"content":"refine' ⟨U, U_idem, _⟩"},{"tailPos":7034,"headPos":7004,"goalsBefore":["case refine_5.intro.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : U ∈ S\nU_idem : U * U = U\n⊢ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"goalsAfter":[],"content":"convert Set.mem_iInter.mp hU 0"},{"tailPos":7034,"headPos":6935,"goalsBefore":["case refine_5\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nh : ∃ m, m ∈ S ∧ m * m = m\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"goalsAfter":[],"content":"rcases h with ⟨U, hU, U_idem⟩\n    refine' ⟨U, U_idem, _⟩\n    convert Set.mem_iInter.mp hU 0"},{"tailPos":7034,"headPos":6932,"goalsBefore":["case refine_5\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nh : ∃ m, m ∈ S ∧ m * m = m\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a","case refine_1\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (r : Ultrafilter M), Continuous fun x => x * r","case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S","case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_1\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (r : Ultrafilter M), Continuous fun x => x * r","case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S","case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"content":"· rcases h with ⟨U, hU, U_idem⟩\n    refine' ⟨U, U_idem, _⟩\n    convert Set.mem_iInter.mp hU 0"},{"tailPos":7039,"headPos":7037,"goalsBefore":["case refine_1\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (r : Ultrafilter M), Continuous fun x => x * r","case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S","case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_1\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (r : Ultrafilter M), Continuous fun x => x * r"],"content":"·"},{"tailPos":7077,"headPos":7040,"goalsBefore":["case refine_1\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (r : Ultrafilter M), Continuous fun x => x * r"],"goalsAfter":[],"content":"exact Ultrafilter.continuous_mul_left"},{"tailPos":7077,"headPos":7037,"goalsBefore":["case refine_1\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (r : Ultrafilter M), Continuous fun x => x * r","case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S","case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S","case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"content":"· exact Ultrafilter.continuous_mul_left"},{"tailPos":7082,"headPos":7080,"goalsBefore":["case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S","case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S"],"content":"·"},{"tailPos":7150,"headPos":7083,"goalsBefore":["case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S"],"goalsAfter":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (i + 1) a)} ⊆ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}","case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}","case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}","case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"apply IsCompact.nonempty_iInter_of_sequence_nonempty_compact_closed"},{"tailPos":7157,"headPos":7155,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (i + 1) a)} ⊆ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}","case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}","case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}","case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (i + 1) a)} ⊆ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"·"},{"tailPos":7170,"headPos":7158,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (i + 1) a)} ⊆ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}"],"content":"intro n U hU"},{"tailPos":7201,"headPos":7177,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}"],"goalsAfter":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop (n + 1) a) → x ∈ FP (Stream'.drop n a)"],"content":"apply Eventually.mono hU"},{"tailPos":7221,"headPos":7212,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop (n + 1) a) → x ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop (1 + n) a) → x ∈ FP (Stream'.drop n a)"],"content":"add_comm,"},{"tailPos":7244,"headPos":7222,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop (1 + n) a) → x ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop 1 (Stream'.drop n a)) → x ∈ FP (Stream'.drop n a)"],"content":"← Stream'.drop_drop,"},{"tailPos":7269,"headPos":7245,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop 1 (Stream'.drop n a)) → x ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.tail (Stream'.drop n a)) → x ∈ FP (Stream'.drop n a)"],"content":"← Stream'.tail_eq_drop"},{"tailPos":7270,"headPos":7269,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.tail (Stream'.drop n a)) → x ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.tail (Stream'.drop n a)) → x ∈ FP (Stream'.drop n a)"],"content":"]"},{"tailPos":7270,"headPos":7208,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop (n + 1) a) → x ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.tail (Stream'.drop n a)) → x ∈ FP (Stream'.drop n a)"],"content":"rw [add_comm, ← Stream'.drop_drop, ← Stream'.tail_eq_drop]"},{"tailPos":7292,"headPos":7277,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\nU : Ultrafilter M\nhU : U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (n + 1) a)}\n⊢ ∀ (x : M), x ∈ FP (Stream'.tail (Stream'.drop n a)) → x ∈ FP (Stream'.drop n a)"],"goalsAfter":[],"content":"exact FP.tail _"},{"tailPos":7292,"headPos":7158,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (i + 1) a)} ⊆ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":[],"content":"intro n U hU\n      apply Eventually.mono hU\n      rw [add_comm, ← Stream'.drop_drop, ← Stream'.tail_eq_drop]\n      exact FP.tail _"},{"tailPos":7292,"headPos":7155,"goalsBefore":["case refine_2.hZd\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop (i + 1) a)} ⊆ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}","case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}","case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}","case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}","case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}","case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"· intro n U hU\n      apply Eventually.mono hU\n      rw [add_comm, ← Stream'.drop_drop, ← Stream'.tail_eq_drop]\n      exact FP.tail _"},{"tailPos":7299,"headPos":7297,"goalsBefore":["case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}","case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}","case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"·"},{"tailPos":7307,"headPos":7300,"goalsBefore":["case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\n⊢ Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}"],"content":"intro n"},{"tailPos":7359,"headPos":7314,"goalsBefore":["case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\n⊢ Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}"],"goalsAfter":[],"content":"exact ⟨pure _, mem_pure.mpr <| FP.head _⟩"},{"tailPos":7359,"headPos":7300,"goalsBefore":["case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":[],"content":"intro n\n      exact ⟨pure _, mem_pure.mpr <| FP.head _⟩"},{"tailPos":7359,"headPos":7297,"goalsBefore":["case refine_2.hZn\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), Set.Nonempty {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}","case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}","case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}","case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"· intro n\n      exact ⟨pure _, mem_pure.mpr <| FP.head _⟩"},{"tailPos":7366,"headPos":7364,"goalsBefore":["case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}","case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}"],"content":"·"},{"tailPos":7413,"headPos":7367,"goalsBefore":["case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}"],"goalsAfter":[],"content":"exact (ultrafilter_isClosed_basic _).isCompact"},{"tailPos":7413,"headPos":7364,"goalsBefore":["case refine_2.hZ0\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop 0 a)}","case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"· exact (ultrafilter_isClosed_basic _).isCompact"},{"tailPos":7420,"headPos":7418,"goalsBefore":["case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"·"},{"tailPos":7428,"headPos":7421,"goalsBefore":["case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\n⊢ IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}"],"content":"intro n"},{"tailPos":7467,"headPos":7435,"goalsBefore":["case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nn : ℕ\n⊢ IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}"],"goalsAfter":[],"content":"apply ultrafilter_isClosed_basic"},{"tailPos":7467,"headPos":7421,"goalsBefore":["case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":[],"content":"intro n\n      apply ultrafilter_isClosed_basic"},{"tailPos":7467,"headPos":7418,"goalsBefore":["case refine_2.hZcl\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (i : ℕ), IsClosed {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":[],"content":"· intro n\n      apply ultrafilter_isClosed_basic"},{"tailPos":7467,"headPos":7083,"goalsBefore":["case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S"],"goalsAfter":[],"content":"apply IsCompact.nonempty_iInter_of_sequence_nonempty_compact_closed\n    · intro n U hU\n      apply Eventually.mono hU\n      rw [add_comm, ← Stream'.drop_drop, ← Stream'.tail_eq_drop]\n      exact FP.tail _\n    · intro n\n      exact ⟨pure _, mem_pure.mpr <| FP.head _⟩\n    · exact (ultrafilter_isClosed_basic _).isCompact\n    · intro n\n      apply ultrafilter_isClosed_basic"},{"tailPos":7467,"headPos":7080,"goalsBefore":["case refine_2\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ Set.Nonempty S","case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"content":"· apply IsCompact.nonempty_iInter_of_sequence_nonempty_compact_closed\n    · intro n U hU\n      apply Eventually.mono hU\n      rw [add_comm, ← Stream'.drop_drop, ← Stream'.tail_eq_drop]\n      exact FP.tail _\n    · intro n\n      exact ⟨pure _, mem_pure.mpr <| FP.head _⟩\n    · exact (ultrafilter_isClosed_basic _).isCompact\n    · intro n\n      apply ultrafilter_isClosed_basic"},{"tailPos":7472,"headPos":7470,"goalsBefore":["case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S"],"content":"·"},{"tailPos":7553,"headPos":7473,"goalsBefore":["case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S"],"goalsAfter":[],"content":"exact IsClosed.isCompact (isClosed_iInter fun i => ultrafilter_isClosed_basic _)"},{"tailPos":7553,"headPos":7470,"goalsBefore":["case refine_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ IsCompact S","case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"content":"· exact IsClosed.isCompact (isClosed_iInter fun i => ultrafilter_isClosed_basic _)"},{"tailPos":7558,"headPos":7556,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"content":"·"},{"tailPos":7574,"headPos":7559,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : U ∈ S\nV : Ultrafilter M\nhV : V ∈ S\n⊢ U * V ∈ S"],"content":"intro U hU V hV"},{"tailPos":7597,"headPos":7583,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : U ∈ S\nV : Ultrafilter M\nhV : V ∈ S\n⊢ U * V ∈ S"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\n⊢ ∀ (i : ℕ), U * V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"Set.mem_iInter"},{"tailPos":7598,"headPos":7597,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\n⊢ ∀ (i : ℕ), U * V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\n⊢ ∀ (i : ℕ), U * V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"]"},{"tailPos":7603,"headPos":7579,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : U ∈ S\nV : Ultrafilter M\nhV : V ∈ S\n⊢ U * V ∈ S"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\n⊢ ∀ (i : ℕ), U * V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"content":"rw [Set.mem_iInter] at *"},{"tailPos":7615,"headPos":7608,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\n⊢ ∀ (i : ℕ), U * V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ U * V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}"],"content":"intro n"},{"tailPos":7641,"headPos":7624,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ U * V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ ∀ᶠ (m : M) in ↑(U * V), m ∈ FP (Stream'.drop n a)"],"content":"Set.mem_setOf_eq,"},{"tailPos":7668,"headPos":7642,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ ∀ᶠ (m : M) in ↑(U * V), m ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ ∀ᶠ (m : M) in ↑U, ∀ᶠ (m' : M) in ↑V, m * m' ∈ FP (Stream'.drop n a)"],"content":"Ultrafilter.eventually_mul"},{"tailPos":7669,"headPos":7668,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ ∀ᶠ (m : M) in ↑U, ∀ᶠ (m' : M) in ↑V, m * m' ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ ∀ᶠ (m : M) in ↑U, ∀ᶠ (m' : M) in ↑V, m * m' ∈ FP (Stream'.drop n a)"],"content":"]"},{"tailPos":7669,"headPos":7620,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ U * V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ ∀ᶠ (m : M) in ↑U, ∀ᶠ (m' : M) in ↑V, m * m' ∈ FP (Stream'.drop n a)"],"content":"rw [Set.mem_setOf_eq, Ultrafilter.eventually_mul]"},{"tailPos":7702,"headPos":7674,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ ∀ᶠ (m : M) in ↑U, ∀ᶠ (m' : M) in ↑V, m * m' ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop n a) → ∀ᶠ (m' : M) in ↑V, x * m' ∈ FP (Stream'.drop n a)"],"content":"apply Eventually.mono (hU n)"},{"tailPos":7717,"headPos":7707,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop n a) → ∀ᶠ (m' : M) in ↑V, x * m' ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\n⊢ ∀ᶠ (m' : M) in ↑V, m * m' ∈ FP (Stream'.drop n a)"],"content":"intro m hm"},{"tailPos":7754,"headPos":7722,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\n⊢ ∀ᶠ (m' : M) in ↑V, m * m' ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_4.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\nn' : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n' (Stream'.drop n a)) → m * m' ∈ FP (Stream'.drop n a)\n⊢ ∀ᶠ (m' : M) in ↑V, m * m' ∈ FP (Stream'.drop n a)"],"content":"obtain ⟨n', hn⟩ := FP.mul hm"},{"tailPos":7794,"headPos":7759,"goalsBefore":["case refine_4.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\nn' : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n' (Stream'.drop n a)) → m * m' ∈ FP (Stream'.drop n a)\n⊢ ∀ᶠ (m' : M) in ↑V, m * m' ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_4.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\nn' : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n' (Stream'.drop n a)) → m * m' ∈ FP (Stream'.drop n a)\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop (n' + n) a) → m * x ∈ FP (Stream'.drop n a)"],"content":"apply Eventually.mono (hV (n' + n))"},{"tailPos":7811,"headPos":7799,"goalsBefore":["case refine_4.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\nn' : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n' (Stream'.drop n a)) → m * m' ∈ FP (Stream'.drop n a)\n⊢ ∀ (x : M), x ∈ FP (Stream'.drop (n' + n) a) → m * x ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_4.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\nn' : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n' (Stream'.drop n a)) → m * m' ∈ FP (Stream'.drop n a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n' + n) a)\n⊢ m * m' ∈ FP (Stream'.drop n a)"],"content":"intro m' hm'"},{"tailPos":7824,"headPos":7816,"goalsBefore":["case refine_4.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\nn' : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n' (Stream'.drop n a)) → m * m' ∈ FP (Stream'.drop n a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n' + n) a)\n⊢ m * m' ∈ FP (Stream'.drop n a)"],"goalsAfter":["case refine_4.intro.a\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\nn' : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n' (Stream'.drop n a)) → m * m' ∈ FP (Stream'.drop n a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n' + n) a)\n⊢ m' ∈ FP (Stream'.drop n' (Stream'.drop n a))"],"content":"apply hn"},{"tailPos":7869,"headPos":7829,"goalsBefore":["case refine_4.intro.a\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\nU : Ultrafilter M\nhU : ∀ (i : ℕ), U ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nV : Ultrafilter M\nhV : ∀ (i : ℕ), V ∈ {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop i a)}\nn : ℕ\nm : M\nhm : m ∈ FP (Stream'.drop n a)\nn' : ℕ\nhn : ∀ (m' : M), m' ∈ FP (Stream'.drop n' (Stream'.drop n a)) → m * m' ∈ FP (Stream'.drop n a)\nm' : M\nhm' : m' ∈ FP (Stream'.drop (n' + n) a)\n⊢ m' ∈ FP (Stream'.drop n' (Stream'.drop n a))"],"goalsAfter":[],"content":"simpa only [Stream'.drop_drop] using hm'"},{"tailPos":7869,"headPos":7559,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":[],"content":"intro U hU V hV\n    rw [Set.mem_iInter] at *\n    intro n\n    rw [Set.mem_setOf_eq, Ultrafilter.eventually_mul]\n    apply Eventually.mono (hU n)\n    intro m hm\n    obtain ⟨n', hn⟩ := FP.mul hm\n    apply Eventually.mono (hV (n' + n))\n    intro m' hm'\n    apply hn\n    simpa only [Stream'.drop_drop] using hm'"},{"tailPos":7869,"headPos":7556,"goalsBefore":["case refine_4\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nS : Set (Ultrafilter M) := ⋂ (n : ℕ), {U | ∀ᶠ (m : M) in ↑U, m ∈ FP (Stream'.drop n a)}\n⊢ ∀ (x : Ultrafilter M), x ∈ S → ∀ (y : Ultrafilter M), y ∈ S → x * y ∈ S"],"goalsAfter":[],"content":"· intro U hU V hV\n    rw [Set.mem_iInter] at *\n    intro n\n    rw [Set.mem_setOf_eq, Ultrafilter.eventually_mul]\n    apply Eventually.mono (hU n)\n    intro m hm\n    obtain ⟨n', hn⟩ := FP.mul hm\n    apply Eventually.mono (hV (n' + n))\n    intro m' hm'\n    apply hn\n    simpa only [Stream'.drop_drop] using hm'"},{"tailPos":7869,"headPos":6781,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"goalsAfter":[],"content":"let S : Set (Ultrafilter M) := ⋂ n, { U | ∀ᶠ m in U, m ∈ FP (a.drop n) }\n  have h := exists_idempotent_in_compact_subsemigroup ?_ S ?_ ?_ ?_\n  · rcases h with ⟨U, hU, U_idem⟩\n    refine' ⟨U, U_idem, _⟩\n    convert Set.mem_iInter.mp hU 0\n  · exact Ultrafilter.continuous_mul_left\n  · apply IsCompact.nonempty_iInter_of_sequence_nonempty_compact_closed\n    · intro n U hU\n      apply Eventually.mono hU\n      rw [add_comm, ← Stream'.drop_drop, ← Stream'.tail_eq_drop]\n      exact FP.tail _\n    · intro n\n      exact ⟨pure _, mem_pure.mpr <| FP.head _⟩\n    · exact (ultrafilter_isClosed_basic _).isCompact\n    · intro n\n      apply ultrafilter_isClosed_basic\n  · exact IsClosed.isCompact (isClosed_iInter fun i => ultrafilter_isClosed_basic _)\n  · intro U hU V hV\n    rw [Set.mem_iInter] at *\n    intro n\n    rw [Set.mem_setOf_eq, Ultrafilter.eventually_mul]\n    apply Eventually.mono (hU n)\n    intro m hm\n    obtain ⟨n', hn⟩ := FP.mul hm\n    apply Eventually.mono (hV (n' + n))\n    intro m' hm'\n    apply hn\n    simpa only [Stream'.drop_drop] using hm'"},{"tailPos":6778,"headPos":6776,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"goalsAfter":[],"content":"by"},{"tailPos":7869,"headPos":6776,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\n⊢ ∃ U, U * U = U ∧ ∀ᶠ (m : M) in ↑U, m ∈ FP a"],"goalsAfter":[],"content":"by\n  let S : Set (Ultrafilter M) := ⋂ n, { U | ∀ᶠ m in U, m ∈ FP (a.drop n) }\n  have h := exists_idempotent_in_compact_subsemigroup ?_ S ?_ ?_ ?_\n  · rcases h with ⟨U, hU, U_idem⟩\n    refine' ⟨U, U_idem, _⟩\n    convert Set.mem_iInter.mp hU 0\n  · exact Ultrafilter.continuous_mul_left\n  · apply IsCompact.nonempty_iInter_of_sequence_nonempty_compact_closed\n    · intro n U hU\n      apply Eventually.mono hU\n      rw [add_comm, ← Stream'.drop_drop, ← Stream'.tail_eq_drop]\n      exact FP.tail _\n    · intro n\n      exact ⟨pure _, mem_pure.mpr <| FP.head _⟩\n    · exact (ultrafilter_isClosed_basic _).isCompact\n    · intro n\n      apply ultrafilter_isClosed_basic\n  · exact IsClosed.isCompact (isClosed_iInter fun i => ultrafilter_isClosed_basic _)\n  · intro U hU V hV\n    rw [Set.mem_iInter] at *\n    intro n\n    rw [Set.mem_setOf_eq, Ultrafilter.eventually_mul]\n    apply Eventually.mono (hU n)\n    intro m hm\n    obtain ⟨n', hn⟩ := FP.mul hm\n    apply Eventually.mono (hV (n' + n))\n    intro m' hm'\n    apply hn\n    simpa only [Stream'.drop_drop] using hm'"},{"tailPos":8989,"headPos":8979,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\ns : Set M\nhs : s ∈ U\n⊢ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s} ∈ ↑U"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\ns : Set M\nhs : s ∈ U * U\n⊢ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s} ∈ ↑U"],"content":"← U_idem"},{"tailPos":8990,"headPos":8989,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\ns : Set M\nhs : s ∈ U * U\n⊢ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s} ∈ ↑U"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\ns : Set M\nhs : s ∈ U * U\n⊢ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s} ∈ ↑U"],"content":"]"},{"tailPos":8996,"headPos":8974,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\ns : Set M\nhs : s ∈ U\n⊢ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s} ∈ ↑U"],"goalsAfter":[],"content":"rwa [← U_idem] at hs"},{"tailPos":8973,"headPos":8971,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\ns : Set M\nhs : s ∈ U\n⊢ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s} ∈ ↑U"],"goalsAfter":[],"content":"by"},{"tailPos":8996,"headPos":8971,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\ns : Set M\nhs : s ∈ U\n⊢ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s} ∈ ↑U"],"goalsAfter":[],"content":"by rwa [← U_idem] at hs"},{"tailPos":8997,"headPos":8799,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\n⊢ ∃ a, FP a ⊆ s₀"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\n⊢ ∃ a, FP a ⊆ s₀"],"content":"have exists_elem : ∀ {s : Set M} (_hs : s ∈ U), (s ∩ { m | ∀ᶠ m' in U, m * m' ∈ s }).Nonempty :=\n    fun {s} hs => Ultrafilter.nonempty_of_mem (inter_mem hs <| by rwa [← U_idem] at hs)"},{"tailPos":9075,"headPos":9000,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\n⊢ ∃ a, FP a ⊆ s₀"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\n⊢ ∃ a, FP a ⊆ s₀"],"content":"let elem : { s // s ∈ U } → M := fun p => (exists_elem p.property).some"},{"tailPos":9489,"headPos":9078,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\n⊢ ∃ a, FP a ⊆ s₀"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\n⊢ ∃ a, FP a ⊆ s₀"],"content":"let succ : {s // s ∈ U} → {s // s ∈ U} := fun (p : {s // s ∈ U}) =>\n        ⟨p.val ∩ {m : M | elem p * m ∈ p.val},\n         inter_mem p.property\n           (show (exists_elem p.property).some ∈ {m : M | ∀ᶠ (m' : M) in ↑U, m * m' ∈ p.val} from\n              p.val.inter_subset_right {m : M | ∀ᶠ (m' : M) in ↑U, m * m' ∈ p.val}\n                (exists_elem p.property).some_mem)⟩"},{"tailPos":9540,"headPos":9492,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\n⊢ ∃ a, FP a ⊆ s₀"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\n⊢ FP (Stream'.corec elem succ { val := s₀, property := sU }) ⊆ s₀"],"content":"use Stream'.corec elem succ (Subtype.mk s₀ sU)"},{"tailPos":9659,"headPos":9649,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\nthis : ∀ (a : Stream' M) (m : M), m ∈ FP a → ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p\n⊢ FP (Stream'.corec elem succ { val := s₀, property := sU }) ⊆ s₀"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\nthis : ∀ (a : Stream' M) (m : M), m ∈ FP a → ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p\nm : M\nhm : m ∈ FP (Stream'.corec elem succ { val := s₀, property := sU })\n⊢ m ∈ s₀"],"content":"intro m hm"},{"tailPos":9700,"headPos":9664,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\nthis : ∀ (a : Stream' M) (m : M), m ∈ FP a → ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p\nm : M\nhm : m ∈ FP (Stream'.corec elem succ { val := s₀, property := sU })\n⊢ m ∈ s₀"],"goalsAfter":[],"content":"exact this _ m hm ⟨s₀, sU⟩ rfl"},{"tailPos":9700,"headPos":9649,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\nthis : ∀ (a : Stream' M) (m : M), m ∈ FP a → ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p\n⊢ FP (Stream'.corec elem succ { val := s₀, property := sU }) ⊆ s₀"],"goalsAfter":[],"content":"intro m hm\n    exact this _ m hm ⟨s₀, sU⟩ rfl"},{"tailPos":9700,"headPos":9543,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\n⊢ FP (Stream'.corec elem succ { val := s₀, property := sU }) ⊆ s₀"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\n⊢ ∀ (a : Stream' M) (m : M), m ∈ FP a → ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p"],"content":"suffices ∀ (a : Stream' M), ∀ m ∈ FP a, ∀ p, a = Stream'.corec elem succ p → m ∈ p.val by\n    intro m hm\n    exact this _ m hm ⟨s₀, sU⟩ rfl"},{"tailPos":9716,"headPos":9703,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\n⊢ ∀ (a : Stream' M) (m : M), m ∈ FP a → ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\n⊢ ∀ (a : Stream' M) (m : M), m ∈ FP a → ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p"],"content":"clear sU s₀"},{"tailPos":9730,"headPos":9719,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\n⊢ ∀ (a : Stream' M) (m : M), m ∈ FP a → ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nh : m ∈ FP a\n⊢ ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p"],"content":"intro a m h"},{"tailPos":9770,"headPos":9733,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nh : m ∈ FP a\n⊢ ∀ (p : { s // s ∈ U }), a = Stream'.corec elem succ p → m ∈ ↑p"],"goalsAfter":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b ∈ ↑p","case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → n ∈ ↑p","case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"content":"induction' h with b b n h ih b n h ih"},{"tailPos":9775,"headPos":9773,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b ∈ ↑p","case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → n ∈ ↑p","case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"goalsAfter":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b ∈ ↑p"],"content":"·"},{"tailPos":9788,"headPos":9776,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b ∈ ↑p"],"goalsAfter":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ Stream'.head (Stream'.corec elem succ p) ∈ ↑p"],"content":"rintro p rfl"},{"tailPos":9814,"headPos":9797,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ Stream'.head (Stream'.corec elem succ p) ∈ ↑p"],"goalsAfter":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ Stream'.head (Stream'.cons (elem p) (Stream'.corec elem succ (succ p))) ∈ ↑p"],"content":"Stream'.corec_eq,"},{"tailPos":9832,"headPos":9815,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ Stream'.head (Stream'.cons (elem p) (Stream'.corec elem succ (succ p))) ∈ ↑p"],"goalsAfter":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ elem p ∈ ↑p"],"content":"Stream'.head_cons"},{"tailPos":9833,"headPos":9832,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ elem p ∈ ↑p"],"goalsAfter":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ elem p ∈ ↑p"],"content":"]"},{"tailPos":9833,"headPos":9793,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ Stream'.head (Stream'.corec elem succ p) ∈ ↑p"],"goalsAfter":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ elem p ∈ ↑p"],"content":"rw [Stream'.corec_eq, Stream'.head_cons]"},{"tailPos":9895,"headPos":9838,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\np : { s // s ∈ U }\n⊢ elem p ∈ ↑p"],"goalsAfter":[],"content":"exact Set.inter_subset_left _ _ (Set.Nonempty.some_mem _)"},{"tailPos":9895,"headPos":9776,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b ∈ ↑p"],"goalsAfter":[],"content":"rintro p rfl\n    rw [Stream'.corec_eq, Stream'.head_cons]\n    exact Set.inter_subset_left _ _ (Set.Nonempty.some_mem _)"},{"tailPos":9895,"headPos":9773,"goalsBefore":["case head\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b ∈ ↑p","case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → n ∈ ↑p","case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"goalsAfter":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → n ∈ ↑p","case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"content":"· rintro p rfl\n    rw [Stream'.corec_eq, Stream'.head_cons]\n    exact Set.inter_subset_left _ _ (Set.Nonempty.some_mem _)"},{"tailPos":9900,"headPos":9898,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → n ∈ ↑p","case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"goalsAfter":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → n ∈ ↑p"],"content":"·"},{"tailPos":9913,"headPos":9901,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → n ∈ ↑p"],"goalsAfter":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ n ∈ ↑p"],"content":"rintro p rfl"},{"tailPos":9967,"headPos":9918,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ n ∈ ↑p"],"goalsAfter":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ (succ p)"],"content":"refine' Set.inter_subset_left _ _ (ih (succ p) _)"},{"tailPos":9993,"headPos":9976,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ (succ p)"],"goalsAfter":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.cons (elem p) (Stream'.corec elem succ (succ p))) = Stream'.corec elem succ (succ p)"],"content":"Stream'.corec_eq,"},{"tailPos":10011,"headPos":9994,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.cons (elem p) (Stream'.corec elem succ (succ p))) = Stream'.corec elem succ (succ p)"],"goalsAfter":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.corec elem succ (succ p) = Stream'.corec elem succ (succ p)"],"content":"Stream'.tail_cons"},{"tailPos":10012,"headPos":10011,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.corec elem succ (succ p) = Stream'.corec elem succ (succ p)"],"goalsAfter":[],"content":"]"},{"tailPos":10012,"headPos":9972,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ (succ p)"],"goalsAfter":[],"content":"rw [Stream'.corec_eq, Stream'.tail_cons]"},{"tailPos":10012,"headPos":9901,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → n ∈ ↑p"],"goalsAfter":[],"content":"rintro p rfl\n    refine' Set.inter_subset_left _ _ (ih (succ p) _)\n    rw [Stream'.corec_eq, Stream'.tail_cons]"},{"tailPos":10012,"headPos":9898,"goalsBefore":["case tail\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → n ∈ ↑p","case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"goalsAfter":["case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"content":"· rintro p rfl\n    refine' Set.inter_subset_left _ _ (ih (succ p) _)\n    rw [Stream'.corec_eq, Stream'.tail_cons]"},{"tailPos":10017,"headPos":10015,"goalsBefore":["case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"goalsAfter":["case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"content":"·"},{"tailPos":10030,"headPos":10018,"goalsBefore":["case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"goalsAfter":["case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.head (Stream'.corec elem succ p) * n ∈ ↑p"],"content":"rintro p rfl"},{"tailPos":10086,"headPos":10035,"goalsBefore":["case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.head (Stream'.corec elem succ p) * n ∈ ↑p"],"goalsAfter":["case cons.refine_2\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\nthis : n ∈ {m | elem p * m ∈ ↑p}\n⊢ Stream'.head (Stream'.corec elem succ p) * n ∈ ↑p","case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ (succ p)"],"content":"have := Set.inter_subset_right _ _ (ih (succ p) ?_)"},{"tailPos":10093,"headPos":10091,"goalsBefore":["case cons.refine_2\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\nthis : n ∈ {m | elem p * m ∈ ↑p}\n⊢ Stream'.head (Stream'.corec elem succ p) * n ∈ ↑p","case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ (succ p)"],"goalsAfter":["case cons.refine_2\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\nthis : n ∈ {m | elem p * m ∈ ↑p}\n⊢ Stream'.head (Stream'.corec elem succ p) * n ∈ ↑p"],"content":"·"},{"tailPos":10115,"headPos":10094,"goalsBefore":["case cons.refine_2\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\nthis : n ∈ {m | elem p * m ∈ ↑p}\n⊢ Stream'.head (Stream'.corec elem succ p) * n ∈ ↑p"],"goalsAfter":[],"content":"simpa only using this"},{"tailPos":10115,"headPos":10091,"goalsBefore":["case cons.refine_2\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\nthis : n ∈ {m | elem p * m ∈ ↑p}\n⊢ Stream'.head (Stream'.corec elem succ p) * n ∈ ↑p","case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ (succ p)"],"goalsAfter":["case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ (succ p)"],"content":"· simpa only using this"},{"tailPos":10141,"headPos":10124,"goalsBefore":["case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ (succ p)"],"goalsAfter":["case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.cons (elem p) (Stream'.corec elem succ (succ p))) = Stream'.corec elem succ (succ p)"],"content":"Stream'.corec_eq,"},{"tailPos":10159,"headPos":10142,"goalsBefore":["case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.cons (elem p) (Stream'.corec elem succ (succ p))) = Stream'.corec elem succ (succ p)"],"goalsAfter":["case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.corec elem succ (succ p) = Stream'.corec elem succ (succ p)"],"content":"Stream'.tail_cons"},{"tailPos":10160,"headPos":10159,"goalsBefore":["case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.corec elem succ (succ p) = Stream'.corec elem succ (succ p)"],"goalsAfter":[],"content":"]"},{"tailPos":10160,"headPos":10120,"goalsBefore":["case cons.refine_1\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm n : M\np : { s // s ∈ U }\nh : FP (Stream'.tail (Stream'.corec elem succ p)) n\nih : ∀ (p_1 : { s // s ∈ U }), Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ p_1 → n ∈ ↑p_1\n⊢ Stream'.tail (Stream'.corec elem succ p) = Stream'.corec elem succ (succ p)"],"goalsAfter":[],"content":"rw [Stream'.corec_eq, Stream'.tail_cons]"},{"tailPos":10160,"headPos":10018,"goalsBefore":["case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"goalsAfter":[],"content":"rintro p rfl\n    have := Set.inter_subset_right _ _ (ih (succ p) ?_)\n    · simpa only using this\n    rw [Stream'.corec_eq, Stream'.tail_cons]"},{"tailPos":10160,"headPos":10015,"goalsBefore":["case cons\nM : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\nexists_elem : ∀ {s : Set M}, s ∈ U → Set.Nonempty (s ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ s})\nelem : { s // s ∈ U } → M := fun p => Set.Nonempty.some (_ : Set.Nonempty (↑p ∩ {m | ∀ᶠ (m' : M) in ↑U, m * m' ∈ ↑p}))\nsucc : { s // s ∈ U } → { s // s ∈ U } :=\n  fun p => { val := ↑p ∩ {m | elem p * m ∈ ↑p}, property := (_ : ↑p ∩ {m | elem p * m ∈ ↑p} ∈ ↑U) }\na : Stream' M\nm : M\nb : Stream' M\nn : M\nh : FP (Stream'.tail b) n\nih : ∀ (p : { s // s ∈ U }), Stream'.tail b = Stream'.corec elem succ p → n ∈ ↑p\n⊢ ∀ (p : { s // s ∈ U }), b = Stream'.corec elem succ p → Stream'.head b * n ∈ ↑p"],"goalsAfter":[],"content":"· rintro p rfl\n    have := Set.inter_subset_right _ _ (ih (succ p) ?_)\n    · simpa only using this\n    rw [Stream'.corec_eq, Stream'.tail_cons]"},{"tailPos":10160,"headPos":8799,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\n⊢ ∃ a, FP a ⊆ s₀"],"goalsAfter":[],"content":"have exists_elem : ∀ {s : Set M} (_hs : s ∈ U), (s ∩ { m | ∀ᶠ m' in U, m * m' ∈ s }).Nonempty :=\n    fun {s} hs => Ultrafilter.nonempty_of_mem (inter_mem hs <| by rwa [← U_idem] at hs)\n  let elem : { s // s ∈ U } → M := fun p => (exists_elem p.property).some\n  let succ : {s // s ∈ U} → {s // s ∈ U} := fun (p : {s // s ∈ U}) =>\n        ⟨p.val ∩ {m : M | elem p * m ∈ p.val},\n         inter_mem p.property\n           (show (exists_elem p.property).some ∈ {m : M | ∀ᶠ (m' : M) in ↑U, m * m' ∈ p.val} from\n              p.val.inter_subset_right {m : M | ∀ᶠ (m' : M) in ↑U, m * m' ∈ p.val}\n                (exists_elem p.property).some_mem)⟩\n  use Stream'.corec elem succ (Subtype.mk s₀ sU)\n  suffices ∀ (a : Stream' M), ∀ m ∈ FP a, ∀ p, a = Stream'.corec elem succ p → m ∈ p.val by\n    intro m hm\n    exact this _ m hm ⟨s₀, sU⟩ rfl\n  clear sU s₀\n  intro a m h\n  induction' h with b b n h ih b n h ih\n  · rintro p rfl\n    rw [Stream'.corec_eq, Stream'.head_cons]\n    exact Set.inter_subset_left _ _ (Set.Nonempty.some_mem _)\n  · rintro p rfl\n    refine' Set.inter_subset_left _ _ (ih (succ p) _)\n    rw [Stream'.corec_eq, Stream'.tail_cons]\n  · rintro p rfl\n    have := Set.inter_subset_right _ _ (ih (succ p) ?_)\n    · simpa only using this\n    rw [Stream'.corec_eq, Stream'.tail_cons]"},{"tailPos":8330,"headPos":8328,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\n⊢ ∃ a, FP a ⊆ s₀"],"goalsAfter":[],"content":"by"},{"tailPos":10160,"headPos":8328,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\nU : Ultrafilter M\nU_idem : U * U = U\ns₀ : Set M\nsU : s₀ ∈ U\n⊢ ∃ a, FP a ⊆ s₀"],"goalsAfter":[],"content":"by\n  /- Informally: given a `U`-large set `s₀`, the set `s₀ ∩ { m | ∀ᶠ m' in U, m * m' ∈ s₀ }` is also\n  `U`-large (since `U` is idempotent). Thus in particular there is an `a₀` in this intersection. Now\n  let `s₁` be the intersection `s₀ ∩ { m | a₀ * m ∈ s₀ }`. By choice of `a₀`, this is again\n  `U`-large, so we can repeat the argument starting from `s₁`, obtaining `a₁`, `s₂`, etc.\n  This gives the desired infinite sequence. -/\n  have exists_elem : ∀ {s : Set M} (_hs : s ∈ U), (s ∩ { m | ∀ᶠ m' in U, m * m' ∈ s }).Nonempty :=\n    fun {s} hs => Ultrafilter.nonempty_of_mem (inter_mem hs <| by rwa [← U_idem] at hs)\n  let elem : { s // s ∈ U } → M := fun p => (exists_elem p.property).some\n  let succ : {s // s ∈ U} → {s // s ∈ U} := fun (p : {s // s ∈ U}) =>\n        ⟨p.val ∩ {m : M | elem p * m ∈ p.val},\n         inter_mem p.property\n           (show (exists_elem p.property).some ∈ {m : M | ∀ᶠ (m' : M) in ↑U, m * m' ∈ p.val} from\n              p.val.inter_subset_right {m : M | ∀ᶠ (m' : M) in ↑U, m * m' ∈ p.val}\n                (exists_elem p.property).some_mem)⟩\n  use Stream'.corec elem succ (Subtype.mk s₀ sU)\n  suffices ∀ (a : Stream' M), ∀ m ∈ FP a, ∀ p, a = Stream'.corec elem succ p → m ∈ p.val by\n    intro m hm\n    exact this _ m hm ⟨s₀, sU⟩ rfl\n  clear sU s₀\n  intro a m h\n  induction' h with b b n h ih b n h ih\n  · rintro p rfl\n    rw [Stream'.corec_eq, Stream'.head_cons]\n    exact Set.inter_subset_left _ _ (Set.Nonempty.some_mem _)\n  · rintro p rfl\n    refine' Set.inter_subset_left _ _ (ih (succ p) _)\n    rw [Stream'.corec_eq, Stream'.tail_cons]\n  · rintro p rfl\n    have := Set.inter_subset_right _ _ (ih (succ p) ?_)\n    · simpa only using this\n    rw [Stream'.corec_eq, Stream'.tail_cons]"},{"tailPos":12399,"headPos":12377,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\n⊢ FP (Stream'.drop n a) ⊆ FP a"],"goalsAfter":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\n⊢ FP (Stream'.drop Nat.zero a) ⊆ FP a","case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop (Nat.succ n) a) ⊆ FP a"],"content":"induction' n with n ih"},{"tailPos":12404,"headPos":12402,"goalsBefore":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\n⊢ FP (Stream'.drop Nat.zero a) ⊆ FP a","case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop (Nat.succ n) a) ⊆ FP a"],"goalsAfter":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\n⊢ FP (Stream'.drop Nat.zero a) ⊆ FP a"],"content":"·"},{"tailPos":12408,"headPos":12405,"goalsBefore":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\n⊢ FP (Stream'.drop Nat.zero a) ⊆ FP a"],"goalsAfter":[],"content":"rfl"},{"tailPos":12408,"headPos":12402,"goalsBefore":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\n⊢ FP (Stream'.drop Nat.zero a) ⊆ FP a","case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop (Nat.succ n) a) ⊆ FP a"],"goalsAfter":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop (Nat.succ n) a) ⊆ FP a"],"content":"· rfl"},{"tailPos":12435,"headPos":12415,"goalsBefore":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop (Nat.succ n) a) ⊆ FP a"],"goalsAfter":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop (1 + n) a) ⊆ FP a"],"content":"Nat.succ_eq_one_add,"},{"tailPos":12457,"headPos":12436,"goalsBefore":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop (1 + n) a) ⊆ FP a"],"goalsAfter":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop 1 (Stream'.drop n a)) ⊆ FP a"],"content":"← Stream'.drop_drop"},{"tailPos":12458,"headPos":12457,"goalsBefore":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop 1 (Stream'.drop n a)) ⊆ FP a"],"goalsAfter":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop 1 (Stream'.drop n a)) ⊆ FP a"],"content":"]"},{"tailPos":12458,"headPos":12411,"goalsBefore":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop (Nat.succ n) a) ⊆ FP a"],"goalsAfter":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop 1 (Stream'.drop n a)) ⊆ FP a"],"content":"rw [Nat.succ_eq_one_add, ← Stream'.drop_drop]"},{"tailPos":12494,"headPos":12461,"goalsBefore":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\nih : FP (Stream'.drop n a) ⊆ FP a\n⊢ FP (Stream'.drop 1 (Stream'.drop n a)) ⊆ FP a"],"goalsAfter":[],"content":"exact _root_.trans (FP.tail _) ih"},{"tailPos":12494,"headPos":12377,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\n⊢ FP (Stream'.drop n a) ⊆ FP a"],"goalsAfter":[],"content":"induction' n with n ih\n  · rfl\n  rw [Nat.succ_eq_one_add, ← Stream'.drop_drop]\n  exact _root_.trans (FP.tail _) ih"},{"tailPos":12374,"headPos":12372,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\n⊢ FP (Stream'.drop n a) ⊆ FP a"],"goalsAfter":[],"content":"by"},{"tailPos":12494,"headPos":12372,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\nn : ℕ\n⊢ FP (Stream'.drop n a) ⊆ FP a"],"goalsAfter":[],"content":"by\n  induction' n with n ih\n  · rfl\n  rw [Nat.succ_eq_one_add, ← Stream'.drop_drop]\n  exact _root_.trans (FP.tail _) ih"},{"tailPos":12846,"headPos":12809,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni : ℕ\n⊢ Stream'.nth a i ∈ FP a"],"goalsAfter":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na✝ a : Stream' M\n⊢ Stream'.nth a Nat.zero ∈ FP a","case succ\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ Stream'.nth a (Nat.succ i) ∈ FP a"],"content":"induction' i with i ih generalizing a"},{"tailPos":12851,"headPos":12849,"goalsBefore":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na✝ a : Stream' M\n⊢ Stream'.nth a Nat.zero ∈ FP a","case succ\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ Stream'.nth a (Nat.succ i) ∈ FP a"],"goalsAfter":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na✝ a : Stream' M\n⊢ Stream'.nth a Nat.zero ∈ FP a"],"content":"·"},{"tailPos":12865,"headPos":12852,"goalsBefore":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na✝ a : Stream' M\n⊢ Stream'.nth a Nat.zero ∈ FP a"],"goalsAfter":[],"content":"apply FP.head"},{"tailPos":12865,"headPos":12849,"goalsBefore":["case zero\nM : Type u_1\ninst✝ : Semigroup M\na✝ a : Stream' M\n⊢ Stream'.nth a Nat.zero ∈ FP a","case succ\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ Stream'.nth a (Nat.succ i) ∈ FP a"],"goalsAfter":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ Stream'.nth a (Nat.succ i) ∈ FP a"],"content":"· apply FP.head"},{"tailPos":12870,"headPos":12868,"goalsBefore":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ Stream'.nth a (Nat.succ i) ∈ FP a"],"goalsAfter":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ Stream'.nth a (Nat.succ i) ∈ FP a"],"content":"·"},{"tailPos":12884,"headPos":12871,"goalsBefore":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ Stream'.nth a (Nat.succ i) ∈ FP a"],"goalsAfter":["case succ.h\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ FP (Stream'.tail a) (Stream'.nth a (Nat.succ i))"],"content":"apply FP.tail"},{"tailPos":12897,"headPos":12889,"goalsBefore":["case succ.h\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ FP (Stream'.tail a) (Stream'.nth a (Nat.succ i))"],"goalsAfter":[],"content":"apply ih"},{"tailPos":12897,"headPos":12871,"goalsBefore":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ Stream'.nth a (Nat.succ i) ∈ FP a"],"goalsAfter":[],"content":"apply FP.tail\n    apply ih"},{"tailPos":12897,"headPos":12868,"goalsBefore":["case succ\nM : Type u_1\ninst✝ : Semigroup M\na✝ : Stream' M\ni : ℕ\nih : ∀ (a : Stream' M), Stream'.nth a i ∈ FP a\na : Stream' M\n⊢ Stream'.nth a (Nat.succ i) ∈ FP a"],"goalsAfter":[],"content":"· apply FP.tail\n    apply ih"},{"tailPos":12897,"headPos":12809,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni : ℕ\n⊢ Stream'.nth a i ∈ FP a"],"goalsAfter":[],"content":"induction' i with i ih generalizing a\n  · apply FP.head\n  · apply FP.tail\n    apply ih"},{"tailPos":12806,"headPos":12804,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni : ℕ\n⊢ Stream'.nth a i ∈ FP a"],"goalsAfter":[],"content":"by"},{"tailPos":12897,"headPos":12804,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni : ℕ\n⊢ Stream'.nth a i ∈ FP a"],"goalsAfter":[],"content":"by\n  induction' i with i ih generalizing a\n  · apply FP.head\n  · apply FP.tail\n    apply ih"},{"tailPos":13246,"headPos":13215,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.nth a i * Stream'.nth a j ∈ FP a"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.nth a i * Stream'.nth a j ∈ FP (Stream'.drop i a)"],"content":"refine' FP_drop_subset_FP _ i _"},{"tailPos":13274,"headPos":13253,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.nth a i * Stream'.nth a j ∈ FP (Stream'.drop i a)"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.head (Stream'.drop i a) * Stream'.nth a j ∈ FP (Stream'.drop i a)"],"content":"← Stream'.head_drop"},{"tailPos":13275,"headPos":13274,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.head (Stream'.drop i a) * Stream'.nth a j ∈ FP (Stream'.drop i a)"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.head (Stream'.drop i a) * Stream'.nth a j ∈ FP (Stream'.drop i a)"],"content":"]"},{"tailPos":13275,"headPos":13249,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.nth a i * Stream'.nth a j ∈ FP (Stream'.drop i a)"],"goalsAfter":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.head (Stream'.drop i a) * Stream'.nth a j ∈ FP (Stream'.drop i a)"],"content":"rw [← Stream'.head_drop]"},{"tailPos":13291,"headPos":13278,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.head (Stream'.drop i a) * Stream'.nth a j ∈ FP (Stream'.drop i a)"],"goalsAfter":["case h\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ FP (Stream'.tail (Stream'.drop i a)) (Stream'.nth a j)"],"content":"apply FP.cons"},{"tailPos":13361,"headPos":13294,"goalsBefore":["case h\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ FP (Stream'.tail (Stream'.drop i a)) (Stream'.nth a j)"],"goalsAfter":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\n⊢ FP (Stream'.tail (Stream'.drop i a)) (Stream'.nth a j)"],"content":"rcases le_iff_exists_add.mp (Nat.succ_le_of_lt ij) with ⟨d, hd⟩"},{"tailPos":13437,"headPos":13420,"goalsBefore":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\n⊢ FP (Stream'.tail (Stream'.drop i a)) (Stream'.nth a j)"],"goalsAfter":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"content":"change _ ∈ FP _"},{"tailPos":13478,"headPos":13440,"goalsBefore":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"goalsAfter":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth (Stream'.tail (Stream'.drop i a)) d ∈ FP (Stream'.tail (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"content":"have := FP.singleton (a.drop i).tail d"},{"tailPos":13506,"headPos":13485,"goalsBefore":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth (Stream'.tail (Stream'.drop i a)) d ∈ FP (Stream'.tail (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"goalsAfter":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth (Stream'.drop 1 (Stream'.drop i a)) d ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"content":"Stream'.tail_eq_drop,"},{"tailPos":13524,"headPos":13507,"goalsBefore":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth (Stream'.drop 1 (Stream'.drop i a)) d ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"goalsAfter":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth (Stream'.drop i a) (d + 1) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"content":"Stream'.nth_drop,"},{"tailPos":13541,"headPos":13525,"goalsBefore":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth (Stream'.drop i a) (d + 1) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"goalsAfter":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"content":"Stream'.nth_drop"},{"tailPos":13542,"headPos":13541,"goalsBefore":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"goalsAfter":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"content":"]"},{"tailPos":13550,"headPos":13481,"goalsBefore":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth (Stream'.tail (Stream'.drop i a)) d ∈ FP (Stream'.tail (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"goalsAfter":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"content":"rw [Stream'.tail_eq_drop, Stream'.nth_drop, Stream'.nth_drop] at this"},{"tailPos":13565,"headPos":13553,"goalsBefore":["case h.intro\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Stream'.nth a j ∈ FP (Stream'.tail (Stream'.drop i a))"],"goalsAfter":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ j = d + 1 + i"],"content":"convert this"},{"tailPos":13575,"headPos":13572,"goalsBefore":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ j = d + 1 + i"],"goalsAfter":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Nat.succ i + d = d + 1 + i"],"content":"hd,"},{"tailPos":13585,"headPos":13576,"goalsBefore":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Nat.succ i + d = d + 1 + i"],"goalsAfter":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ d + Nat.succ i = d + 1 + i"],"content":"add_comm,"},{"tailPos":13599,"headPos":13586,"goalsBefore":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ d + Nat.succ i = d + 1 + i"],"goalsAfter":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ d + Nat.succ i = Nat.succ (d + i)"],"content":"Nat.succ_add,"},{"tailPos":13612,"headPos":13600,"goalsBefore":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ d + Nat.succ i = Nat.succ (d + i)"],"goalsAfter":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Nat.succ (d + i) = Nat.succ (d + i)"],"content":"Nat.add_succ"},{"tailPos":13613,"headPos":13612,"goalsBefore":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ Nat.succ (d + i) = Nat.succ (d + i)"],"goalsAfter":[],"content":"]"},{"tailPos":13613,"headPos":13568,"goalsBefore":["case h.e'_4.h.e'_3\nM : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\nd : ℕ\nhd : j = Nat.succ i + d\nthis : Stream'.nth a (d + 1 + i) ∈ FP (Stream'.drop 1 (Stream'.drop i a))\n⊢ j = d + 1 + i"],"goalsAfter":[],"content":"rw [hd, add_comm, Nat.succ_add, Nat.add_succ]"},{"tailPos":13613,"headPos":13215,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.nth a i * Stream'.nth a j ∈ FP a"],"goalsAfter":[],"content":"refine' FP_drop_subset_FP _ i _\n  rw [← Stream'.head_drop]\n  apply FP.cons\n  rcases le_iff_exists_add.mp (Nat.succ_le_of_lt ij) with ⟨d, hd⟩\n  -- Porting note: need to fix breakage of Set notation\n  change _ ∈ FP _\n  have := FP.singleton (a.drop i).tail d\n  rw [Stream'.tail_eq_drop, Stream'.nth_drop, Stream'.nth_drop] at this\n  convert this\n  rw [hd, add_comm, Nat.succ_add, Nat.add_succ]"},{"tailPos":13212,"headPos":13210,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.nth a i * Stream'.nth a j ∈ FP a"],"goalsAfter":[],"content":"by"},{"tailPos":13613,"headPos":13210,"goalsBefore":["M : Type u_1\ninst✝ : Semigroup M\na : Stream' M\ni j : ℕ\nij : i < j\n⊢ Stream'.nth a i * Stream'.nth a j ∈ FP a"],"goalsAfter":[],"content":"by\n  refine' FP_drop_subset_FP _ i _\n  rw [← Stream'.head_drop]\n  apply FP.cons\n  rcases le_iff_exists_add.mp (Nat.succ_le_of_lt ij) with ⟨d, hd⟩\n  -- Porting note: need to fix breakage of Set notation\n  change _ ∈ FP _\n  have := FP.singleton (a.drop i).tail d\n  rw [Stream'.tail_eq_drop, Stream'.nth_drop, Stream'.nth_drop] at this\n  convert this\n  rw [hd, add_comm, Nat.succ_add, Nat.add_succ]"},{"tailPos":13987,"headPos":13946,"goalsBefore":["M : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns : Finset ℕ\nhs : Finset.Nonempty s\n⊢ (Finset.prod s fun i => Stream'.nth a i) ∈ FP a"],"goalsAfter":["M : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns : Finset ℕ\nhs : Finset.Nonempty s\n⊢ (Finset.prod s fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"content":"refine' FP_drop_subset_FP _ (s.min' hs) _"},{"tailPos":14041,"headPos":13990,"goalsBefore":["M : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns : Finset ℕ\nhs : Finset.Nonempty s\n⊢ (Finset.prod s fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Finset.prod s fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"content":"induction' s using Finset.strongInduction with s ih"},{"tailPos":14094,"headPos":14048,"goalsBefore":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Finset.prod s fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Stream'.nth a (Finset.min' s hs) * Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"content":"← Finset.mul_prod_erase _ _ (s.min'_mem hs),"},{"tailPos":14116,"headPos":14095,"goalsBefore":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Stream'.nth a (Finset.min' s hs) * Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"content":"← Stream'.head_drop"},{"tailPos":14117,"headPos":14116,"goalsBefore":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"content":"]"},{"tailPos":14117,"headPos":14044,"goalsBefore":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Finset.prod s fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"content":"rw [← Finset.mul_prod_erase _ _ (s.min'_mem hs), ← Stream'.head_drop]"},{"tailPos":14178,"headPos":14120,"goalsBefore":["case H\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)","case H.inr\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"content":"cases' (s.erase (s.min' hs)).eq_empty_or_nonempty with h h"},{"tailPos":14183,"headPos":14181,"goalsBefore":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)","case H.inr\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"content":"·"},{"tailPos":14190,"headPos":14188,"goalsBefore":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) * Finset.prod ∅ fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"content":"h,"},{"tailPos":14209,"headPos":14191,"goalsBefore":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) * Finset.prod ∅ fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ Stream'.head (Stream'.drop (Finset.min' s hs) a) * 1 ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"content":"Finset.prod_empty,"},{"tailPos":14217,"headPos":14210,"goalsBefore":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ Stream'.head (Stream'.drop (Finset.min' s hs) a) * 1 ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ Stream'.head (Stream'.drop (Finset.min' s hs) a) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"content":"mul_one"},{"tailPos":14218,"headPos":14217,"goalsBefore":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ Stream'.head (Stream'.drop (Finset.min' s hs) a) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ Stream'.head (Stream'.drop (Finset.min' s hs) a) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"content":"]"},{"tailPos":14218,"headPos":14184,"goalsBefore":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ Stream'.head (Stream'.drop (Finset.min' s hs) a) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"content":"rw [h, Finset.prod_empty, mul_one]"},{"tailPos":14238,"headPos":14223,"goalsBefore":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ Stream'.head (Stream'.drop (Finset.min' s hs) a) ∈ FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":[],"content":"exact FP.head _"},{"tailPos":14238,"headPos":14184,"goalsBefore":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":[],"content":"rw [h, Finset.prod_empty, mul_one]\n    exact FP.head _"},{"tailPos":14238,"headPos":14181,"goalsBefore":["case H.inl\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.erase s (Finset.min' s hs) = ∅\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)","case H.inr\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inr\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"content":"· rw [h, Finset.prod_empty, mul_one]\n    exact FP.head _"},{"tailPos":14243,"headPos":14241,"goalsBefore":["case H.inr\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inr\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"content":"·"},{"tailPos":14257,"headPos":14244,"goalsBefore":["case H.inr\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.tail (Stream'.drop (Finset.min' s hs) a))\n    (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"content":"apply FP.cons"},{"tailPos":14287,"headPos":14266,"goalsBefore":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.tail (Stream'.drop (Finset.min' s hs) a))\n    (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"goalsAfter":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop 1 (Stream'.drop (Finset.min' s hs) a))\n    (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"content":"Stream'.tail_eq_drop,"},{"tailPos":14306,"headPos":14288,"goalsBefore":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop 1 (Stream'.drop (Finset.min' s hs) a))\n    (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"goalsAfter":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop (1 + Finset.min' s hs) a) (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"content":"Stream'.drop_drop,"},{"tailPos":14315,"headPos":14307,"goalsBefore":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop (1 + Finset.min' s hs) a) (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"goalsAfter":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop (Finset.min' s hs + 1) a) (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"content":"add_comm"},{"tailPos":14316,"headPos":14315,"goalsBefore":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop (Finset.min' s hs + 1) a) (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"goalsAfter":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop (Finset.min' s hs + 1) a) (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"content":"]"},{"tailPos":14316,"headPos":14262,"goalsBefore":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.tail (Stream'.drop (Finset.min' s hs) a))\n    (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"goalsAfter":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop (Finset.min' s hs + 1) a) (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"content":"rw [Stream'.tail_eq_drop, Stream'.drop_drop, add_comm]"},{"tailPos":14404,"headPos":14321,"goalsBefore":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop (Finset.min' s hs + 1) a) (Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x)"],"goalsAfter":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop (Finset.min' (Finset.erase s (Finset.min' s hs)) h) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"content":"refine' Set.mem_of_subset_of_mem _ (ih _ (Finset.erase_ssubset <| s.min'_mem hs) h)"},{"tailPos":14551,"headPos":14409,"goalsBefore":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ FP (Stream'.drop (Finset.min' (Finset.erase s (Finset.min' s hs)) h) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"goalsAfter":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\n⊢ FP (Stream'.drop (Finset.min' (Finset.erase s (Finset.min' s hs)) h) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"content":"have : s.min' hs + 1 ≤ (s.erase (s.min' hs)).min' h :=\n      Nat.succ_le_of_lt (Finset.min'_lt_of_mem_erase_min' _ _ <| Finset.min'_mem _ _)"},{"tailPos":14598,"headPos":14556,"goalsBefore":["case H.inr.h\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\n⊢ FP (Stream'.drop (Finset.min' (Finset.erase s (Finset.min' s hs)) h) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"goalsAfter":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop (Finset.min' (Finset.erase s (Finset.min' s hs)) h) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"content":"cases' le_iff_exists_add.mp this with d hd"},{"tailPos":14610,"headPos":14607,"goalsBefore":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop (Finset.min' (Finset.erase s (Finset.min' s hs)) h) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"goalsAfter":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop (Finset.min' s hs + 1 + d) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"content":"hd,"},{"tailPos":14620,"headPos":14611,"goalsBefore":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop (Finset.min' s hs + 1 + d) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"goalsAfter":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop (d + (Finset.min' s hs + 1)) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"content":"add_comm,"},{"tailPos":14642,"headPos":14621,"goalsBefore":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop (d + (Finset.min' s hs + 1)) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"goalsAfter":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop d (Stream'.drop (Finset.min' s hs + 1) a)) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"content":"← Stream'.drop_drop"},{"tailPos":14643,"headPos":14642,"goalsBefore":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop d (Stream'.drop (Finset.min' s hs + 1) a)) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"goalsAfter":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop d (Stream'.drop (Finset.min' s hs + 1) a)) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"content":"]"},{"tailPos":14643,"headPos":14603,"goalsBefore":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop (Finset.min' (Finset.erase s (Finset.min' s hs)) h) a) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"goalsAfter":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop d (Stream'.drop (Finset.min' s hs + 1) a)) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"content":"rw [hd, add_comm, ← Stream'.drop_drop]"},{"tailPos":14671,"headPos":14648,"goalsBefore":["case H.inr.h.intro\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\nthis : Finset.min' s hs + 1 ≤ Finset.min' (Finset.erase s (Finset.min' s hs)) h\nd : ℕ\nhd : Finset.min' (Finset.erase s (Finset.min' s hs)) h = Finset.min' s hs + 1 + d\n⊢ FP (Stream'.drop d (Stream'.drop (Finset.min' s hs + 1) a)) ⊆ FP (Stream'.drop (Finset.min' s hs + 1) a)"],"goalsAfter":[],"content":"apply FP_drop_subset_FP"},{"tailPos":14671,"headPos":14244,"goalsBefore":["case H.inr\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":[],"content":"apply FP.cons\n    rw [Stream'.tail_eq_drop, Stream'.drop_drop, add_comm]\n    refine' Set.mem_of_subset_of_mem _ (ih _ (Finset.erase_ssubset <| s.min'_mem hs) h)\n    have : s.min' hs + 1 ≤ (s.erase (s.min' hs)).min' h :=\n      Nat.succ_le_of_lt (Finset.min'_lt_of_mem_erase_min' _ _ <| Finset.min'_mem _ _)\n    cases' le_iff_exists_add.mp this with d hd\n    rw [hd, add_comm, ← Stream'.drop_drop]\n    apply FP_drop_subset_FP"},{"tailPos":14671,"headPos":14241,"goalsBefore":["case H.inr\nM : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns✝ : Finset ℕ\nhs✝ : Finset.Nonempty s✝\ns : Finset ℕ\nih :\n  ∀ (t : Finset ℕ),\n    t ⊂ s →\n      ∀ (hs : Finset.Nonempty t), (Finset.prod t fun i => Stream'.nth a i) ∈ FP (Stream'.drop (Finset.min' t hs) a)\nhs : Finset.Nonempty s\nh : Finset.Nonempty (Finset.erase s (Finset.min' s hs))\n⊢ (Stream'.head (Stream'.drop (Finset.min' s hs) a) *\n      Finset.prod (Finset.erase s (Finset.min' s hs)) fun x => Stream'.nth a x) ∈\n    FP (Stream'.drop (Finset.min' s hs) a)"],"goalsAfter":[],"content":"· apply FP.cons\n    rw [Stream'.tail_eq_drop, Stream'.drop_drop, add_comm]\n    refine' Set.mem_of_subset_of_mem _ (ih _ (Finset.erase_ssubset <| s.min'_mem hs) h)\n    have : s.min' hs + 1 ≤ (s.erase (s.min' hs)).min' h :=\n      Nat.succ_le_of_lt (Finset.min'_lt_of_mem_erase_min' _ _ <| Finset.min'_mem _ _)\n    cases' le_iff_exists_add.mp this with d hd\n    rw [hd, add_comm, ← Stream'.drop_drop]\n    apply FP_drop_subset_FP"},{"tailPos":14671,"headPos":13946,"goalsBefore":["M : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns : Finset ℕ\nhs : Finset.Nonempty s\n⊢ (Finset.prod s fun i => Stream'.nth a i) ∈ FP a"],"goalsAfter":[],"content":"refine' FP_drop_subset_FP _ (s.min' hs) _\n  induction' s using Finset.strongInduction with s ih\n  rw [← Finset.mul_prod_erase _ _ (s.min'_mem hs), ← Stream'.head_drop]\n  cases' (s.erase (s.min' hs)).eq_empty_or_nonempty with h h\n  · rw [h, Finset.prod_empty, mul_one]\n    exact FP.head _\n  · apply FP.cons\n    rw [Stream'.tail_eq_drop, Stream'.drop_drop, add_comm]\n    refine' Set.mem_of_subset_of_mem _ (ih _ (Finset.erase_ssubset <| s.min'_mem hs) h)\n    have : s.min' hs + 1 ≤ (s.erase (s.min' hs)).min' h :=\n      Nat.succ_le_of_lt (Finset.min'_lt_of_mem_erase_min' _ _ <| Finset.min'_mem _ _)\n    cases' le_iff_exists_add.mp this with d hd\n    rw [hd, add_comm, ← Stream'.drop_drop]\n    apply FP_drop_subset_FP"},{"tailPos":13943,"headPos":13941,"goalsBefore":["M : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns : Finset ℕ\nhs : Finset.Nonempty s\n⊢ (Finset.prod s fun i => Stream'.nth a i) ∈ FP a"],"goalsAfter":[],"content":"by"},{"tailPos":14671,"headPos":13941,"goalsBefore":["M : Type u_1\ninst✝ : CommMonoid M\na : Stream' M\ns : Finset ℕ\nhs : Finset.Nonempty s\n⊢ (Finset.prod s fun i => Stream'.nth a i) ∈ FP a"],"goalsAfter":[],"content":"by\n  refine' FP_drop_subset_FP _ (s.min' hs) _\n  induction' s using Finset.strongInduction with s ih\n  rw [← Finset.mul_prod_erase _ _ (s.min'_mem hs), ← Stream'.head_drop]\n  cases' (s.erase (s.min' hs)).eq_empty_or_nonempty with h h\n  · rw [h, Finset.prod_empty, mul_one]\n    exact FP.head _\n  · apply FP.cons\n    rw [Stream'.tail_eq_drop, Stream'.drop_drop, add_comm]\n    refine' Set.mem_of_subset_of_mem _ (ih _ (Finset.erase_ssubset <| s.min'_mem hs) h)\n    have : s.min' hs + 1 ≤ (s.erase (s.min' hs)).min' h :=\n      Nat.succ_le_of_lt (Finset.min'_lt_of_mem_erase_min' _ _ <| Finset.min'_mem _ _)\n    cases' le_iff_exists_add.mp this with d hd\n    rw [hd, add_comm, ← Stream'.drop_drop]\n    apply FP_drop_subset_FP"}]