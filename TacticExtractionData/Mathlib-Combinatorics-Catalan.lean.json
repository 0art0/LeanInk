[{"tailPos":2153,"headPos":2146,"goalsBefore":["⊢ catalan 0 = 1"],"goalsAfter":["⊢ 1 = 1"],"content":"catalan"},{"tailPos":2154,"headPos":2153,"goalsBefore":["⊢ 1 = 1"],"goalsAfter":[],"content":"]"},{"tailPos":2154,"headPos":2142,"goalsBefore":["⊢ catalan 0 = 1"],"goalsAfter":[],"content":"rw [catalan]"},{"tailPos":2141,"headPos":2139,"goalsBefore":["⊢ catalan 0 = 1"],"goalsAfter":[],"content":"by"},{"tailPos":2154,"headPos":2139,"goalsBefore":["⊢ catalan 0 = 1"],"goalsAfter":[],"content":"by rw [catalan]"},{"tailPos":2307,"headPos":2300,"goalsBefore":["n : ℕ\n⊢ catalan (n + 1) = ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i)"],"goalsAfter":["n : ℕ\n⊢ ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i) = ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i)"],"content":"catalan"},{"tailPos":2308,"headPos":2307,"goalsBefore":["n : ℕ\n⊢ ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i) = ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i)"],"goalsAfter":[],"content":"]"},{"tailPos":2308,"headPos":2296,"goalsBefore":["n : ℕ\n⊢ catalan (n + 1) = ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i)"],"goalsAfter":[],"content":"rw [catalan]"},{"tailPos":2293,"headPos":2291,"goalsBefore":["n : ℕ\n⊢ catalan (n + 1) = ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i)"],"goalsAfter":[],"content":"by"},{"tailPos":2308,"headPos":2291,"goalsBefore":["n : ℕ\n⊢ catalan (n + 1) = ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i)"],"goalsAfter":[],"content":"by\n  rw [catalan]"},{"tailPos":2482,"headPos":2469,"goalsBefore":["n : ℕ\n⊢ catalan (n + 1) = ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd"],"goalsAfter":["n : ℕ\n⊢ ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i) = ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd"],"content":"catalan_succ,"},{"tailPos":2559,"headPos":2483,"goalsBefore":["n : ℕ\n⊢ ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i) = ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd"],"goalsAfter":["n : ℕ\n⊢ ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i) = ∑ k in range (Nat.succ n), catalan k * catalan (n - k)"],"content":"Nat.sum_antidiagonal_eq_sum_range_succ (fun x y => catalan x * catalan y) n,"},{"tailPos":2573,"headPos":2564,"goalsBefore":["n : ℕ\n⊢ ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i) = ∑ k in range (Nat.succ n), catalan k * catalan (n - k)"],"goalsAfter":["n : ℕ\n⊢ ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i) = ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i)"],"content":"sum_range"},{"tailPos":2574,"headPos":2573,"goalsBefore":["n : ℕ\n⊢ ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i) = ∑ i : Fin (Nat.succ n), catalan ↑i * catalan (n - ↑i)"],"goalsAfter":[],"content":"]"},{"tailPos":2574,"headPos":2465,"goalsBefore":["n : ℕ\n⊢ catalan (n + 1) = ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd"],"goalsAfter":[],"content":"rw [catalan_succ, Nat.sum_antidiagonal_eq_sum_range_succ (fun x y => catalan x * catalan y) n,\n    sum_range]"},{"tailPos":2462,"headPos":2460,"goalsBefore":["n : ℕ\n⊢ catalan (n + 1) = ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd"],"goalsAfter":[],"content":"by"},{"tailPos":2574,"headPos":2460,"goalsBefore":["n : ℕ\n⊢ catalan (n + 1) = ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd"],"goalsAfter":[],"content":"by\n  rw [catalan_succ, Nat.sum_antidiagonal_eq_sum_range_succ (fun x y => catalan x * catalan y) n,\n    sum_range]"},{"tailPos":2680,"headPos":2661,"goalsBefore":["⊢ catalan 1 = 1"],"goalsAfter":[],"content":"simp [catalan_succ]"},{"tailPos":2660,"headPos":2658,"goalsBefore":["⊢ catalan 1 = 1"],"goalsAfter":[],"content":"by"},{"tailPos":2680,"headPos":2658,"goalsBefore":["⊢ catalan 1 = 1"],"goalsAfter":[],"content":"by simp [catalan_succ]"},{"tailPos":3236,"headPos":3227,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ ↑n + 1 ≠ 0"],"goalsAfter":["n i : ℕ\nh : i ≤ n\n⊢ ¬n + 1 = 0"],"content":"norm_cast"},{"tailPos":3237,"headPos":3236,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ ¬n + 1 = 0"],"goalsAfter":["n i : ℕ\nh : i ≤ n\n⊢ ¬n + 1 = 0"],"content":";"},{"tailPos":3258,"headPos":3238,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ ¬n + 1 = 0"],"goalsAfter":[],"content":"exact n.succ_ne_zero"},{"tailPos":3258,"headPos":3227,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ ↑n + 1 ≠ 0"],"goalsAfter":[],"content":"norm_cast; exact n.succ_ne_zero"},{"tailPos":3226,"headPos":3224,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ ↑n + 1 ≠ 0"],"goalsAfter":[],"content":"by"},{"tailPos":3258,"headPos":3224,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ ↑n + 1 ≠ 0"],"goalsAfter":[],"content":"by norm_cast; exact n.succ_ne_zero"},{"tailPos":3258,"headPos":3189,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"have l₁ : (n : ℚ) + 1 ≠ 0 := by norm_cast; exact n.succ_ne_zero"},{"tailPos":3312,"headPos":3303,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ ↑n + 1 + 1 ≠ 0"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ ¬n + 1 + 1 = 0"],"content":"norm_cast"},{"tailPos":3313,"headPos":3312,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ ¬n + 1 + 1 = 0"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ ¬n + 1 + 1 = 0"],"content":";"},{"tailPos":3340,"headPos":3314,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ ¬n + 1 + 1 = 0"],"goalsAfter":[],"content":"exact (n + 1).succ_ne_zero"},{"tailPos":3340,"headPos":3303,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ ↑n + 1 + 1 ≠ 0"],"goalsAfter":[],"content":"norm_cast; exact (n + 1).succ_ne_zero"},{"tailPos":3302,"headPos":3300,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ ↑n + 1 + 1 ≠ 0"],"goalsAfter":[],"content":"by"},{"tailPos":3340,"headPos":3300,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ ↑n + 1 + 1 ≠ 0"],"goalsAfter":[],"content":"by norm_cast; exact (n + 1).succ_ne_zero"},{"tailPos":3340,"headPos":3261,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"have l₂ : (n : ℚ) + 1 + 1 ≠ 0 := by norm_cast; exact (n + 1).succ_ne_zero"},{"tailPos":3390,"headPos":3381,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ ↑i + 1 ≠ 0"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ ¬i + 1 = 0"],"content":"norm_cast"},{"tailPos":3391,"headPos":3390,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ ¬i + 1 = 0"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ ¬i + 1 = 0"],"content":";"},{"tailPos":3412,"headPos":3392,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ ¬i + 1 = 0"],"goalsAfter":[],"content":"exact i.succ_ne_zero"},{"tailPos":3412,"headPos":3381,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ ↑i + 1 ≠ 0"],"goalsAfter":[],"content":"norm_cast; exact i.succ_ne_zero"},{"tailPos":3380,"headPos":3378,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ ↑i + 1 ≠ 0"],"goalsAfter":[],"content":"by"},{"tailPos":3412,"headPos":3378,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ ↑i + 1 ≠ 0"],"goalsAfter":[],"content":"by norm_cast; exact i.succ_ne_zero"},{"tailPos":3412,"headPos":3343,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"have l₃ : (i : ℚ) + 1 ≠ 0 := by norm_cast; exact i.succ_ne_zero"},{"tailPos":3466,"headPos":3457,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ ↑n - ↑i + 1 ≠ 0"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ ¬n - i + 1 = 0"],"content":"norm_cast"},{"tailPos":3467,"headPos":3466,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ ¬n - i + 1 = 0"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ ¬n - i + 1 = 0"],"content":";"},{"tailPos":3494,"headPos":3468,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ ¬n - i + 1 = 0"],"goalsAfter":[],"content":"exact (n - i).succ_ne_zero"},{"tailPos":3494,"headPos":3457,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ ↑n - ↑i + 1 ≠ 0"],"goalsAfter":[],"content":"norm_cast; exact (n - i).succ_ne_zero"},{"tailPos":3456,"headPos":3454,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ ↑n - ↑i + 1 ≠ 0"],"goalsAfter":[],"content":"by"},{"tailPos":3494,"headPos":3454,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ ↑n - ↑i + 1 ≠ 0"],"goalsAfter":[],"content":"by norm_cast; exact (n - i).succ_ne_zero"},{"tailPos":3494,"headPos":3415,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"have l₄ : (n : ℚ) - i + 1 ≠ 0 := by norm_cast; exact (n - i).succ_ne_zero"},{"tailPos":3573,"headPos":3497,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"have h₁ := (mul_div_cancel_left (↑(Nat.centralBinom (i + 1))) l₃).symm"},{"tailPos":3656,"headPos":3576,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"have h₂ := (mul_div_cancel_left (↑(Nat.centralBinom (n - i + 1))) l₄).symm"},{"tailPos":3802,"headPos":3755,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\n⊢ (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)"],"goalsAfter":[],"content":"exact_mod_cast Nat.succ_mul_centralBinom_succ i"},{"tailPos":3750,"headPos":3748,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\n⊢ (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)"],"goalsAfter":[],"content":"by"},{"tailPos":3802,"headPos":3748,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\n⊢ (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)"],"goalsAfter":[],"content":"by\n    exact_mod_cast Nat.succ_mul_centralBinom_succ i"},{"tailPos":3802,"headPos":3659,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"have h₃ : ((i : ℚ) + 1) * (i + 1).centralBinom = 2 * (2 * i + 1) * i.centralBinom := by\n    exact_mod_cast Nat.succ_mul_centralBinom_succ i"},{"tailPos":3978,"headPos":3925,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\n⊢ (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))"],"goalsAfter":[],"content":"exact_mod_cast Nat.succ_mul_centralBinom_succ (n - i)"},{"tailPos":3924,"headPos":3922,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\n⊢ (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))"],"goalsAfter":[],"content":"by"},{"tailPos":3978,"headPos":3922,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\n⊢ (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))"],"goalsAfter":[],"content":"by exact_mod_cast Nat.succ_mul_centralBinom_succ (n - i)"},{"tailPos":3978,"headPos":3805,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"have h₄ :\n    ((n : ℚ) - i + 1) * (n - i + 1).centralBinom = 2 * (2 * (n - i) + 1) * (n - i).centralBinom :=\n    by exact_mod_cast Nat.succ_mul_centralBinom_succ (n - i)"},{"tailPos":4006,"headPos":3981,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * ↑(i + 1) - ↑(n + 1)) /\n        (2 * ↑(n + 1) * (↑(n + 1) + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n + 1 - i)) * (2 * ↑i - ↑(n + 1)) / (2 * ↑(n + 1) * (↑(n + 1) + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"simp only [gosperCatalan]"},{"tailPos":4018,"headPos":4009,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * ↑(i + 1) - ↑(n + 1)) /\n        (2 * ↑(n + 1) * (↑(n + 1) + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n + 1 - i)) * (2 * ↑i - ↑(n + 1)) / (2 * ↑(n + 1) * (↑(n + 1) + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n + 1 - i)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"push_cast"},{"tailPos":4082,"headPos":4059,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ n + 1 - i = n - i + 1"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ n + 1 - i = 1 + (n - i)"],"content":"Nat.add_comm (n - i) 1,"},{"tailPos":4110,"headPos":4083,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ n + 1 - i = 1 + (n - i)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ n + 1 - i = 1 + n - i"],"content":"←(Nat.add_sub_assoc h 1),"},{"tailPos":4119,"headPos":4111,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ n + 1 - i = 1 + n - i"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ 1 + n - i = 1 + n - i"],"content":"add_comm"},{"tailPos":4120,"headPos":4119,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ 1 + n - i = 1 + n - i"],"goalsAfter":[],"content":"]"},{"tailPos":4120,"headPos":4055,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ n + 1 - i = n - i + 1"],"goalsAfter":[],"content":"rw [Nat.add_comm (n - i) 1, ←(Nat.add_sub_assoc h 1), add_comm]"},{"tailPos":4120,"headPos":4025,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n + 1 - i)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i + 1)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"show n + 1 - i = n - i + 1 by rw [Nat.add_comm (n - i) 1, ←(Nat.add_sub_assoc h 1), add_comm]"},{"tailPos":4121,"headPos":4120,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i + 1)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i + 1)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"]"},{"tailPos":4121,"headPos":4021,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n + 1 - i)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i + 1)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"rw [show n + 1 - i = n - i + 1 by rw [Nat.add_comm (n - i) 1, ←(Nat.add_sub_assoc h 1), add_comm]]"},{"tailPos":4133,"headPos":4128,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i + 1)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i + 1)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"h₁,"},{"tailPos":4139,"headPos":4134,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i + 1)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ((↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)) * (2 * ↑i - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"h₂,"},{"tailPos":4145,"headPos":4140,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ((↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)) * (2 * ↑i - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ((↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)) * (2 * ↑i - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"h₃,"},{"tailPos":4150,"headPos":4146,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ((↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)) * (2 * ↑i - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * (2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)) *\n          (2 * ↑i - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"h₄"},{"tailPos":4151,"headPos":4150,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * (2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)) *\n          (2 * ↑i - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * (2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)) *\n          (2 * ↑i - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"]"},{"tailPos":4151,"headPos":4124,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ ↑(Nat.centralBinom (i + 1)) * ↑(Nat.centralBinom (n + 1 - (i + 1))) * (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i + 1)) * (2 * ↑i - (↑n + 1)) / (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * (2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)) *\n          (2 * ↑i - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"content":"rw [h₁, h₂, h₃, h₄]"},{"tailPos":4164,"headPos":4154,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n + 1 - (i + 1))) *\n          (2 * (↑i + 1) - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) -\n      ↑(Nat.centralBinom i) * (2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)) *\n          (2 * ↑i - (↑n + 1)) /\n        (2 * (↑n + 1) * (↑n + 1 + 1)) =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ (2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i)) * (2 * (↑i + 1) - (↑n + 1)) *\n          ((↑n - ↑i + 1) * (2 * (↑n + 1) * (↑n + 1 + 1))) -\n        (↑i + 1) * (2 * (↑n + 1) * (↑n + 1 + 1)) *\n          (↑(Nat.centralBinom i) * (2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))) * (2 * ↑i - (↑n + 1)))) *\n      ((↑i + 1) * (↑n - ↑i + 1)) =\n    ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i)) *\n      ((↑i + 1) * (2 * (↑n + 1) * (↑n + 1 + 1)) * ((↑n - ↑i + 1) * (2 * (↑n + 1) * (↑n + 1 + 1))))"],"content":"field_simp"},{"tailPos":4171,"headPos":4167,"goalsBefore":["n i : ℕ\nh : i ≤ n\nl₁ : ↑n + 1 ≠ 0\nl₂ : ↑n + 1 + 1 ≠ 0\nl₃ : ↑i + 1 ≠ 0\nl₄ : ↑n - ↑i + 1 ≠ 0\nh₁ : ↑(Nat.centralBinom (i + 1)) = (↑i + 1) * ↑(Nat.centralBinom (i + 1)) / (↑i + 1)\nh₂ : ↑(Nat.centralBinom (n - i + 1)) = (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) / (↑n - ↑i + 1)\nh₃ : (↑i + 1) * ↑(Nat.centralBinom (i + 1)) = 2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i)\nh₄ : (↑n - ↑i + 1) * ↑(Nat.centralBinom (n - i + 1)) = 2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))\n⊢ (2 * (2 * ↑i + 1) * ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i)) * (2 * (↑i + 1) - (↑n + 1)) *\n          ((↑n - ↑i + 1) * (2 * (↑n + 1) * (↑n + 1 + 1))) -\n        (↑i + 1) * (2 * (↑n + 1) * (↑n + 1 + 1)) *\n          (↑(Nat.centralBinom i) * (2 * (2 * (↑n - ↑i) + 1) * ↑(Nat.centralBinom (n - i))) * (2 * ↑i - (↑n + 1)))) *\n      ((↑i + 1) * (↑n - ↑i + 1)) =\n    ↑(Nat.centralBinom i) * ↑(Nat.centralBinom (n - i)) *\n      ((↑i + 1) * (2 * (↑n + 1) * (↑n + 1 + 1)) * ((↑n - ↑i + 1) * (2 * (↑n + 1) * (↑n + 1 + 1))))"],"goalsAfter":[],"content":"ring"},{"tailPos":4171,"headPos":3189,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":[],"content":"have l₁ : (n : ℚ) + 1 ≠ 0 := by norm_cast; exact n.succ_ne_zero\n  have l₂ : (n : ℚ) + 1 + 1 ≠ 0 := by norm_cast; exact (n + 1).succ_ne_zero\n  have l₃ : (i : ℚ) + 1 ≠ 0 := by norm_cast; exact i.succ_ne_zero\n  have l₄ : (n : ℚ) - i + 1 ≠ 0 := by norm_cast; exact (n - i).succ_ne_zero\n  have h₁ := (mul_div_cancel_left (↑(Nat.centralBinom (i + 1))) l₃).symm\n  have h₂ := (mul_div_cancel_left (↑(Nat.centralBinom (n - i + 1))) l₄).symm\n  have h₃ : ((i : ℚ) + 1) * (i + 1).centralBinom = 2 * (2 * i + 1) * i.centralBinom := by\n    exact_mod_cast Nat.succ_mul_centralBinom_succ i\n  have h₄ :\n    ((n : ℚ) - i + 1) * (n - i + 1).centralBinom = 2 * (2 * (n - i) + 1) * (n - i).centralBinom :=\n    by exact_mod_cast Nat.succ_mul_centralBinom_succ (n - i)\n  simp only [gosperCatalan]\n  push_cast\n  rw [show n + 1 - i = n - i + 1 by rw [Nat.add_comm (n - i) 1, ←(Nat.add_sub_assoc h 1), add_comm]]\n  rw [h₁, h₂, h₃, h₄]\n  field_simp\n  ring"},{"tailPos":3186,"headPos":3184,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":[],"content":"by"},{"tailPos":4171,"headPos":3184,"goalsBefore":["n i : ℕ\nh : i ≤ n\n⊢ gosperCatalan (n + 1) (i + 1) - gosperCatalan (n + 1) i =\n    ↑(Nat.centralBinom i) / (↑i + 1) * ↑(Nat.centralBinom (n - i)) / (↑n - ↑i + 1)"],"goalsAfter":[],"content":"by\n  have l₁ : (n : ℚ) + 1 ≠ 0 := by norm_cast; exact n.succ_ne_zero\n  have l₂ : (n : ℚ) + 1 + 1 ≠ 0 := by norm_cast; exact (n + 1).succ_ne_zero\n  have l₃ : (i : ℚ) + 1 ≠ 0 := by norm_cast; exact i.succ_ne_zero\n  have l₄ : (n : ℚ) - i + 1 ≠ 0 := by norm_cast; exact (n - i).succ_ne_zero\n  have h₁ := (mul_div_cancel_left (↑(Nat.centralBinom (i + 1))) l₃).symm\n  have h₂ := (mul_div_cancel_left (↑(Nat.centralBinom (n - i + 1))) l₄).symm\n  have h₃ : ((i : ℚ) + 1) * (i + 1).centralBinom = 2 * (2 * i + 1) * i.centralBinom := by\n    exact_mod_cast Nat.succ_mul_centralBinom_succ i\n  have h₄ :\n    ((n : ℚ) - i + 1) * (n - i + 1).centralBinom = 2 * (2 * (n - i) + 1) * (n - i).centralBinom :=\n    by exact_mod_cast Nat.succ_mul_centralBinom_succ (n - i)\n  simp only [gosperCatalan]\n  push_cast\n  rw [show n + 1 - i = n - i + 1 by rw [Nat.add_comm (n - i) 1, ←(Nat.add_sub_assoc h 1), add_comm]]\n  rw [h₁, h₂, h₃, h₄]\n  field_simp\n  ring"},{"tailPos":4388,"headPos":4379,"goalsBefore":["n : ℕ\n⊢ ↑n + 1 ≠ 0"],"goalsAfter":["n : ℕ\n⊢ ¬n + 1 = 0"],"content":"norm_cast"},{"tailPos":4389,"headPos":4388,"goalsBefore":["n : ℕ\n⊢ ¬n + 1 = 0"],"goalsAfter":["n : ℕ\n⊢ ¬n + 1 = 0"],"content":";"},{"tailPos":4410,"headPos":4390,"goalsBefore":["n : ℕ\n⊢ ¬n + 1 = 0"],"goalsAfter":[],"content":"exact n.succ_ne_zero"},{"tailPos":4410,"headPos":4379,"goalsBefore":["n : ℕ\n⊢ ↑n + 1 ≠ 0"],"goalsAfter":[],"content":"norm_cast; exact n.succ_ne_zero"},{"tailPos":4378,"headPos":4376,"goalsBefore":["n : ℕ\n⊢ ↑n + 1 ≠ 0"],"goalsAfter":[],"content":"by"},{"tailPos":4410,"headPos":4376,"goalsBefore":["n : ℕ\n⊢ ↑n + 1 ≠ 0"],"goalsAfter":[],"content":"by norm_cast; exact n.succ_ne_zero"},{"tailPos":4410,"headPos":4346,"goalsBefore":["n : ℕ\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"goalsAfter":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"content":"have : (n : ℚ) + 1 ≠ 0 := by norm_cast; exact n.succ_ne_zero"},{"tailPos":4459,"headPos":4450,"goalsBefore":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ ↑n + 1 + 1 ≠ 0"],"goalsAfter":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ ¬n + 1 + 1 = 0"],"content":"norm_cast"},{"tailPos":4460,"headPos":4459,"goalsBefore":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ ¬n + 1 + 1 = 0"],"goalsAfter":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ ¬n + 1 + 1 = 0"],"content":";"},{"tailPos":4487,"headPos":4461,"goalsBefore":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ ¬n + 1 + 1 = 0"],"goalsAfter":[],"content":"exact (n + 1).succ_ne_zero"},{"tailPos":4487,"headPos":4450,"goalsBefore":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ ↑n + 1 + 1 ≠ 0"],"goalsAfter":[],"content":"norm_cast; exact (n + 1).succ_ne_zero"},{"tailPos":4449,"headPos":4447,"goalsBefore":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ ↑n + 1 + 1 ≠ 0"],"goalsAfter":[],"content":"by"},{"tailPos":4487,"headPos":4447,"goalsBefore":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ ↑n + 1 + 1 ≠ 0"],"goalsAfter":[],"content":"by norm_cast; exact (n + 1).succ_ne_zero"},{"tailPos":4487,"headPos":4413,"goalsBefore":["n : ℕ\nthis : ↑n + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"goalsAfter":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"content":"have : (n : ℚ) + 1 + 1 ≠ 0 := by norm_cast; exact (n + 1).succ_ne_zero"},{"tailPos":4534,"headPos":4525,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ ↑n + 2 ≠ 0"],"goalsAfter":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ ¬n + 2 = 0"],"content":"norm_cast"},{"tailPos":4535,"headPos":4534,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ ¬n + 2 = 0"],"goalsAfter":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ ¬n + 2 = 0"],"content":";"},{"tailPos":4562,"headPos":4536,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ ¬n + 2 = 0"],"goalsAfter":[],"content":"exact (n + 1).succ_ne_zero"},{"tailPos":4562,"headPos":4525,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ ↑n + 2 ≠ 0"],"goalsAfter":[],"content":"norm_cast; exact (n + 1).succ_ne_zero"},{"tailPos":4524,"headPos":4522,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ ↑n + 2 ≠ 0"],"goalsAfter":[],"content":"by"},{"tailPos":4562,"headPos":4522,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ ↑n + 2 ≠ 0"],"goalsAfter":[],"content":"by norm_cast; exact (n + 1).succ_ne_zero"},{"tailPos":4562,"headPos":4490,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"goalsAfter":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\nh : ↑n + 2 ≠ 0\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"content":"have h : (n : ℚ) + 2 ≠ 0 := by norm_cast; exact (n + 1).succ_ne_zero"},{"tailPos":4641,"headPos":4565,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\nh : ↑n + 2 ≠ 0\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"goalsAfter":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\nh : ↑n + 2 ≠ 0\n⊢ ↑(Nat.centralBinom (n + 1)) * ↑1 * (2 * ↑(n + 1) - ↑(n + 1)) / (2 * ↑(n + 1) * (↑(n + 1) + 1)) -\n      ↑1 * ↑(Nat.centralBinom (n + 1)) * (2 * ↑0 - ↑(n + 1)) / (2 * ↑(n + 1) * (↑(n + 1) + 1)) =\n    ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"content":"simp only [gosperCatalan, Nat.sub_zero, Nat.centralBinom_zero, Nat.sub_self]"},{"tailPos":4654,"headPos":4644,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\nh : ↑n + 2 ≠ 0\n⊢ ↑(Nat.centralBinom (n + 1)) * ↑1 * (2 * ↑(n + 1) - ↑(n + 1)) / (2 * ↑(n + 1) * (↑(n + 1) + 1)) -\n      ↑1 * ↑(Nat.centralBinom (n + 1)) * (2 * ↑0 - ↑(n + 1)) / (2 * ↑(n + 1) * (↑(n + 1) + 1)) =\n    ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"goalsAfter":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\nh : ↑n + 2 ≠ 0\n⊢ (↑(Nat.centralBinom (n + 1)) * (2 * (↑n + 1) - (↑n + 1)) - ↑(Nat.centralBinom (n + 1)) * (-1 + -↑n)) * (↑n + 2) =\n    ↑(Nat.centralBinom (n + 1)) * (2 * (↑n + 1) * (↑n + 1 + 1))"],"content":"field_simp"},{"tailPos":4661,"headPos":4657,"goalsBefore":["n : ℕ\nthis✝ : ↑n + 1 ≠ 0\nthis : ↑n + 1 + 1 ≠ 0\nh : ↑n + 2 ≠ 0\n⊢ (↑(Nat.centralBinom (n + 1)) * (2 * (↑n + 1) - (↑n + 1)) - ↑(Nat.centralBinom (n + 1)) * (-1 + -↑n)) * (↑n + 2) =\n    ↑(Nat.centralBinom (n + 1)) * (2 * (↑n + 1) * (↑n + 1 + 1))"],"goalsAfter":[],"content":"ring"},{"tailPos":4661,"headPos":4346,"goalsBefore":["n : ℕ\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"goalsAfter":[],"content":"have : (n : ℚ) + 1 ≠ 0 := by norm_cast; exact n.succ_ne_zero\n  have : (n : ℚ) + 1 + 1 ≠ 0 := by norm_cast; exact (n + 1).succ_ne_zero\n  have h : (n : ℚ) + 2 ≠ 0 := by norm_cast; exact (n + 1).succ_ne_zero\n  simp only [gosperCatalan, Nat.sub_zero, Nat.centralBinom_zero, Nat.sub_self]\n  field_simp\n  ring"},{"tailPos":4343,"headPos":4341,"goalsBefore":["n : ℕ\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"goalsAfter":[],"content":"by"},{"tailPos":4661,"headPos":4341,"goalsBefore":["n : ℕ\n⊢ gosperCatalan (n + 1) (n + 1) - gosperCatalan (n + 1) 0 = ↑(Nat.centralBinom (n + 1)) / (↑n + 2)"],"goalsAfter":[],"content":"by\n  have : (n : ℚ) + 1 ≠ 0 := by norm_cast; exact n.succ_ne_zero\n  have : (n : ℚ) + 1 + 1 ≠ 0 := by norm_cast; exact (n + 1).succ_ne_zero\n  have h : (n : ℚ) + 2 ≠ 0 := by norm_cast; exact (n + 1).succ_ne_zero\n  simp only [gosperCatalan, Nat.sub_zero, Nat.centralBinom_zero, Nat.sub_self]\n  field_simp\n  ring"},{"tailPos":4858,"headPos":4821,"goalsBefore":["n : ℕ\nthis : ↑(catalan n) = ↑(Nat.centralBinom n) / (↑n + 1)\n⊢ catalan n = Nat.centralBinom n / (n + 1)"],"goalsAfter":["n : ℕ\nthis : ↑(catalan n) = ↑(Nat.centralBinom n) / (↑n + 1)\nh : n + 1 ∣ Nat.centralBinom n\n⊢ catalan n = Nat.centralBinom n / (n + 1)"],"content":"have h := Nat.succ_dvd_centralBinom n"},{"tailPos":4882,"headPos":4863,"goalsBefore":["n : ℕ\nthis : ↑(catalan n) = ↑(Nat.centralBinom n) / (↑n + 1)\nh : n + 1 ∣ Nat.centralBinom n\n⊢ catalan n = Nat.centralBinom n / (n + 1)"],"goalsAfter":[],"content":"exact_mod_cast this"},{"tailPos":4882,"headPos":4821,"goalsBefore":["n : ℕ\nthis : ↑(catalan n) = ↑(Nat.centralBinom n) / (↑n + 1)\n⊢ catalan n = Nat.centralBinom n / (n + 1)"],"goalsAfter":[],"content":"have h := Nat.succ_dvd_centralBinom n\n    exact_mod_cast this"},{"tailPos":4882,"headPos":4756,"goalsBefore":["n : ℕ\n⊢ catalan n = Nat.centralBinom n / (n + 1)"],"goalsAfter":["n : ℕ\n⊢ ↑(catalan n) = ↑(Nat.centralBinom n) / (↑n + 1)"],"content":"suffices (catalan n : ℚ) = Nat.centralBinom n / (n + 1) by\n    have h := Nat.succ_dvd_centralBinom n\n    exact_mod_cast this"},{"tailPos":4942,"headPos":4885,"goalsBefore":["n : ℕ\n⊢ ↑(catalan n) = ↑(Nat.centralBinom n) / (↑n + 1)"],"goalsAfter":["case hz\n⊢ ↑(catalan 0) = ↑(Nat.centralBinom 0) / (↑0 + 1)","case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"induction' n using Nat.case_strong_induction_on with d hd"},{"tailPos":4947,"headPos":4945,"goalsBefore":["case hz\n⊢ ↑(catalan 0) = ↑(Nat.centralBinom 0) / (↑0 + 1)","case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["case hz\n⊢ ↑(catalan 0) = ↑(Nat.centralBinom 0) / (↑0 + 1)"],"content":"·"},{"tailPos":4952,"headPos":4948,"goalsBefore":["case hz\n⊢ ↑(catalan 0) = ↑(Nat.centralBinom 0) / (↑0 + 1)"],"goalsAfter":[],"content":"simp only [catalan_zero, Nat.cast_one, Nat.centralBinom_zero, Nat.cast_zero, zero_add, ne_eq, div_self]"},{"tailPos":4952,"headPos":4945,"goalsBefore":["case hz\n⊢ ↑(catalan 0) = ↑(Nat.centralBinom 0) / (↑0 + 1)","case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"· simp"},{"tailPos":4957,"headPos":4955,"goalsBefore":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"·"},{"tailPos":4967,"headPos":4958,"goalsBefore":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"simp_rw ["},{"tailPos":4980,"headPos":4967,"goalsBefore":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(∑ i : Fin (Nat.succ d), catalan ↑i * catalan (d - ↑i)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"catalan_succ,"},{"tailPos":4994,"headPos":4981,"goalsBefore":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(∑ i : Fin (Nat.succ d), catalan ↑i * catalan (d - ↑i)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x * catalan (d - ↑x)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"Nat.cast_sum,"},{"tailPos":5007,"headPos":4995,"goalsBefore":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x * catalan (d - ↑x)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x) * ↑(catalan (d - ↑x)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"simp only [Nat.cast_mul]"},{"tailPos":5008,"headPos":4958,"goalsBefore":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x) * ↑(catalan (d - ↑x)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"simp_rw [catalan_succ, Nat.cast_sum, Nat.cast_mul]"},{"tailPos":5147,"headPos":5013,"goalsBefore":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x) * ↑(catalan (d - ↑x)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1))","d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"trans (∑ i : Fin d.succ, Nat.centralBinom i / (i + 1) *\n                             (Nat.centralBinom (d - i) / (d - i + 1)) : ℚ)"},{"tailPos":5154,"headPos":5152,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1))","d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1))"],"content":"·"},{"tailPos":5160,"headPos":5155,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1))"],"goalsAfter":["case e_f\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ (fun x => ↑(catalan ↑x) * ↑(catalan (d - ↑x))) = fun i =>\n    ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1))"],"content":"congr"},{"tailPos":5173,"headPos":5167,"goalsBefore":["case e_f\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ (fun x => ↑(catalan ↑x) * ↑(catalan (d - ↑x))) = fun i =>\n    ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1))"],"goalsAfter":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"content":"ext1 x"},{"tailPos":5235,"headPos":5212,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑x ≤ d"],"goalsAfter":["case a\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑x < Nat.succ d"],"content":"apply Nat.le_of_lt_succ"},{"tailPos":5236,"headPos":5235,"goalsBefore":["case a\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑x < Nat.succ d"],"goalsAfter":["case a\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑x < Nat.succ d"],"content":";"},{"tailPos":5246,"headPos":5237,"goalsBefore":["case a\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑x < Nat.succ d"],"goalsAfter":[],"content":"apply x.2"},{"tailPos":5246,"headPos":5212,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑x ≤ d"],"goalsAfter":[],"content":"apply Nat.le_of_lt_succ; apply x.2"},{"tailPos":5211,"headPos":5209,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑x ≤ d"],"goalsAfter":[],"content":"by"},{"tailPos":5246,"headPos":5209,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑x ≤ d"],"goalsAfter":[],"content":"by apply Nat.le_of_lt_succ; apply x.2"},{"tailPos":5246,"headPos":5180,"goalsBefore":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\n⊢ ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"goalsAfter":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\n⊢ ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"content":"have m_le_d : x.val ≤ d := by apply Nat.le_of_lt_succ; apply x.2"},{"tailPos":5308,"headPos":5253,"goalsBefore":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\n⊢ ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"goalsAfter":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"content":"have d_minus_x_le_d : (d - x.val) ≤ d := tsub_le_self"},{"tailPos":5331,"headPos":5319,"goalsBefore":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"goalsAfter":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * ↑(catalan (d - ↑x)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"content":"hd _ m_le_d,"},{"tailPos":5351,"headPos":5332,"goalsBefore":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * ↑(catalan (d - ↑x)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"goalsAfter":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑(d - ↑x) + 1)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"content":"hd _ d_minus_x_le_d"},{"tailPos":5352,"headPos":5351,"goalsBefore":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑(d - ↑x) + 1)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"goalsAfter":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑(d - ↑x) + 1)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"content":"]"},{"tailPos":5352,"headPos":5315,"goalsBefore":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"goalsAfter":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑(d - ↑x) + 1)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"content":"rw [hd _ m_le_d, hd _ d_minus_x_le_d]"},{"tailPos":5368,"headPos":5359,"goalsBefore":["case e_f.h\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\nx : Fin (Nat.succ d)\nm_le_d : ↑x ≤ d\nd_minus_x_le_d : d - ↑x ≤ d\n⊢ ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑(d - ↑x) + 1)) =\n    ↑(Nat.centralBinom ↑x) / (↑↑x + 1) * (↑(Nat.centralBinom (d - ↑x)) / (↑d - ↑↑x + 1))"],"goalsAfter":[],"content":"norm_cast"},{"tailPos":5368,"headPos":5155,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1))"],"goalsAfter":[],"content":"congr\n      ext1 x\n      have m_le_d : x.val ≤ d := by apply Nat.le_of_lt_succ; apply x.2\n      have d_minus_x_le_d : (d - x.val) ≤ d := tsub_le_self\n      rw [hd _ m_le_d, hd _ d_minus_x_le_d]\n      norm_cast"},{"tailPos":5368,"headPos":5152,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ x : Fin (Nat.succ d), ↑(catalan ↑x) * ↑(catalan (d - ↑x)) =\n    ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1))","d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"· congr\n      ext1 x\n      have m_le_d : x.val ≤ d := by apply Nat.le_of_lt_succ; apply x.2\n      have d_minus_x_le_d : (d - x.val) ≤ d := tsub_le_self\n      rw [hd _ m_le_d, hd _ d_minus_x_le_d]\n      norm_cast"},{"tailPos":5375,"headPos":5373,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"·"},{"tailPos":5461,"headPos":5376,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i)","d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"trans (∑ i : Fin d.succ, (gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i))"},{"tailPos":5470,"headPos":5468,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i)","d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i)"],"content":"·"},{"tailPos":5505,"headPos":5471,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\ni : Fin (Nat.succ d)\nx✝ : i ∈ univ\n⊢ ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i"],"content":"refine' sum_congr rfl fun i _ => _"},{"tailPos":5539,"headPos":5518,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\ni : Fin (Nat.succ d)\nx✝ : i ∈ univ\n⊢ ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\ni : Fin (Nat.succ d)\nx✝ : i ∈ univ\n⊢ ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * ↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)"],"content":"gosper_trick i.is_le,"},{"tailPos":5547,"headPos":5540,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\ni : Fin (Nat.succ d)\nx✝ : i ∈ univ\n⊢ ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * ↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\ni : Fin (Nat.succ d)\nx✝ : i ∈ univ\n⊢ ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * ↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1) =\n    ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * ↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)"],"content":"mul_div"},{"tailPos":5548,"headPos":5547,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\ni : Fin (Nat.succ d)\nx✝ : i ∈ univ\n⊢ ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * ↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1) =\n    ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * ↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)"],"goalsAfter":[],"content":"]"},{"tailPos":5548,"headPos":5514,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\ni : Fin (Nat.succ d)\nx✝ : i ∈ univ\n⊢ ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i"],"goalsAfter":[],"content":"rw [gosper_trick i.is_le, mul_div]"},{"tailPos":5548,"headPos":5471,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i)"],"goalsAfter":[],"content":"refine' sum_congr rfl fun i _ => _\n        rw [gosper_trick i.is_le, mul_div]"},{"tailPos":5548,"headPos":5468,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i)","d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"· refine' sum_congr rfl fun i _ => _\n        rw [gosper_trick i.is_le, mul_div]"},{"tailPos":5557,"headPos":5555,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"·"},{"tailPos":5641,"headPos":5562,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i in range (Nat.succ d), (gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,"},{"tailPos":5668,"headPos":5654,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i in range (Nat.succ d), (gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ gosperCatalan (d + 1) (Nat.succ d) - gosperCatalan (d + 1) 0 = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"content":"sum_range_sub,"},{"tailPos":5688,"headPos":5669,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ gosperCatalan (d + 1) (Nat.succ d) - gosperCatalan (d + 1) 0 = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ gosperCatalan (d + 1) (d + 1) - gosperCatalan (d + 1) 0 = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"content":"Nat.succ_eq_add_one"},{"tailPos":5689,"headPos":5688,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ gosperCatalan (d + 1) (d + 1) - gosperCatalan (d + 1) 0 = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ gosperCatalan (d + 1) (d + 1) - gosperCatalan (d + 1) 0 = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"content":"]"},{"tailPos":5689,"headPos":5558,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ gosperCatalan (d + 1) (d + 1) - gosperCatalan (d + 1) 0 = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"content":"rw [← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,\n            sum_range_sub, Nat.succ_eq_add_one]"},{"tailPos":5743,"headPos":5702,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ gosperCatalan (d + 1) (d + 1) - gosperCatalan (d + 1) 0 = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(Nat.centralBinom (d + 1)) / (↑d + 2) = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"content":"gosper_catalan_sub_eq_central_binom_div d"},{"tailPos":5744,"headPos":5743,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(Nat.centralBinom (d + 1)) / (↑d + 2) = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(Nat.centralBinom (d + 1)) / (↑d + 2) = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"content":"]"},{"tailPos":5744,"headPos":5698,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ gosperCatalan (d + 1) (d + 1) - gosperCatalan (d + 1) 0 = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"goalsAfter":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(Nat.centralBinom (d + 1)) / (↑d + 2) = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"content":"rw [gosper_catalan_sub_eq_central_binom_div d]"},{"tailPos":5762,"headPos":5753,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(Nat.centralBinom (d + 1)) / (↑d + 2) = ↑(Nat.centralBinom (d + 1)) / (↑(d + 1) + 1)"],"goalsAfter":[],"content":"norm_cast"},{"tailPos":5762,"headPos":5558,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":[],"content":"rw [← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,\n            sum_range_sub, Nat.succ_eq_add_one]\n        rw [gosper_catalan_sub_eq_central_binom_div d]\n        norm_cast"},{"tailPos":5762,"headPos":5555,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), (gosperCatalan (d + 1) (↑i + 1) - gosperCatalan (d + 1) ↑i) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":[],"content":"· rw [← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,\n            sum_range_sub, Nat.succ_eq_add_one]\n        rw [gosper_catalan_sub_eq_central_binom_div d]\n        norm_cast"},{"tailPos":5762,"headPos":5376,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":[],"content":"trans (∑ i : Fin d.succ, (gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i))\n      · refine' sum_congr rfl fun i _ => _\n        rw [gosper_trick i.is_le, mul_div]\n      · rw [← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,\n            sum_range_sub, Nat.succ_eq_add_one]\n        rw [gosper_catalan_sub_eq_central_binom_div d]\n        norm_cast"},{"tailPos":5762,"headPos":5373,"goalsBefore":["d : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ∑ i : Fin (Nat.succ d), ↑(Nat.centralBinom ↑i) / (↑↑i + 1) * (↑(Nat.centralBinom (d - ↑i)) / (↑d - ↑↑i + 1)) =\n    ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":[],"content":"· trans (∑ i : Fin d.succ, (gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i))\n      · refine' sum_congr rfl fun i _ => _\n        rw [gosper_trick i.is_le, mul_div]\n      · rw [← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,\n            sum_range_sub, Nat.succ_eq_add_one]\n        rw [gosper_catalan_sub_eq_central_binom_div d]\n        norm_cast"},{"tailPos":5762,"headPos":4958,"goalsBefore":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":[],"content":"simp_rw [catalan_succ, Nat.cast_sum, Nat.cast_mul]\n    trans (∑ i : Fin d.succ, Nat.centralBinom i / (i + 1) *\n                             (Nat.centralBinom (d - i) / (d - i + 1)) : ℚ)\n    · congr\n      ext1 x\n      have m_le_d : x.val ≤ d := by apply Nat.le_of_lt_succ; apply x.2\n      have d_minus_x_le_d : (d - x.val) ≤ d := tsub_le_self\n      rw [hd _ m_le_d, hd _ d_minus_x_le_d]\n      norm_cast\n    · trans (∑ i : Fin d.succ, (gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i))\n      · refine' sum_congr rfl fun i _ => _\n        rw [gosper_trick i.is_le, mul_div]\n      · rw [← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,\n            sum_range_sub, Nat.succ_eq_add_one]\n        rw [gosper_catalan_sub_eq_central_binom_div d]\n        norm_cast"},{"tailPos":5762,"headPos":4955,"goalsBefore":["case hi\nd : ℕ\nhd : ∀ (m : ℕ), m ≤ d → ↑(catalan m) = ↑(Nat.centralBinom m) / (↑m + 1)\n⊢ ↑(catalan (Nat.succ d)) = ↑(Nat.centralBinom (Nat.succ d)) / (↑(Nat.succ d) + 1)"],"goalsAfter":[],"content":"· simp_rw [catalan_succ, Nat.cast_sum, Nat.cast_mul]\n    trans (∑ i : Fin d.succ, Nat.centralBinom i / (i + 1) *\n                             (Nat.centralBinom (d - i) / (d - i + 1)) : ℚ)\n    · congr\n      ext1 x\n      have m_le_d : x.val ≤ d := by apply Nat.le_of_lt_succ; apply x.2\n      have d_minus_x_le_d : (d - x.val) ≤ d := tsub_le_self\n      rw [hd _ m_le_d, hd _ d_minus_x_le_d]\n      norm_cast\n    · trans (∑ i : Fin d.succ, (gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i))\n      · refine' sum_congr rfl fun i _ => _\n        rw [gosper_trick i.is_le, mul_div]\n      · rw [← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,\n            sum_range_sub, Nat.succ_eq_add_one]\n        rw [gosper_catalan_sub_eq_central_binom_div d]\n        norm_cast"},{"tailPos":5762,"headPos":4756,"goalsBefore":["n : ℕ\n⊢ catalan n = Nat.centralBinom n / (n + 1)"],"goalsAfter":[],"content":"suffices (catalan n : ℚ) = Nat.centralBinom n / (n + 1) by\n    have h := Nat.succ_dvd_centralBinom n\n    exact_mod_cast this\n  induction' n using Nat.case_strong_induction_on with d hd\n  · simp\n  · simp_rw [catalan_succ, Nat.cast_sum, Nat.cast_mul]\n    trans (∑ i : Fin d.succ, Nat.centralBinom i / (i + 1) *\n                             (Nat.centralBinom (d - i) / (d - i + 1)) : ℚ)\n    · congr\n      ext1 x\n      have m_le_d : x.val ≤ d := by apply Nat.le_of_lt_succ; apply x.2\n      have d_minus_x_le_d : (d - x.val) ≤ d := tsub_le_self\n      rw [hd _ m_le_d, hd _ d_minus_x_le_d]\n      norm_cast\n    · trans (∑ i : Fin d.succ, (gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i))\n      · refine' sum_congr rfl fun i _ => _\n        rw [gosper_trick i.is_le, mul_div]\n      · rw [← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,\n            sum_range_sub, Nat.succ_eq_add_one]\n        rw [gosper_catalan_sub_eq_central_binom_div d]\n        norm_cast"},{"tailPos":4753,"headPos":4751,"goalsBefore":["n : ℕ\n⊢ catalan n = Nat.centralBinom n / (n + 1)"],"goalsAfter":[],"content":"by"},{"tailPos":5762,"headPos":4751,"goalsBefore":["n : ℕ\n⊢ catalan n = Nat.centralBinom n / (n + 1)"],"goalsAfter":[],"content":"by\n  suffices (catalan n : ℚ) = Nat.centralBinom n / (n + 1) by\n    have h := Nat.succ_dvd_centralBinom n\n    exact_mod_cast this\n  induction' n using Nat.case_strong_induction_on with d hd\n  · simp\n  · simp_rw [catalan_succ, Nat.cast_sum, Nat.cast_mul]\n    trans (∑ i : Fin d.succ, Nat.centralBinom i / (i + 1) *\n                             (Nat.centralBinom (d - i) / (d - i + 1)) : ℚ)\n    · congr\n      ext1 x\n      have m_le_d : x.val ≤ d := by apply Nat.le_of_lt_succ; apply x.2\n      have d_minus_x_le_d : (d - x.val) ≤ d := tsub_le_self\n      rw [hd _ m_le_d, hd _ d_minus_x_le_d]\n      norm_cast\n    · trans (∑ i : Fin d.succ, (gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i))\n      · refine' sum_congr rfl fun i _ => _\n        rw [gosper_trick i.is_le, mul_div]\n      · rw [← sum_range fun i => gosperCatalan (d + 1) (i + 1) - gosperCatalan (d + 1) i,\n            sum_range_sub, Nat.succ_eq_add_one]\n        rw [gosper_catalan_sub_eq_central_binom_div d]\n        norm_cast"},{"tailPos":6149,"headPos":6135,"goalsBefore":["⊢ catalan 2 = 2"],"goalsAfter":["⊢ ∑ i : Fin (Nat.succ 1), catalan ↑i * catalan (1 - ↑i) = 2"],"content":"unfold catalan"},{"tailPos":6150,"headPos":6149,"goalsBefore":["⊢ ∑ i : Fin (Nat.succ 1), catalan ↑i * catalan (1 - ↑i) = 2"],"goalsAfter":["⊢ ∑ i : Fin (Nat.succ 1), catalan ↑i * catalan (1 - ↑i) = 2"],"content":";"},{"tailPos":6154,"headPos":6151,"goalsBefore":["⊢ ∑ i : Fin (Nat.succ 1), catalan ↑i * catalan (1 - ↑i) = 2"],"goalsAfter":[],"content":"rfl"},{"tailPos":6154,"headPos":6135,"goalsBefore":["⊢ catalan 2 = 2"],"goalsAfter":[],"content":"unfold catalan; rfl"},{"tailPos":6134,"headPos":6132,"goalsBefore":["⊢ catalan 2 = 2"],"goalsAfter":[],"content":"by"},{"tailPos":6154,"headPos":6132,"goalsBefore":["⊢ catalan 2 = 2"],"goalsAfter":[],"content":"by unfold catalan; rfl"},{"tailPos":6245,"headPos":6231,"goalsBefore":["⊢ catalan 3 = 5"],"goalsAfter":["⊢ ∑ i : Fin (Nat.succ 2), catalan ↑i * catalan (2 - ↑i) = 5"],"content":"unfold catalan"},{"tailPos":6246,"headPos":6245,"goalsBefore":["⊢ ∑ i : Fin (Nat.succ 2), catalan ↑i * catalan (2 - ↑i) = 5"],"goalsAfter":["⊢ ∑ i : Fin (Nat.succ 2), catalan ↑i * catalan (2 - ↑i) = 5"],"content":";"},{"tailPos":6250,"headPos":6247,"goalsBefore":["⊢ ∑ i : Fin (Nat.succ 2), catalan ↑i * catalan (2 - ↑i) = 5"],"goalsAfter":[],"content":"rfl"},{"tailPos":6250,"headPos":6231,"goalsBefore":["⊢ catalan 3 = 5"],"goalsAfter":[],"content":"unfold catalan; rfl"},{"tailPos":6230,"headPos":6228,"goalsBefore":["⊢ catalan 3 = 5"],"goalsAfter":[],"content":"by"},{"tailPos":6250,"headPos":6228,"goalsBefore":["⊢ catalan 3 = 5"],"goalsAfter":[],"content":"by unfold catalan; rfl"},{"tailPos":6611,"headPos":6598,"goalsBefore":["a b : Finset (Tree Unit)\nx✝¹ x✝ : Tree Unit × Tree Unit\nx₁ x₂ y₁ y₂ : Tree Unit\nh : (fun x => node () x.fst x.snd) (x₁, x₂) = (fun x => node () x.fst x.snd) (y₁, y₂)\n⊢ (x₁, x₂) = (y₁, y₂)"],"goalsAfter":[],"content":"simpa only [Prod.mk.injEq, node.injEq, true_and] using h"},{"tailPos":6597,"headPos":6595,"goalsBefore":["a b : Finset (Tree Unit)\nx✝¹ x✝ : Tree Unit × Tree Unit\nx₁ x₂ y₁ y₂ : Tree Unit\nh : (fun x => node () x.fst x.snd) (x₁, x₂) = (fun x => node () x.fst x.snd) (y₁, y₂)\n⊢ (x₁, x₂) = (y₁, y₂)"],"goalsAfter":[],"content":"by"},{"tailPos":6611,"headPos":6595,"goalsBefore":["a b : Finset (Tree Unit)\nx✝¹ x✝ : Tree Unit × Tree Unit\nx₁ x₂ y₁ y₂ : Tree Unit\nh : (fun x => node () x.fst x.snd) (x₁, x₂) = (fun x => node () x.fst x.snd) (y₁, y₂)\n⊢ (x₁, x₂) = (y₁, y₂)"],"goalsAfter":[],"content":"by simpa using h"},{"tailPos":7213,"headPos":7206,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (invImage (fun a => sizeOf a) instWellFoundedRelation).1 (↑ijh).fst (Nat.succ n)"],"goalsAfter":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).fst < Nat.succ n"],"content":"simp only [InvImage, Nat.lt_wfRel, sizeOf_nat, Nat.lt_eq, gt_iff_lt]"},{"tailPos":7262,"headPos":7224,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).fst < Nat.succ n"],"goalsAfter":[],"content":"exact Nat.lt_succ_of_le (fst_le ijh.2)"},{"tailPos":7262,"headPos":7220,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).fst < Nat.succ n"],"goalsAfter":[],"content":"try exact Nat.lt_succ_of_le (fst_le ijh.2)"},{"tailPos":7311,"headPos":7273,"goalsBefore":[],"goalsAfter":[],"content":"exact Nat.lt_succ_of_le (snd_le ijh.2)"},{"tailPos":7311,"headPos":7269,"goalsBefore":[],"goalsAfter":[],"content":"try exact Nat.lt_succ_of_le (snd_le ijh.2)"},{"tailPos":7311,"headPos":7206,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (invImage (fun a => sizeOf a) instWellFoundedRelation).1 (↑ijh).fst (Nat.succ n)"],"goalsAfter":[],"content":"simp_wf\n      try exact Nat.lt_succ_of_le (fst_le ijh.2)\n      try exact Nat.lt_succ_of_le (snd_le ijh.2)"},{"tailPos":7213,"headPos":7206,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (invImage (fun a => sizeOf a) instWellFoundedRelation).1 (↑ijh).snd (Nat.succ n)"],"goalsAfter":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).snd < Nat.succ n"],"content":"simp only [InvImage, Nat.lt_wfRel, sizeOf_nat, Nat.lt_eq, gt_iff_lt]"},{"tailPos":7262,"headPos":7224,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).snd < Nat.succ n"],"goalsAfter":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).snd < Nat.succ n"],"content":"exact Nat.lt_succ_of_le (fst_le ijh.2)"},{"tailPos":7262,"headPos":7220,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).snd < Nat.succ n"],"goalsAfter":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).snd < Nat.succ n"],"content":"try exact Nat.lt_succ_of_le (fst_le ijh.2)"},{"tailPos":7311,"headPos":7273,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).snd < Nat.succ n"],"goalsAfter":[],"content":"exact Nat.lt_succ_of_le (snd_le ijh.2)"},{"tailPos":7311,"headPos":7269,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (↑ijh).snd < Nat.succ n"],"goalsAfter":[],"content":"try exact Nat.lt_succ_of_le (snd_le ijh.2)"},{"tailPos":7311,"headPos":7206,"goalsBefore":["n : ℕ\nijh : { x // x ∈ Nat.antidiagonal n }\n⊢ (invImage (fun a => sizeOf a) instWellFoundedRelation).1 (↑ijh).snd (Nat.succ n)"],"goalsAfter":[],"content":"simp_wf\n      try exact Nat.lt_succ_of_le (fst_le ijh.2)\n      try exact Nat.lt_succ_of_le (snd_le ijh.2)"},{"tailPos":7466,"headPos":7449,"goalsBefore":["⊢ treesOfNumNodesEq 0 = {nil}"],"goalsAfter":["⊢ {nil} = {nil}"],"content":"treesOfNumNodesEq"},{"tailPos":7467,"headPos":7466,"goalsBefore":["⊢ {nil} = {nil}"],"goalsAfter":[],"content":"]"},{"tailPos":7467,"headPos":7445,"goalsBefore":["⊢ treesOfNumNodesEq 0 = {nil}"],"goalsAfter":[],"content":"rw [treesOfNumNodesEq]"},{"tailPos":7444,"headPos":7442,"goalsBefore":["⊢ treesOfNumNodesEq 0 = {nil}"],"goalsAfter":[],"content":"by"},{"tailPos":7467,"headPos":7442,"goalsBefore":["⊢ treesOfNumNodesEq 0 = {nil}"],"goalsAfter":[],"content":"by rw [treesOfNumNodesEq]"},{"tailPos":7752,"headPos":7735,"goalsBefore":["n : ℕ\n⊢ treesOfNumNodesEq (n + 1) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"goalsAfter":["n : ℕ\n⊢ (Finset.biUnion (attach (Nat.antidiagonal n)) fun ijh =>\n      pairwiseNode (treesOfNumNodesEq (↑ijh).fst) (treesOfNumNodesEq (↑ijh).snd)) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"content":"treesOfNumNodesEq"},{"tailPos":7753,"headPos":7752,"goalsBefore":["n : ℕ\n⊢ (Finset.biUnion (attach (Nat.antidiagonal n)) fun ijh =>\n      pairwiseNode (treesOfNumNodesEq (↑ijh).fst) (treesOfNumNodesEq (↑ijh).snd)) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"goalsAfter":["n : ℕ\n⊢ (Finset.biUnion (attach (Nat.antidiagonal n)) fun ijh =>\n      pairwiseNode (treesOfNumNodesEq (↑ijh).fst) (treesOfNumNodesEq (↑ijh).snd)) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"content":"]"},{"tailPos":7753,"headPos":7731,"goalsBefore":["n : ℕ\n⊢ treesOfNumNodesEq (n + 1) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"goalsAfter":["n : ℕ\n⊢ (Finset.biUnion (attach (Nat.antidiagonal n)) fun ijh =>\n      pairwiseNode (treesOfNumNodesEq (↑ijh).fst) (treesOfNumNodesEq (↑ijh).snd)) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"content":"rw [treesOfNumNodesEq]"},{"tailPos":7759,"headPos":7756,"goalsBefore":["n : ℕ\n⊢ (Finset.biUnion (attach (Nat.antidiagonal n)) fun ijh =>\n      pairwiseNode (treesOfNumNodesEq (↑ijh).fst) (treesOfNumNodesEq (↑ijh).snd)) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"goalsAfter":["case a\nn : ℕ\na✝ : Tree Unit\n⊢ (a✝ ∈\n      Finset.biUnion (attach (Nat.antidiagonal n)) fun ijh =>\n        pairwiseNode (treesOfNumNodesEq (↑ijh).fst) (treesOfNumNodesEq (↑ijh).snd)) ↔\n    a✝ ∈\n      Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"content":"ext"},{"tailPos":7766,"headPos":7762,"goalsBefore":["case a\nn : ℕ\na✝ : Tree Unit\n⊢ (a✝ ∈\n      Finset.biUnion (attach (Nat.antidiagonal n)) fun ijh =>\n        pairwiseNode (treesOfNumNodesEq (↑ijh).fst) (treesOfNumNodesEq (↑ijh).snd)) ↔\n    a✝ ∈\n      Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"goalsAfter":[],"content":"simp only [mem_biUnion, mem_attach, mem_map, mem_product, Function.Embedding.coeFn_mk, Prod.exists, true_and,\n  Subtype.exists, Nat.mem_antidiagonal, exists_prop]"},{"tailPos":7766,"headPos":7731,"goalsBefore":["n : ℕ\n⊢ treesOfNumNodesEq (n + 1) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"goalsAfter":[],"content":"rw [treesOfNumNodesEq]\n  ext\n  simp"},{"tailPos":7728,"headPos":7726,"goalsBefore":["n : ℕ\n⊢ treesOfNumNodesEq (n + 1) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"goalsAfter":[],"content":"by"},{"tailPos":7766,"headPos":7726,"goalsBefore":["n : ℕ\n⊢ treesOfNumNodesEq (n + 1) =\n    Finset.biUnion (Nat.antidiagonal n) fun ij => pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)"],"goalsAfter":[],"content":"by\n  rw [treesOfNumNodesEq]\n  ext\n  simp"},{"tailPos":8001,"headPos":7954,"goalsBefore":["x : Tree Unit\nn : ℕ\n⊢ x ∈ treesOfNumNodesEq n ↔ numNodes x = n"],"goalsAfter":["case base\nn : ℕ\n⊢ nil ∈ treesOfNumNodesEq n ↔ numNodes nil = n","case ind\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\nn : ℕ\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq n ↔ numNodes (node () x✝ y✝) = n"],"content":"induction x using Tree.unitRecOn generalizing n"},{"tailPos":8005,"headPos":8002,"goalsBefore":["case base\nn : ℕ\n⊢ nil ∈ treesOfNumNodesEq n ↔ numNodes nil = n","case ind\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\nn : ℕ\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq n ↔ numNodes (node () x✝ y✝) = n"],"goalsAfter":["case base\nn : ℕ\n⊢ nil ∈ treesOfNumNodesEq n ↔ numNodes nil = n","case ind\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\nn : ℕ\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq n ↔ numNodes (node () x✝ y✝) = n"],"content":"<;>"},{"tailPos":8013,"headPos":8006,"goalsBefore":["case base\nn : ℕ\n⊢ nil ∈ treesOfNumNodesEq n ↔ numNodes nil = n"],"goalsAfter":["case base.zero\n⊢ nil ∈ treesOfNumNodesEq Nat.zero ↔ numNodes nil = Nat.zero","case base.succ\nn✝ : ℕ\n⊢ nil ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes nil = Nat.succ n✝"],"content":"cases n"},{"tailPos":8013,"headPos":8006,"goalsBefore":["case ind\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\nn : ℕ\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq n ↔ numNodes (node () x✝ y✝) = n"],"goalsAfter":["case ind.zero\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq Nat.zero ↔ numNodes (node () x✝ y✝) = Nat.zero","case ind.succ\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\nn✝ : ℕ\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes (node () x✝ y✝) = Nat.succ n✝"],"content":"cases n"},{"tailPos":8013,"headPos":7954,"goalsBefore":["x : Tree Unit\nn : ℕ\n⊢ x ∈ treesOfNumNodesEq n ↔ numNodes x = n"],"goalsAfter":["case base.zero\n⊢ nil ∈ treesOfNumNodesEq Nat.zero ↔ numNodes nil = Nat.zero","case base.succ\nn✝ : ℕ\n⊢ nil ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes nil = Nat.succ n✝","case ind.zero\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq Nat.zero ↔ numNodes (node () x✝ y✝) = Nat.zero","case ind.succ\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\nn✝ : ℕ\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes (node () x✝ y✝) = Nat.succ n✝"],"content":"induction x using Tree.unitRecOn generalizing n <;> cases n"},{"tailPos":8017,"headPos":8014,"goalsBefore":["case base.zero\n⊢ nil ∈ treesOfNumNodesEq Nat.zero ↔ numNodes nil = Nat.zero","case base.succ\nn✝ : ℕ\n⊢ nil ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes nil = Nat.succ n✝","case ind.zero\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq Nat.zero ↔ numNodes (node () x✝ y✝) = Nat.zero","case ind.succ\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\nn✝ : ℕ\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes (node () x✝ y✝) = Nat.succ n✝"],"goalsAfter":["case base.zero\n⊢ nil ∈ treesOfNumNodesEq Nat.zero ↔ numNodes nil = Nat.zero","case base.succ\nn✝ : ℕ\n⊢ nil ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes nil = Nat.succ n✝","case ind.zero\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq Nat.zero ↔ numNodes (node () x✝ y✝) = Nat.zero","case ind.succ\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\nn✝ : ℕ\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes (node () x✝ y✝) = Nat.succ n✝"],"content":"<;>"},{"tailPos":8075,"headPos":8022,"goalsBefore":["case base.zero\n⊢ nil ∈ treesOfNumNodesEq Nat.zero ↔ numNodes nil = Nat.zero"],"goalsAfter":[],"content":"simp [treesOfNumNodesEq_succ, Nat.succ_eq_add_one, *]"},{"tailPos":8075,"headPos":8022,"goalsBefore":["case base.succ\nn✝ : ℕ\n⊢ nil ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes nil = Nat.succ n✝"],"goalsAfter":["case base.succ\nn✝ : ℕ\n⊢ ¬0 = n✝ + 1"],"content":"simp [treesOfNumNodesEq_succ, Nat.succ_eq_add_one, *]"},{"tailPos":8075,"headPos":8022,"goalsBefore":["case ind.zero\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq Nat.zero ↔ numNodes (node () x✝ y✝) = Nat.zero"],"goalsAfter":[],"content":"simp [treesOfNumNodesEq_succ, Nat.succ_eq_add_one, *]"},{"tailPos":8075,"headPos":8022,"goalsBefore":["case ind.succ\nx✝ y✝ : Tree Unit\na✝¹ : ∀ {n : ℕ}, x✝ ∈ treesOfNumNodesEq n ↔ numNodes x✝ = n\na✝ : ∀ {n : ℕ}, y✝ ∈ treesOfNumNodesEq n ↔ numNodes y✝ = n\nn✝ : ℕ\n⊢ node () x✝ y✝ ∈ treesOfNumNodesEq (Nat.succ n✝) ↔ numNodes (node () x✝ y✝) = Nat.succ n✝"],"goalsAfter":[],"content":"simp [treesOfNumNodesEq_succ, Nat.succ_eq_add_one, *]"},{"tailPos":8075,"headPos":7954,"goalsBefore":["x : Tree Unit\nn : ℕ\n⊢ x ∈ treesOfNumNodesEq n ↔ numNodes x = n"],"goalsAfter":["case base.succ\nn✝ : ℕ\n⊢ ¬0 = n✝ + 1"],"content":"induction x using Tree.unitRecOn generalizing n <;> cases n <;>\n    simp [treesOfNumNodesEq_succ, Nat.succ_eq_add_one, *]"},{"tailPos":8109,"headPos":8078,"goalsBefore":["case base.succ\nn✝ : ℕ\n⊢ ¬0 = n✝ + 1"],"goalsAfter":[],"content":"exact (Nat.succ_ne_zero _).symm"},{"tailPos":8109,"headPos":7954,"goalsBefore":["x : Tree Unit\nn : ℕ\n⊢ x ∈ treesOfNumNodesEq n ↔ numNodes x = n"],"goalsAfter":[],"content":"induction x using Tree.unitRecOn generalizing n <;> cases n <;>\n    simp [treesOfNumNodesEq_succ, Nat.succ_eq_add_one, *]\n  exact (Nat.succ_ne_zero _).symm"},{"tailPos":7951,"headPos":7949,"goalsBefore":["x : Tree Unit\nn : ℕ\n⊢ x ∈ treesOfNumNodesEq n ↔ numNodes x = n"],"goalsAfter":[],"content":"by"},{"tailPos":8109,"headPos":7949,"goalsBefore":["x : Tree Unit\nn : ℕ\n⊢ x ∈ treesOfNumNodesEq n ↔ numNodes x = n"],"goalsAfter":[],"content":"by\n  induction x using Tree.unitRecOn generalizing n <;> cases n <;>\n    simp [treesOfNumNodesEq_succ, Nat.succ_eq_add_one, *]\n  exact (Nat.succ_ne_zero _).symm"},{"tailPos":8528,"headPos":8524,"goalsBefore":["n : ℕ\n⊢ ∀ (x : Tree Unit), x ∈ ↑(treesOfNumNodesEq n) ↔ x ∈ {x | numNodes x = n}"],"goalsAfter":[],"content":"simp only [mem_coe, mem_treesOfNumNodesEq, Set.mem_setOf_eq, forall_const]"},{"tailPos":8523,"headPos":8521,"goalsBefore":["n : ℕ\n⊢ ∀ (x : Tree Unit), x ∈ ↑(treesOfNumNodesEq n) ↔ x ∈ {x | numNodes x = n}"],"goalsAfter":[],"content":"by"},{"tailPos":8528,"headPos":8521,"goalsBefore":["n : ℕ\n⊢ ∀ (x : Tree Unit), x ∈ ↑(treesOfNumNodesEq n) ↔ x ∈ {x | numNodes x = n}"],"goalsAfter":[],"content":"by simp"},{"tailPos":8750,"headPos":8693,"goalsBefore":["n : ℕ\n⊢ card (treesOfNumNodesEq n) = catalan n"],"goalsAfter":["case hz\n⊢ card (treesOfNumNodesEq 0) = catalan 0","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ card (treesOfNumNodesEq (Nat.succ n)) = catalan (Nat.succ n)"],"content":"induction' n using Nat.case_strong_induction_on with n ih"},{"tailPos":8755,"headPos":8753,"goalsBefore":["case hz\n⊢ card (treesOfNumNodesEq 0) = catalan 0","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ card (treesOfNumNodesEq (Nat.succ n)) = catalan (Nat.succ n)"],"goalsAfter":["case hz\n⊢ card (treesOfNumNodesEq 0) = catalan 0"],"content":"·"},{"tailPos":8760,"headPos":8756,"goalsBefore":["case hz\n⊢ card (treesOfNumNodesEq 0) = catalan 0"],"goalsAfter":[],"content":"simp only"},{"tailPos":8760,"headPos":8753,"goalsBefore":["case hz\n⊢ card (treesOfNumNodesEq 0) = catalan 0","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ card (treesOfNumNodesEq (Nat.succ n)) = catalan (Nat.succ n)"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ card (treesOfNumNodesEq (Nat.succ n)) = catalan (Nat.succ n)"],"content":"· simp"},{"tailPos":8790,"headPos":8767,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ card (treesOfNumNodesEq (Nat.succ n)) = catalan (Nat.succ n)"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ card\n      (Finset.biUnion (Nat.antidiagonal n) fun ij =>\n        pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)) =\n    catalan (Nat.succ n)"],"content":"treesOfNumNodesEq_succ,"},{"tailPos":8804,"headPos":8791,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ card\n      (Finset.biUnion (Nat.antidiagonal n) fun ij =>\n        pairwiseNode (treesOfNumNodesEq ij.fst) (treesOfNumNodesEq ij.snd)) =\n    catalan (Nat.succ n)"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    catalan (Nat.succ n)","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"content":"card_biUnion,"},{"tailPos":8818,"headPos":8805,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    catalan (Nat.succ n)","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"content":"catalan_succ'"},{"tailPos":8819,"headPos":8818,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"content":"]"},{"tailPos":8819,"headPos":8763,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ card (treesOfNumNodesEq (Nat.succ n)) = catalan (Nat.succ n)"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"content":"rw [treesOfNumNodesEq_succ, card_biUnion, catalan_succ']"},{"tailPos":8824,"headPos":8822,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd"],"content":"·"},{"tailPos":8844,"headPos":8825,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      card (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd)) = catalan x.fst * catalan x.snd"],"content":"apply sum_congr rfl"},{"tailPos":8868,"headPos":8849,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      card (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd)) = catalan x.fst * catalan x.snd"],"goalsAfter":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ card (pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)) =\n    catalan (i, j).fst * catalan (i, j).snd"],"content":"rintro ⟨i, j⟩ H"},{"tailPos":8886,"headPos":8877,"goalsBefore":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ card (pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)) =\n    catalan (i, j).fst * catalan (i, j).snd"],"goalsAfter":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ card (treesOfNumNodesEq (i, j).fst ×ˢ treesOfNumNodesEq (i, j).snd) = catalan (i, j).fst * catalan (i, j).snd"],"content":"card_map,"},{"tailPos":8900,"headPos":8887,"goalsBefore":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ card (treesOfNumNodesEq (i, j).fst ×ˢ treesOfNumNodesEq (i, j).snd) = catalan (i, j).fst * catalan (i, j).snd"],"goalsAfter":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ card (treesOfNumNodesEq (i, j).fst) * card (treesOfNumNodesEq (i, j).snd) = catalan (i, j).fst * catalan (i, j).snd"],"content":"card_product,"},{"tailPos":8917,"headPos":8901,"goalsBefore":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ card (treesOfNumNodesEq (i, j).fst) * card (treesOfNumNodesEq (i, j).snd) = catalan (i, j).fst * catalan (i, j).snd"],"goalsAfter":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ catalan (i, j).fst * card (treesOfNumNodesEq (i, j).snd) = catalan (i, j).fst * catalan (i, j).snd"],"content":"ih _ (fst_le H),"},{"tailPos":8933,"headPos":8918,"goalsBefore":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ catalan (i, j).fst * card (treesOfNumNodesEq (i, j).snd) = catalan (i, j).fst * catalan (i, j).snd"],"goalsAfter":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ catalan (i, j).fst * catalan (i, j).snd = catalan (i, j).fst * catalan (i, j).snd"],"content":"ih _ (snd_le H)"},{"tailPos":8934,"headPos":8933,"goalsBefore":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ catalan (i, j).fst * catalan (i, j).snd = catalan (i, j).fst * catalan (i, j).snd"],"goalsAfter":[],"content":"]"},{"tailPos":8934,"headPos":8873,"goalsBefore":["case hi.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\nH : (i, j) ∈ Nat.antidiagonal n\n⊢ card (pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)) =\n    catalan (i, j).fst * catalan (i, j).snd"],"goalsAfter":[],"content":"rw [card_map, card_product, ih _ (fst_le H), ih _ (snd_le H)]"},{"tailPos":8934,"headPos":8825,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd"],"goalsAfter":[],"content":"apply sum_congr rfl\n    rintro ⟨i, j⟩ H\n    rw [card_map, card_product, ih _ (fst_le H), ih _ (snd_le H)]"},{"tailPos":8934,"headPos":8822,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∑ u in Nat.antidiagonal n, card (pairwiseNode (treesOfNumNodesEq u.fst) (treesOfNumNodesEq u.snd)) =\n    ∑ ij in Nat.antidiagonal n, catalan ij.fst * catalan ij.snd","case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"content":"· apply sum_congr rfl\n    rintro ⟨i, j⟩ H\n    rw [card_map, card_product, ih _ (fst_le H), ih _ (snd_le H)]"},{"tailPos":8939,"headPos":8937,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"content":"·"},{"tailPos":8949,"headPos":8940,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"content":"simp_rw ["},{"tailPos":8962,"headPos":8949,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            ∀ ⦃a : Tree Unit⦄,\n              a ∈ pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd) →\n                ¬a ∈ pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd)"],"content":"simp only [disjoint_left]"},{"tailPos":8963,"headPos":8940,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            ∀ ⦃a : Tree Unit⦄,\n              a ∈ pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd) →\n                ¬a ∈ pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd)"],"content":"simp_rw [disjoint_left]"},{"tailPos":9002,"headPos":8968,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            ∀ ⦃a : Tree Unit⦄,\n              a ∈ pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd) →\n                ¬a ∈ pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd)"],"goalsAfter":["case hi.mk.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\n⊢ (i, j) ≠ (i', j') →\n    ∀ ⦃a : Tree Unit⦄,\n      a ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n        ¬a ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"content":"rintro ⟨i, j⟩ _ ⟨i', j'⟩ _"},{"tailPos":9058,"headPos":9048,"goalsBefore":["case hi.mk.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\n⊢ (i, j) ≠ (i', j') →\n    ∀ ⦃a : Tree Unit⦄,\n      a ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n        ¬a ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":["case hi.mk.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Tree Unit\n⊢ a ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬a ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"content":"intros h a"},{"tailPos":9082,"headPos":9063,"goalsBefore":["case hi.mk.mk\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Tree Unit\n⊢ a ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬a ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\n⊢ nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)","case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\n⊢ node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"content":"cases' a with a l r"},{"tailPos":9089,"headPos":9087,"goalsBefore":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\n⊢ nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)","case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\n⊢ node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\n⊢ nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"content":"·"},{"tailPos":9097,"headPos":9090,"goalsBefore":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\n⊢ nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh✝ : (i, j) ≠ (i', j')\nh : nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\n⊢ ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"content":"intro h"},{"tailPos":9098,"headPos":9097,"goalsBefore":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh✝ : (i, j) ≠ (i', j')\nh : nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\n⊢ ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh✝ : (i, j) ≠ (i', j')\nh : nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\n⊢ ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"content":";"},{"tailPos":9108,"headPos":9099,"goalsBefore":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh✝ : (i, j) ≠ (i', j')\nh : nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\n⊢ ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":[],"content":"simp at h"},{"tailPos":9108,"headPos":9090,"goalsBefore":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\n⊢ nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":[],"content":"intro h; simp at h"},{"tailPos":9108,"headPos":9087,"goalsBefore":["case hi.mk.mk.nil\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\n⊢ nil ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬nil ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)","case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\n⊢ node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\n⊢ node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"content":"· intro h; simp at h"},{"tailPos":9115,"headPos":9113,"goalsBefore":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\n⊢ node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\n⊢ node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"content":"·"},{"tailPos":9127,"headPos":9116,"goalsBefore":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\n⊢ node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ False"],"content":"intro h1 h2"},{"tailPos":9141,"headPos":9134,"goalsBefore":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ False"],"goalsAfter":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (i, j) = (i', j')"],"content":"apply h"},{"tailPos":9178,"headPos":9148,"goalsBefore":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (i, j) = (i', j')"],"goalsAfter":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (i, j) = (numNodes l, numNodes r)","n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (numNodes l, numNodes r) = (i', j')"],"content":"trans (numNodes l, numNodes r)"},{"tailPos":9187,"headPos":9185,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (i, j) = (numNodes l, numNodes r)","n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (numNodes l, numNodes r) = (i', j')"],"goalsAfter":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (i, j) = (numNodes l, numNodes r)"],"content":"·"},{"tailPos":9198,"headPos":9188,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (i, j) = (numNodes l, numNodes r)"],"goalsAfter":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\nh1 : numNodes l = i ∧ numNodes r = j\n⊢ (i, j) = (numNodes l, numNodes r)"],"content":"simp at h1"},{"tailPos":9199,"headPos":9198,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\nh1 : numNodes l = i ∧ numNodes r = j\n⊢ (i, j) = (numNodes l, numNodes r)"],"goalsAfter":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\nh1 : numNodes l = i ∧ numNodes r = j\n⊢ (i, j) = (numNodes l, numNodes r)"],"content":";"},{"tailPos":9209,"headPos":9200,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\nh1 : numNodes l = i ∧ numNodes r = j\n⊢ (i, j) = (numNodes l, numNodes r)"],"goalsAfter":[],"content":"simp [h1]"},{"tailPos":9209,"headPos":9188,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (i, j) = (numNodes l, numNodes r)"],"goalsAfter":[],"content":"simp at h1; simp [h1]"},{"tailPos":9209,"headPos":9185,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (i, j) = (numNodes l, numNodes r)","n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (numNodes l, numNodes r) = (i', j')"],"goalsAfter":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (numNodes l, numNodes r) = (i', j')"],"content":"· simp at h1; simp [h1]"},{"tailPos":9218,"headPos":9216,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (numNodes l, numNodes r) = (i', j')"],"goalsAfter":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (numNodes l, numNodes r) = (i', j')"],"content":"·"},{"tailPos":9229,"headPos":9219,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (numNodes l, numNodes r) = (i', j')"],"goalsAfter":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : numNodes l = i' ∧ numNodes r = j'\n⊢ (numNodes l, numNodes r) = (i', j')"],"content":"simp at h2"},{"tailPos":9230,"headPos":9229,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : numNodes l = i' ∧ numNodes r = j'\n⊢ (numNodes l, numNodes r) = (i', j')"],"goalsAfter":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : numNodes l = i' ∧ numNodes r = j'\n⊢ (numNodes l, numNodes r) = (i', j')"],"content":";"},{"tailPos":9240,"headPos":9231,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : numNodes l = i' ∧ numNodes r = j'\n⊢ (numNodes l, numNodes r) = (i', j')"],"goalsAfter":[],"content":"simp [h2]"},{"tailPos":9240,"headPos":9219,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (numNodes l, numNodes r) = (i', j')"],"goalsAfter":[],"content":"simp at h2; simp [h2]"},{"tailPos":9240,"headPos":9216,"goalsBefore":["n : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\nh1 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd)\nh2 : node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)\n⊢ (numNodes l, numNodes r) = (i', j')"],"goalsAfter":[],"content":"· simp at h2; simp [h2]"},{"tailPos":9240,"headPos":9116,"goalsBefore":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\n⊢ node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":[],"content":"intro h1 h2\n      apply h\n      trans (numNodes l, numNodes r)\n      · simp at h1; simp [h1]\n      · simp at h2; simp [h2]"},{"tailPos":9240,"headPos":9113,"goalsBefore":["case hi.mk.mk.node\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\ni j : ℕ\na✝¹ : (i, j) ∈ Nat.antidiagonal n\ni' j' : ℕ\na✝ : (i', j') ∈ Nat.antidiagonal n\nh : (i, j) ≠ (i', j')\na : Unit\nl r : Tree Unit\n⊢ node a l r ∈ pairwiseNode (treesOfNumNodesEq (i, j).fst) (treesOfNumNodesEq (i, j).snd) →\n    ¬node a l r ∈ pairwiseNode (treesOfNumNodesEq (i', j').fst) (treesOfNumNodesEq (i', j').snd)"],"goalsAfter":[],"content":"· intro h1 h2\n      apply h\n      trans (numNodes l, numNodes r)\n      · simp at h1; simp [h1]\n      · simp at h2; simp [h2]"},{"tailPos":9240,"headPos":8940,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":[],"content":"simp_rw [disjoint_left]\n    rintro ⟨i, j⟩ _ ⟨i', j'⟩ _\n    -- Porting note: was clear * -; tidy\n    intros h a\n    cases' a with a l r\n    · intro h; simp at h\n    · intro h1 h2\n      apply h\n      trans (numNodes l, numNodes r)\n      · simp at h1; simp [h1]\n      · simp at h2; simp [h2]"},{"tailPos":9240,"headPos":8937,"goalsBefore":["case hi\nn : ℕ\nih : ∀ (m : ℕ), m ≤ n → card (treesOfNumNodesEq m) = catalan m\n⊢ ∀ (x : ℕ × ℕ),\n    x ∈ Nat.antidiagonal n →\n      ∀ (y : ℕ × ℕ),\n        y ∈ Nat.antidiagonal n →\n          x ≠ y →\n            Disjoint (pairwiseNode (treesOfNumNodesEq x.fst) (treesOfNumNodesEq x.snd))\n              (pairwiseNode (treesOfNumNodesEq y.fst) (treesOfNumNodesEq y.snd))"],"goalsAfter":[],"content":"· simp_rw [disjoint_left]\n    rintro ⟨i, j⟩ _ ⟨i', j'⟩ _\n    -- Porting note: was clear * -; tidy\n    intros h a\n    cases' a with a l r\n    · intro h; simp at h\n    · intro h1 h2\n      apply h\n      trans (numNodes l, numNodes r)\n      · simp at h1; simp [h1]\n      · simp at h2; simp [h2]"},{"tailPos":9240,"headPos":8693,"goalsBefore":["n : ℕ\n⊢ card (treesOfNumNodesEq n) = catalan n"],"goalsAfter":[],"content":"induction' n using Nat.case_strong_induction_on with n ih\n  · simp\n  rw [treesOfNumNodesEq_succ, card_biUnion, catalan_succ']\n  · apply sum_congr rfl\n    rintro ⟨i, j⟩ H\n    rw [card_map, card_product, ih _ (fst_le H), ih _ (snd_le H)]\n  · simp_rw [disjoint_left]\n    rintro ⟨i, j⟩ _ ⟨i', j'⟩ _\n    -- Porting note: was clear * -; tidy\n    intros h a\n    cases' a with a l r\n    · intro h; simp at h\n    · intro h1 h2\n      apply h\n      trans (numNodes l, numNodes r)\n      · simp at h1; simp [h1]\n      · simp at h2; simp [h2]"},{"tailPos":8690,"headPos":8688,"goalsBefore":["n : ℕ\n⊢ card (treesOfNumNodesEq n) = catalan n"],"goalsAfter":[],"content":"by"},{"tailPos":9240,"headPos":8688,"goalsBefore":["n : ℕ\n⊢ card (treesOfNumNodesEq n) = catalan n"],"goalsAfter":[],"content":"by\n  induction' n using Nat.case_strong_induction_on with n ih\n  · simp\n  rw [treesOfNumNodesEq_succ, card_biUnion, catalan_succ']\n  · apply sum_congr rfl\n    rintro ⟨i, j⟩ H\n    rw [card_map, card_product, ih _ (fst_le H), ih _ (snd_le H)]\n  · simp_rw [disjoint_left]\n    rintro ⟨i, j⟩ _ ⟨i', j'⟩ _\n    -- Porting note: was clear * -; tidy\n    intros h a\n    cases' a with a l r\n    · intro h; simp at h\n    · intro h1 h2\n      apply h\n      trans (numNodes l, numNodes r)\n      · simp at h1; simp [h1]\n      · simp at h2; simp [h2]"}]