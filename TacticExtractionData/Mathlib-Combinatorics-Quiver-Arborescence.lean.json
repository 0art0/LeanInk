[{"tailPos":3016,"headPos":2940,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ Nonempty (Path r b)"],"goalsAfter":["case intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nn : ℕ\nhn : height b < n\n⊢ Nonempty (Path r b)"],"content":"rcases show ∃ n, height b < n from ⟨_, Nat.lt.base _⟩ with ⟨n, hn⟩"},{"tailPos":3060,"headPos":3023,"goalsBefore":["case intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nn : ℕ\nhn : height b < n\n⊢ Nonempty (Path r b)"],"goalsAfter":["case intro.zero\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn : ℕ\nhn✝ : height b✝ < n\nb : V\nhn : height b < Nat.zero\n⊢ Nonempty (Path r b)","case intro.succ\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\n⊢ Nonempty (Path r b)"],"content":"induction' n with n ih generalizing b"},{"tailPos":3069,"headPos":3067,"goalsBefore":["case intro.zero\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn : ℕ\nhn✝ : height b✝ < n\nb : V\nhn : height b < Nat.zero\n⊢ Nonempty (Path r b)","case intro.succ\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\n⊢ Nonempty (Path r b)"],"goalsAfter":["case intro.zero\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn : ℕ\nhn✝ : height b✝ < n\nb : V\nhn : height b < Nat.zero\n⊢ Nonempty (Path r b)"],"content":"·"},{"tailPos":3109,"headPos":3070,"goalsBefore":["case intro.zero\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn : ℕ\nhn✝ : height b✝ < n\nb : V\nhn : height b < Nat.zero\n⊢ Nonempty (Path r b)"],"goalsAfter":[],"content":"exact False.elim (Nat.not_lt_zero _ hn)"},{"tailPos":3109,"headPos":3067,"goalsBefore":["case intro.zero\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn : ℕ\nhn✝ : height b✝ < n\nb : V\nhn : height b < Nat.zero\n⊢ Nonempty (Path r b)","case intro.succ\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\n⊢ Nonempty (Path r b)"],"goalsAfter":["case intro.succ\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\n⊢ Nonempty (Path r b)"],"content":"· exact False.elim (Nat.not_lt_zero _ hn)"},{"tailPos":3177,"headPos":3116,"goalsBefore":["case intro.succ\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\n⊢ Nonempty (Path r b)"],"goalsAfter":["case intro.succ.inl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nn✝ : ℕ\nhn✝ : height b < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nhn : height r < Nat.succ n\n⊢ Nonempty (Path r r)","case intro.succ.inr.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\n⊢ Nonempty (Path r b)"],"content":"rcases root_or_arrow b with (⟨⟨⟩⟩ | ⟨a, ⟨e⟩⟩)"},{"tailPos":3186,"headPos":3184,"goalsBefore":["case intro.succ.inl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nn✝ : ℕ\nhn✝ : height b < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nhn : height r < Nat.succ n\n⊢ Nonempty (Path r r)","case intro.succ.inr.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\n⊢ Nonempty (Path r b)"],"goalsAfter":["case intro.succ.inl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nn✝ : ℕ\nhn✝ : height b < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nhn : height r < Nat.succ n\n⊢ Nonempty (Path r r)"],"content":"·"},{"tailPos":3207,"headPos":3187,"goalsBefore":["case intro.succ.inl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nn✝ : ℕ\nhn✝ : height b < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nhn : height r < Nat.succ n\n⊢ Nonempty (Path r r)"],"goalsAfter":[],"content":"exact ⟨Path.nil⟩"},{"tailPos":3207,"headPos":3184,"goalsBefore":["case intro.succ.inl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nn✝ : ℕ\nhn✝ : height b < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nhn : height r < Nat.succ n\n⊢ Nonempty (Path r r)","case intro.succ.inr.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\n⊢ Nonempty (Path r b)"],"goalsAfter":["case intro.succ.inr.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\n⊢ Nonempty (Path r b)"],"content":"· exact ⟨Path.nil⟩"},{"tailPos":3216,"headPos":3214,"goalsBefore":["case intro.succ.inr.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\n⊢ Nonempty (Path r b)"],"goalsAfter":["case intro.succ.inr.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\n⊢ Nonempty (Path r b)"],"content":"·"},{"tailPos":3296,"headPos":3217,"goalsBefore":["case intro.succ.inr.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\n⊢ Nonempty (Path r b)"],"goalsAfter":["case intro.succ.inr.intro.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\np : Path r a\n⊢ Nonempty (Path r b)"],"content":"rcases ih a (lt_of_lt_of_le (height_lt e) (Nat.lt_succ_iff.mp hn)) with ⟨p⟩"},{"tailPos":3325,"headPos":3305,"goalsBefore":["case intro.succ.inr.intro.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\np : Path r a\n⊢ Nonempty (Path r b)"],"goalsAfter":[],"content":"exact ⟨p.cons e⟩"},{"tailPos":3325,"headPos":3217,"goalsBefore":["case intro.succ.inr.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\n⊢ Nonempty (Path r b)"],"goalsAfter":[],"content":"rcases ih a (lt_of_lt_of_le (height_lt e) (Nat.lt_succ_iff.mp hn)) with ⟨p⟩\n        exact ⟨p.cons e⟩"},{"tailPos":3325,"headPos":3214,"goalsBefore":["case intro.succ.inr.intro.intro\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nn✝ : ℕ\nhn✝ : height b✝ < n✝\nn : ℕ\nih : ∀ (b : V), height b < n → Nonempty (Path r b)\nb : V\nhn : height b < Nat.succ n\na : V\ne : a ⟶ b\n⊢ Nonempty (Path r b)"],"goalsAfter":[],"content":"· rcases ih a (lt_of_lt_of_le (height_lt e) (Nat.lt_succ_iff.mp hn)) with ⟨p⟩\n        exact ⟨p.cons e⟩"},{"tailPos":3325,"headPos":2940,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ Nonempty (Path r b)"],"goalsAfter":[],"content":"rcases show ∃ n, height b < n from ⟨_, Nat.lt.base _⟩ with ⟨n, hn⟩\n      induction' n with n ih generalizing b\n      · exact False.elim (Nat.not_lt_zero _ hn)\n      rcases root_or_arrow b with (⟨⟨⟩⟩ | ⟨a, ⟨e⟩⟩)\n      · exact ⟨Path.nil⟩\n      · rcases ih a (lt_of_lt_of_le (height_lt e) (Nat.lt_succ_iff.mp hn)) with ⟨p⟩\n        exact ⟨p.cons e⟩"},{"tailPos":2933,"headPos":2931,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ Nonempty (Path r b)"],"goalsAfter":[],"content":"by"},{"tailPos":3325,"headPos":2931,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ Nonempty (Path r b)"],"goalsAfter":[],"content":"by\n      rcases show ∃ n, height b < n from ⟨_, Nat.lt.base _⟩ with ⟨n, hn⟩\n      induction' n with n ih generalizing b\n      · exact False.elim (Nat.not_lt_zero _ hn)\n      rcases root_or_arrow b with (⟨⟨⟩⟩ | ⟨a, ⟨e⟩⟩)\n      · exact ⟨Path.nil⟩\n      · rcases ih a (lt_of_lt_of_le (height_lt e) (Nat.lt_succ_iff.mp hn)) with ⟨p⟩\n        exact ⟨p.cons e⟩"},{"tailPos":3425,"headPos":3414,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ ∀ {a b : V}, Path a b → height a ≤ height b"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ a b : V\np : Path a b\n⊢ height a ≤ height b"],"content":"intro a b p"},{"tailPos":3462,"headPos":3434,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ a b : V\np : Path a b\n⊢ height a ≤ height b"],"goalsAfter":["case nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ a b : V\n⊢ height a ≤ height a","case cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝¹ a b✝ b c : V\na✝ : Path a b\ne : b ⟶ c\nih : height a ≤ height b\n⊢ height a ≤ height c"],"content":"induction' p with b c _ e ih"},{"tailPos":3474,"headPos":3471,"goalsBefore":["case nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ a b : V\n⊢ height a ≤ height a","case cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝¹ a b✝ b c : V\na✝ : Path a b\ne : b ⟶ c\nih : height a ≤ height b\n⊢ height a ≤ height c"],"goalsAfter":["case cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝¹ a b✝ b c : V\na✝ : Path a b\ne : b ⟶ c\nih : height a ≤ height b\n⊢ height a ≤ height c"],"content":"rfl"},{"tailPos":3531,"headPos":3483,"goalsBefore":["case cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝¹ a b✝ b c : V\na✝ : Path a b\ne : b ⟶ c\nih : height a ≤ height b\n⊢ height a ≤ height c"],"goalsAfter":[],"content":"exact le_of_lt (lt_of_le_of_lt ih (height_lt e))"},{"tailPos":3531,"headPos":3414,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ ∀ {a b : V}, Path a b → height a ≤ height b"],"goalsAfter":[],"content":"intro a b p\n        induction' p with b c _ e ih\n        rfl\n        exact le_of_lt (lt_of_le_of_lt ih (height_lt e))"},{"tailPos":3405,"headPos":3403,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ ∀ {a b : V}, Path a b → height a ≤ height b"],"goalsAfter":[],"content":"by"},{"tailPos":3531,"headPos":3403,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ ∀ {a b : V}, Path a b → height a ≤ height b"],"goalsAfter":[],"content":"by\n        intro a b p\n        induction' p with b c _ e ih\n        rfl\n        exact le_of_lt (lt_of_le_of_lt ih (height_lt e))"},{"tailPos":3531,"headPos":3337,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ ∀ (a : Path r b), a = default"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\n⊢ ∀ (a : Path r b), a = default"],"content":"have height_le : ∀ {a b}, Path a b → height a ≤ height b := by\n        intro a b p\n        induction' p with b c _ e ih\n        rfl\n        exact le_of_lt (lt_of_le_of_lt ih (height_lt e))"},{"tailPos":3591,"headPos":3584,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nthis : ∀ (p q : Path r b), p = q\n⊢ ∀ (a : Path r b), a = default"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nthis : ∀ (p q : Path r b), p = q\np : Path r b\n⊢ p = default"],"content":"intro p"},{"tailPos":3610,"headPos":3600,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nthis : ∀ (p q : Path r b), p = q\np : Path r b\n⊢ p = default"],"goalsAfter":[],"content":"apply this"},{"tailPos":3610,"headPos":3584,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nthis : ∀ (p q : Path r b), p = q\n⊢ ∀ (a : Path r b), a = default"],"goalsAfter":[],"content":"intro p\n        apply this"},{"tailPos":3610,"headPos":3538,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\n⊢ ∀ (a : Path r b), a = default"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\n⊢ ∀ (p q : Path r b), p = q"],"content":"suffices ∀ p q : Path r b, p = q by\n        intro p\n        apply this"},{"tailPos":3626,"headPos":3617,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\n⊢ ∀ (p q : Path r b), p = q"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\np q : Path r b\n⊢ p = q"],"content":"intro p q"},{"tailPos":3661,"headPos":3633,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\np q : Path r b\n⊢ p = q"],"goalsAfter":["case nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\nq : Path r r\n⊢ Path.nil = q","case cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r c\n⊢ Path.cons p e = q"],"content":"induction' p with a c p e ih"},{"tailPos":3665,"headPos":3662,"goalsBefore":["case nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\nq : Path r r\n⊢ Path.nil = q","case cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r c\n⊢ Path.cons p e = q"],"goalsAfter":["case nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\nq : Path r r\n⊢ Path.nil = q","case cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r c\n⊢ Path.cons p e = q"],"content":"<;>"},{"tailPos":3687,"headPos":3666,"goalsBefore":["case nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\nq : Path r r\n⊢ Path.nil = q"],"goalsAfter":["case nil.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\n⊢ Path.nil = Path.nil","case nil.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\nb : V\nq : Path r b\nf : b ⟶ r\n⊢ Path.nil = Path.cons q f"],"content":"cases' q with b _ q f"},{"tailPos":3687,"headPos":3666,"goalsBefore":["case cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r c\n⊢ Path.cons p e = q"],"goalsAfter":["case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"content":"cases' q with b _ q f"},{"tailPos":3687,"headPos":3633,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\np q : Path r b\n⊢ p = q"],"goalsAfter":["case nil.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\n⊢ Path.nil = Path.nil","case nil.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\nb : V\nq : Path r b\nf : b ⟶ r\n⊢ Path.nil = Path.cons q f","case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"content":"induction' p with a c p e ih <;> cases' q with b _ q f"},{"tailPos":3696,"headPos":3694,"goalsBefore":["case nil.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\n⊢ Path.nil = Path.nil","case nil.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\nb : V\nq : Path r b\nf : b ⟶ r\n⊢ Path.nil = Path.cons q f","case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":["case nil.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\n⊢ Path.nil = Path.nil"],"content":"·"},{"tailPos":3700,"headPos":3697,"goalsBefore":["case nil.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\n⊢ Path.nil = Path.nil"],"goalsAfter":[],"content":"rfl"},{"tailPos":3700,"headPos":3694,"goalsBefore":["case nil.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\n⊢ Path.nil = Path.nil","case nil.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\nb : V\nq : Path r b\nf : b ⟶ r\n⊢ Path.nil = Path.cons q f","case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":["case nil.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\nb : V\nq : Path r b\nf : b ⟶ r\n⊢ Path.nil = Path.cons q f","case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"content":"· rfl"},{"tailPos":3709,"headPos":3707,"goalsBefore":["case nil.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\nb : V\nq : Path r b\nf : b ⟶ r\n⊢ Path.nil = Path.cons q f","case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":["case nil.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\nb : V\nq : Path r b\nf : b ⟶ r\n⊢ Path.nil = Path.cons q f"],"content":"·"},{"tailPos":3785,"headPos":3710,"goalsBefore":["case nil.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\nb : V\nq : Path r b\nf : b ⟶ r\n⊢ Path.nil = Path.cons q f"],"goalsAfter":[],"content":"exact False.elim (lt_irrefl _ (lt_of_le_of_lt (height_le q) (height_lt f)))"},{"tailPos":3785,"headPos":3707,"goalsBefore":["case nil.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\nb : V\nq : Path r b\nf : b ⟶ r\n⊢ Path.nil = Path.cons q f","case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":["case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"content":"· exact False.elim (lt_irrefl _ (lt_of_le_of_lt (height_le q) (height_lt f)))"},{"tailPos":3794,"headPos":3792,"goalsBefore":["case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":["case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil"],"content":"·"},{"tailPos":3870,"headPos":3795,"goalsBefore":["case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil"],"goalsAfter":[],"content":"exact False.elim (lt_irrefl _ (lt_of_le_of_lt (height_le p) (height_lt e)))"},{"tailPos":3870,"headPos":3792,"goalsBefore":["case cons.nil\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq : Path r b\na : V\np : Path r a\nih : ∀ (q : Path r a), p = q\ne : a ⟶ r\n⊢ Path.cons p e = Path.nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":["case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"content":"· exact False.elim (lt_irrefl _ (lt_of_le_of_lt (height_le p) (height_lt e)))"},{"tailPos":3879,"headPos":3877,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":["case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"content":"·"},{"tailPos":3929,"headPos":3880,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":["case cons.cons.intro.refl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r a\nβ : Sort ?u.244\n⊢ Path.cons p e = Path.cons q e"],"content":"rcases unique_arrow e f with ⟨⟨⟩, ⟨⟩⟩"},{"tailPos":3944,"headPos":3942,"goalsBefore":["case cons.cons.intro.refl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r a\nβ : Sort ?u.244\n⊢ Path.cons p e = Path.cons q e"],"goalsAfter":["case cons.cons.intro.refl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r a\nβ : Sort ?u.244\n⊢ Path.cons ?cons.cons.intro.refl.refl e = Path.cons q e","case cons.cons.intro.refl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r a\nβ : Sort ?u.244\n⊢ Path r a"],"content":"ih"},{"tailPos":3945,"headPos":3944,"goalsBefore":["case cons.cons.intro.refl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r a\nβ : Sort ?u.244\n⊢ Path.cons ?cons.cons.intro.refl.refl e = Path.cons q e","case cons.cons.intro.refl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r a\nβ : Sort ?u.244\n⊢ Path r a"],"goalsAfter":[],"content":"]"},{"tailPos":3945,"headPos":3938,"goalsBefore":["case cons.cons.intro.refl.refl\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nq : Path r a\nβ : Sort ?u.244\n⊢ Path.cons p e = Path.cons q e"],"goalsAfter":[],"content":"rw [ih]"},{"tailPos":3945,"headPos":3880,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":[],"content":"rcases unique_arrow e f with ⟨⟨⟩, ⟨⟩⟩\n        rw [ih]"},{"tailPos":3945,"headPos":3877,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb✝ : V\nheight_le : ∀ {a b : V}, Path a b → height a ≤ height b\nq✝ : Path r b✝\na c : V\np : Path r a\ne : a ⟶ c\nih : ∀ (q : Path r a), p = q\nb : V\nq : Path r b\nf : b ⟶ c\n⊢ Path.cons p e = Path.cons q f"],"goalsAfter":[],"content":"· rcases unique_arrow e f with ⟨⟨⟩, ⟨⟩⟩\n        rw [ih]"},{"tailPos":3945,"headPos":3337,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ ∀ (a : Path r b), a = default"],"goalsAfter":[],"content":"have height_le : ∀ {a b}, Path a b → height a ≤ height b := by\n        intro a b p\n        induction' p with b c _ e ih\n        rfl\n        exact le_of_lt (lt_of_le_of_lt ih (height_lt e))\n      suffices ∀ p q : Path r b, p = q by\n        intro p\n        apply this\n      intro p q\n      induction' p with a c p e ih <;> cases' q with b _ q f\n      · rfl\n      · exact False.elim (lt_irrefl _ (lt_of_le_of_lt (height_le q) (height_lt f)))\n      · exact False.elim (lt_irrefl _ (lt_of_le_of_lt (height_le p) (height_lt e)))\n      · rcases unique_arrow e f with ⟨⟨⟩, ⟨⟩⟩\n        rw [ih]"},{"tailPos":3330,"headPos":3328,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ ∀ (a : Path r b), a = default"],"goalsAfter":[],"content":"by"},{"tailPos":3945,"headPos":3328,"goalsBefore":["V : Type u\ninst✝ : Quiver V\nr : V\nheight : V → ℕ\nheight_lt : ∀ ⦃a b : V⦄, (a ⟶ b) → height a < height b\nunique_arrow : ∀ ⦃a b c : V⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f\nroot_or_arrow : ∀ (b : V), b = r ∨ ∃ a, Nonempty (a ⟶ b)\nb : V\n⊢ ∀ (a : Path r b), a = default"],"goalsAfter":[],"content":"by\n      have height_le : ∀ {a b}, Path a b → height a ≤ height b := by\n        intro a b p\n        induction' p with b c _ e ih\n        rfl\n        exact le_of_lt (lt_of_le_of_lt ih (height_lt e))\n      suffices ∀ p q : Path r b, p = q by\n        intro p\n        apply this\n      intro p q\n      induction' p with a c p e ih <;> cases' q with b _ q f\n      · rfl\n      · exact False.elim (lt_irrefl _ (lt_of_le_of_lt (height_le q) (height_lt f)))\n      · exact False.elim (lt_irrefl _ (lt_of_le_of_lt (height_le p) (height_lt e)))\n      · rcases unique_arrow e f with ⟨⟨⟩, ⟨⟩⟩\n        rw [ih]"},{"tailPos":5315,"headPos":5291,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ ⦃a b : WideSubquiver.toType V (geodesicSubtree r)⦄,\n    (a ⟶ b) → (fun a => Path.length (shortestPath r a)) a < (fun a => Path.length (shortestPath r a)) b"],"goalsAfter":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ (fun a => Path.length (shortestPath r a)) a < (fun a => Path.length (shortestPath r a)) b"],"content":"rintro a b ⟨e, p, h⟩"},{"tailPos":5331,"headPos":5322,"goalsBefore":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) < Path.length (shortestPath r b)"],"goalsAfter":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) < Path.length (shortestPath r b)"],"content":"simp_rw ["},{"tailPos":5333,"headPos":5331,"goalsBefore":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) < Path.length (shortestPath r b)"],"goalsAfter":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) < Path.length (Path.cons p e)"],"content":"h,"},{"tailPos":5351,"headPos":5334,"goalsBefore":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) < Path.length (Path.cons p e)"],"goalsAfter":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) < Path.length p + 1"],"content":"Path.length_cons,"},{"tailPos":5367,"headPos":5352,"goalsBefore":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) < Path.length p + 1"],"goalsAfter":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) ≤ Path.length p"],"content":"simp only [Nat.lt_succ_iff]"},{"tailPos":5368,"headPos":5322,"goalsBefore":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ (fun a => Path.length (shortestPath r a)) a < (fun a => Path.length (shortestPath r a)) b"],"goalsAfter":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) ≤ Path.length p"],"content":"simp_rw [h, Path.length_cons, Nat.lt_succ_iff]"},{"tailPos":5399,"headPos":5375,"goalsBefore":["case mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ b\np : Path r a\nh : shortestPath r b = Path.cons p e\n⊢ Path.length (shortestPath r a) ≤ Path.length p"],"goalsAfter":[],"content":"apply shortest_path_spec"},{"tailPos":5399,"headPos":5291,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ ⦃a b : WideSubquiver.toType V (geodesicSubtree r)⦄,\n    (a ⟶ b) → (fun a => Path.length (shortestPath r a)) a < (fun a => Path.length (shortestPath r a)) b"],"goalsAfter":[],"content":"rintro a b ⟨e, p, h⟩\n      simp_rw [h, Path.length_cons, Nat.lt_succ_iff]\n      apply shortest_path_spec"},{"tailPos":5284,"headPos":5282,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ ⦃a b : WideSubquiver.toType V (geodesicSubtree r)⦄,\n    (a ⟶ b) → (fun a => Path.length (shortestPath r a)) a < (fun a => Path.length (shortestPath r a)) b"],"goalsAfter":[],"content":"by"},{"tailPos":5399,"headPos":5282,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ ⦃a b : WideSubquiver.toType V (geodesicSubtree r)⦄,\n    (a ⟶ b) → (fun a => Path.length (shortestPath r a)) a < (fun a => Path.length (shortestPath r a)) b"],"goalsAfter":[],"content":"by\n      rintro a b ⟨e, p, h⟩\n      simp_rw [h, Path.length_cons, Nat.lt_succ_iff]\n      apply shortest_path_spec"},{"tailPos":5455,"headPos":5415,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ ⦃a b c : WideSubquiver.toType V (geodesicSubtree r)⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f"],"goalsAfter":["case mk.intro.mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh : shortestPath r c = Path.cons p e\nf : b ⟶ c\nq : Path r b\nj : shortestPath r c = Path.cons q f\n⊢ a = b ∧\n    HEq { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }\n      { val := f, property := (_ : ∃ p, shortestPath r c = Path.cons p f) }"],"content":"rintro a b c ⟨e, p, h⟩ ⟨f, q, j⟩"},{"tailPos":5482,"headPos":5462,"goalsBefore":["case mk.intro.mk.intro\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na b c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh : shortestPath r c = Path.cons p e\nf : b ⟶ c\nq : Path r b\nj : shortestPath r c = Path.cons q f\n⊢ a = b ∧\n    HEq { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }\n      { val := f, property := (_ : ∃ p, shortestPath r c = Path.cons p f) }"],"goalsAfter":["case mk.intro.mk.intro.refl\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ a = a ∧\n    HEq { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }\n      { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }"],"content":"cases h.symm.trans j"},{"tailPos":5500,"headPos":5489,"goalsBefore":["case mk.intro.mk.intro.refl\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ a = a ∧\n    HEq { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }\n      { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }"],"goalsAfter":["case mk.intro.mk.intro.refl.left\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ a = a","case mk.intro.mk.intro.refl.right\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ HEq { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }\n    { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }"],"content":"constructor"},{"tailPos":5504,"headPos":5501,"goalsBefore":["case mk.intro.mk.intro.refl.left\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ a = a","case mk.intro.mk.intro.refl.right\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ HEq { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }\n    { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }"],"goalsAfter":["case mk.intro.mk.intro.refl.left\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ a = a","case mk.intro.mk.intro.refl.right\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ HEq { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }\n    { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }"],"content":"<;>"},{"tailPos":5508,"headPos":5505,"goalsBefore":["case mk.intro.mk.intro.refl.left\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ a = a"],"goalsAfter":[],"content":"rfl"},{"tailPos":5508,"headPos":5505,"goalsBefore":["case mk.intro.mk.intro.refl.right\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ HEq { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }\n    { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }"],"goalsAfter":[],"content":"rfl"},{"tailPos":5508,"headPos":5489,"goalsBefore":["case mk.intro.mk.intro.refl\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\na c : WideSubquiver.toType V (geodesicSubtree r)\ne : a ⟶ c\np : Path r a\nh j : shortestPath r c = Path.cons p e\n⊢ a = a ∧\n    HEq { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }\n      { val := e, property := (_ : ∃ p, shortestPath r c = Path.cons p e) }"],"goalsAfter":[],"content":"constructor <;> rfl"},{"tailPos":5508,"headPos":5415,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ ⦃a b c : WideSubquiver.toType V (geodesicSubtree r)⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f"],"goalsAfter":[],"content":"rintro a b c ⟨e, p, h⟩ ⟨f, q, j⟩\n      cases h.symm.trans j\n      constructor <;> rfl"},{"tailPos":5408,"headPos":5406,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ ⦃a b c : WideSubquiver.toType V (geodesicSubtree r)⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f"],"goalsAfter":[],"content":"by"},{"tailPos":5508,"headPos":5406,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ ⦃a b c : WideSubquiver.toType V (geodesicSubtree r)⦄ (e : a ⟶ c) (f : b ⟶ c), a = b ∧ HEq e f"],"goalsAfter":[],"content":"by\n      rintro a b c ⟨e, p, h⟩ ⟨f, q, j⟩\n      cases h.symm.trans j\n      constructor <;> rfl"},{"tailPos":5531,"headPos":5524,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ (b : WideSubquiver.toType V (geodesicSubtree r)), b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"content":"intro b"},{"tailPos":5588,"headPos":5538,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":["case nil\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nhp : shortestPath r r = Path.nil\n⊢ r = r ∨ ∃ a, Nonempty (a ⟶ r)","case cons\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\nb✝ : V\np : Path r b✝\ne : b✝ ⟶ b\nhp : shortestPath r b = Path.cons p e\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"content":"rcases hp : shortestPath r b with (_ | ⟨p, e⟩)"},{"tailPos":5597,"headPos":5595,"goalsBefore":["case nil\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nhp : shortestPath r r = Path.nil\n⊢ r = r ∨ ∃ a, Nonempty (a ⟶ r)","case cons\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\nb✝ : V\np : Path r b✝\ne : b✝ ⟶ b\nhp : shortestPath r b = Path.cons p e\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":["case nil\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nhp : shortestPath r r = Path.nil\n⊢ r = r ∨ ∃ a, Nonempty (a ⟶ r)"],"content":"·"},{"tailPos":5614,"headPos":5598,"goalsBefore":["case nil\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nhp : shortestPath r r = Path.nil\n⊢ r = r ∨ ∃ a, Nonempty (a ⟶ r)"],"goalsAfter":[],"content":"exact Or.inl rfl"},{"tailPos":5614,"headPos":5595,"goalsBefore":["case nil\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nhp : shortestPath r r = Path.nil\n⊢ r = r ∨ ∃ a, Nonempty (a ⟶ r)","case cons\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\nb✝ : V\np : Path r b✝\ne : b✝ ⟶ b\nhp : shortestPath r b = Path.cons p e\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":["case cons\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\nb✝ : V\np : Path r b✝\ne : b✝ ⟶ b\nhp : shortestPath r b = Path.cons p e\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"content":"· exact Or.inl rfl"},{"tailPos":5623,"headPos":5621,"goalsBefore":["case cons\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\nb✝ : V\np : Path r b✝\ne : b✝ ⟶ b\nhp : shortestPath r b = Path.cons p e\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":["case cons\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\nb✝ : V\np : Path r b✝\ne : b✝ ⟶ b\nhp : shortestPath r b = Path.cons p e\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"content":"·"},{"tailPos":5666,"headPos":5624,"goalsBefore":["case cons\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\nb✝ : V\np : Path r b✝\ne : b✝ ⟶ b\nhp : shortestPath r b = Path.cons p e\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":[],"content":"exact Or.inr ⟨_, ⟨⟨e, p, hp⟩⟩⟩"},{"tailPos":5666,"headPos":5621,"goalsBefore":["case cons\nV : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\nb : WideSubquiver.toType V (geodesicSubtree r)\nb✝ : V\np : Path r b✝\ne : b✝ ⟶ b\nhp : shortestPath r b = Path.cons p e\n⊢ b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":[],"content":"· exact Or.inr ⟨_, ⟨⟨e, p, hp⟩⟩⟩"},{"tailPos":5666,"headPos":5524,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ (b : WideSubquiver.toType V (geodesicSubtree r)), b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":[],"content":"intro b\n      rcases hp : shortestPath r b with (_ | ⟨p, e⟩)\n      · exact Or.inl rfl\n      · exact Or.inr ⟨_, ⟨⟨e, p, hp⟩⟩⟩"},{"tailPos":5517,"headPos":5515,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ (b : WideSubquiver.toType V (geodesicSubtree r)), b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":[],"content":"by"},{"tailPos":5666,"headPos":5515,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\nr : V\ninst✝ : RootedConnected r\n⊢ ∀ (b : WideSubquiver.toType V (geodesicSubtree r)), b = r ∨ ∃ a, Nonempty (a ⟶ b)"],"goalsAfter":[],"content":"by\n      intro b\n      rcases hp : shortestPath r b with (_ | ⟨p, e⟩)\n      · exact Or.inl rfl\n      · exact Or.inr ⟨_, ⟨⟨e, p, hp⟩⟩⟩"}]