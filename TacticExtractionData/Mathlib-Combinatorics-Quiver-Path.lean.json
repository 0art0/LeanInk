[{"tailPos":1476,"headPos":1465,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\ne : b ⟶ a\nh : nil = cons p e\n⊢ False"],"goalsAfter":[],"content":"injection h"},{"tailPos":1464,"headPos":1462,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\ne : b ⟶ a\nh : nil = cons p e\n⊢ False"],"goalsAfter":[],"content":"by"},{"tailPos":1476,"headPos":1462,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\ne : b ⟶ a\nh : nil = cons p e\n⊢ False"],"goalsAfter":[],"content":"by injection h"},{"tailPos":1630,"headPos":1619,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\ne : b ⟶ a\nh : cons p e = nil\n⊢ False"],"goalsAfter":[],"content":"injection h"},{"tailPos":1618,"headPos":1616,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\ne : b ⟶ a\nh : cons p e = nil\n⊢ False"],"goalsAfter":[],"content":"by"},{"tailPos":1630,"headPos":1616,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\ne : b ⟶ a\nh : cons p e = nil\n⊢ False"],"goalsAfter":[],"content":"by injection h"},{"tailPos":1831,"headPos":1820,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\np' : Path a c\ne : b ⟶ d\ne' : c ⟶ d\nh : cons p e = cons p' e'\n⊢ b = c"],"goalsAfter":[],"content":"injection h"},{"tailPos":1819,"headPos":1817,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\np' : Path a c\ne : b ⟶ d\ne' : c ⟶ d\nh : cons p e = cons p' e'\n⊢ b = c"],"goalsAfter":[],"content":"by"},{"tailPos":1831,"headPos":1817,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\np' : Path a c\ne : b ⟶ d\ne' : c ⟶ d\nh : cons p e = cons p' e'\n⊢ b = c"],"goalsAfter":[],"content":"by injection h"},{"tailPos":2054,"headPos":2043,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\np' : Path a c\ne : b ⟶ d\ne' : c ⟶ d\nh : cons p e = cons p' e'\n⊢ HEq p p'"],"goalsAfter":[],"content":"injection h"},{"tailPos":2042,"headPos":2040,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\np' : Path a c\ne : b ⟶ d\ne' : c ⟶ d\nh : cons p e = cons p' e'\n⊢ HEq p p'"],"goalsAfter":[],"content":"by"},{"tailPos":2054,"headPos":2040,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\np' : Path a c\ne : b ⟶ d\ne' : c ⟶ d\nh : cons p e = cons p' e'\n⊢ HEq p p'"],"goalsAfter":[],"content":"by injection h"},{"tailPos":2275,"headPos":2264,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\np' : Path a c\ne : b ⟶ d\ne' : c ⟶ d\nh : cons p e = cons p' e'\n⊢ HEq e e'"],"goalsAfter":[],"content":"injection h"},{"tailPos":2263,"headPos":2261,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\np' : Path a c\ne : b ⟶ d\ne' : c ⟶ d\nh : cons p e = cons p' e'\n⊢ HEq e e'"],"goalsAfter":[],"content":"by"},{"tailPos":2275,"headPos":2261,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\np' : Path a c\ne : b ⟶ d\ne' : c ⟶ d\nh : cons p e = cons p' e'\n⊢ HEq e e'"],"goalsAfter":[],"content":"by injection h"},{"tailPos":3002,"headPos":2995,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\nhzero : length p = 0\n⊢ a = b"],"goalsAfter":["case nil\nV : Type u\ninst✝ : Quiver V\na c d : V\nhzero : length nil = 0\n⊢ a = a","case cons\nV : Type u\ninst✝ : Quiver V\na b c d b✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ b\nhzero : length (cons a✝¹ a✝) = 0\n⊢ a = b"],"content":"cases p"},{"tailPos":3007,"headPos":3005,"goalsBefore":["case nil\nV : Type u\ninst✝ : Quiver V\na c d : V\nhzero : length nil = 0\n⊢ a = a","case cons\nV : Type u\ninst✝ : Quiver V\na b c d b✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ b\nhzero : length (cons a✝¹ a✝) = 0\n⊢ a = b"],"goalsAfter":["case nil\nV : Type u\ninst✝ : Quiver V\na c d : V\nhzero : length nil = 0\n⊢ a = a"],"content":"·"},{"tailPos":3011,"headPos":3008,"goalsBefore":["case nil\nV : Type u\ninst✝ : Quiver V\na c d : V\nhzero : length nil = 0\n⊢ a = a"],"goalsAfter":[],"content":"rfl"},{"tailPos":3011,"headPos":3005,"goalsBefore":["case nil\nV : Type u\ninst✝ : Quiver V\na c d : V\nhzero : length nil = 0\n⊢ a = a","case cons\nV : Type u\ninst✝ : Quiver V\na b c d b✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ b\nhzero : length (cons a✝¹ a✝) = 0\n⊢ a = b"],"goalsAfter":["case cons\nV : Type u\ninst✝ : Quiver V\na b c d b✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ b\nhzero : length (cons a✝¹ a✝) = 0\n⊢ a = b"],"content":"· rfl"},{"tailPos":3016,"headPos":3014,"goalsBefore":["case cons\nV : Type u\ninst✝ : Quiver V\na b c d b✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ b\nhzero : length (cons a✝¹ a✝) = 0\n⊢ a = b"],"goalsAfter":["case cons\nV : Type u\ninst✝ : Quiver V\na b c d b✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ b\nhzero : length (cons a✝¹ a✝) = 0\n⊢ a = b"],"content":"·"},{"tailPos":3047,"headPos":3017,"goalsBefore":["case cons\nV : Type u\ninst✝ : Quiver V\na b c d b✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ b\nhzero : length (cons a✝¹ a✝) = 0\n⊢ a = b"],"goalsAfter":[],"content":"cases Nat.succ_ne_zero _ hzero"},{"tailPos":3047,"headPos":3014,"goalsBefore":["case cons\nV : Type u\ninst✝ : Quiver V\na b c d b✝ : V\na✝¹ : Path a b✝\na✝ : b✝ ⟶ b\nhzero : length (cons a✝¹ a✝) = 0\n⊢ a = b"],"goalsAfter":[],"content":"· cases Nat.succ_ne_zero _ hzero"},{"tailPos":3047,"headPos":2995,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\nhzero : length p = 0\n⊢ a = b"],"goalsAfter":[],"content":"cases p\n  · rfl\n  · cases Nat.succ_ne_zero _ hzero"},{"tailPos":2992,"headPos":2990,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\nhzero : length p = 0\n⊢ a = b"],"goalsAfter":[],"content":"by"},{"tailPos":3047,"headPos":2990,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\nhzero : length p = 0\n⊢ a = b"],"goalsAfter":[],"content":"by\n  cases p\n  · rfl\n  · cases Nat.succ_ne_zero _ hzero"},{"tailPos":3764,"headPos":3754,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b c d a x✝ b✝ : V\np : Path a b✝\na✝ : b✝ ⟶ x✝\n⊢ comp nil (cons p a✝) = cons p a✝"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\na✝¹ b c d a x✝ b✝ : V\np : Path a b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp nil p) a✝ = cons p a✝"],"content":"comp_cons,"},{"tailPos":3775,"headPos":3765,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b c d a x✝ b✝ : V\np : Path a b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp nil p) a✝ = cons p a✝"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\na✝¹ b c d a x✝ b✝ : V\np : Path a b✝\na✝ : b✝ ⟶ x✝\n⊢ cons p a✝ = cons p a✝"],"content":"nil_comp p"},{"tailPos":3776,"headPos":3775,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b c d a x✝ b✝ : V\np : Path a b✝\na✝ : b✝ ⟶ x✝\n⊢ cons p a✝ = cons p a✝"],"goalsAfter":[],"content":"]"},{"tailPos":3776,"headPos":3750,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b c d a x✝ b✝ : V\np : Path a b✝\na✝ : b✝ ⟶ x✝\n⊢ comp nil (cons p a✝) = cons p a✝"],"goalsAfter":[],"content":"rw [comp_cons, nil_comp p]"},{"tailPos":3749,"headPos":3747,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b c d a x✝ b✝ : V\np : Path a b✝\na✝ : b✝ ⟶ x✝\n⊢ comp nil (cons p a✝) = cons p a✝"],"goalsAfter":[],"content":"by"},{"tailPos":3776,"headPos":3747,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b c d a x✝ b✝ : V\np : Path a b✝\na✝ : b✝ ⟶ x✝\n⊢ comp nil (cons p a✝) = cons p a✝"],"goalsAfter":[],"content":"by rw [comp_cons, nil_comp p]"},{"tailPos":4030,"headPos":4020,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ comp (comp p q) (cons r a✝) = comp p (comp q (cons r a✝))"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp (comp p q) r) a✝ = comp p (comp q (cons r a✝))"],"content":"comp_cons,"},{"tailPos":4041,"headPos":4031,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp (comp p q) r) a✝ = comp p (comp q (cons r a✝))"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp (comp p q) r) a✝ = comp p (cons (comp q r) a✝)"],"content":"comp_cons,"},{"tailPos":4052,"headPos":4042,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp (comp p q) r) a✝ = comp p (cons (comp q r) a✝)"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp (comp p q) r) a✝ = cons (comp p (comp q r)) a✝"],"content":"comp_cons,"},{"tailPos":4069,"headPos":4053,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp (comp p q) r) a✝ = cons (comp p (comp q r)) a✝"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp p (comp q r)) a✝ = cons (comp p (comp q r)) a✝"],"content":"comp_assoc p q r"},{"tailPos":4070,"headPos":4069,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ cons (comp p (comp q r)) a✝ = cons (comp p (comp q r)) a✝"],"goalsAfter":[],"content":"]"},{"tailPos":4070,"headPos":4016,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ comp (comp p q) (cons r a✝) = comp p (comp q (cons r a✝))"],"goalsAfter":[],"content":"rw [comp_cons, comp_cons, comp_cons, comp_assoc p q r]"},{"tailPos":4015,"headPos":4013,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ comp (comp p q) (cons r a✝) = comp p (comp q (cons r a✝))"],"goalsAfter":[],"content":"by"},{"tailPos":4070,"headPos":4013,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na✝¹ b✝¹ c✝ d a b c x✝ : V\np : Path a b\nq : Path b c\nb✝ : V\nr : Path c b✝\na✝ : b✝ ⟶ x✝\n⊢ comp (comp p q) (cons r a✝) = comp p (comp q (cons r a✝))"],"goalsAfter":[],"content":"by rw [comp_cons, comp_cons, comp_cons, comp_assoc p q r]"},{"tailPos":4585,"headPos":4564,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\n⊢ p₁ = p₂ ∧ q₁ = q₂ → comp p₁ q₁ = comp p₂ q₂"],"goalsAfter":["case intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁ : Path b c\nhq : length q₁ = length q₁\n⊢ comp p₁ q₁ = comp p₁ q₁"],"content":"rintro ⟨rfl, rfl⟩"},{"tailPos":4586,"headPos":4585,"goalsBefore":["case intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁ : Path b c\nhq : length q₁ = length q₁\n⊢ comp p₁ q₁ = comp p₁ q₁"],"goalsAfter":["case intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁ : Path b c\nhq : length q₁ = length q₁\n⊢ comp p₁ q₁ = comp p₁ q₁"],"content":";"},{"tailPos":4590,"headPos":4587,"goalsBefore":["case intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁ : Path b c\nhq : length q₁ = length q₁\n⊢ comp p₁ q₁ = comp p₁ q₁"],"goalsAfter":[],"content":"rfl"},{"tailPos":4590,"headPos":4564,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\n⊢ p₁ = p₂ ∧ q₁ = q₂ → comp p₁ q₁ = comp p₂ q₂"],"goalsAfter":[],"content":"rintro ⟨rfl, rfl⟩; rfl"},{"tailPos":4563,"headPos":4561,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\n⊢ p₁ = p₂ ∧ q₁ = q₂ → comp p₁ q₁ = comp p₂ q₂"],"goalsAfter":[],"content":"by"},{"tailPos":4590,"headPos":4561,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\n⊢ p₁ = p₂ ∧ q₁ = q₂ → comp p₁ q₁ = comp p₂ q₂"],"goalsAfter":[],"content":"by rintro ⟨rfl, rfl⟩; rfl"},{"tailPos":4593,"headPos":4538,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\n⊢ comp p₁ q₁ = comp p₂ q₂ ↔ p₁ = p₂ ∧ q₁ = q₂"],"goalsAfter":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\nh : comp p₁ q₁ = comp p₂ q₂\n⊢ p₁ = p₂ ∧ q₁ = q₂"],"content":"refine' ⟨fun h => _, by rintro ⟨rfl, rfl⟩; rfl⟩"},{"tailPos":4639,"headPos":4596,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\nh : comp p₁ q₁ = comp p₂ q₂\n⊢ p₁ = p₂ ∧ q₁ = q₂"],"goalsAfter":["case nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nq₂ : Path b b\nhq : length nil = length q₂\nh : comp p₁ nil = comp p₂ q₂\n⊢ p₁ = p₂ ∧ nil = q₂","case cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nq₂ : Path b e₁\nhq : length (cons q₁ f₁) = length q₂\nh : comp p₁ (cons q₁ f₁) = comp p₂ q₂\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = q₂"],"content":"induction' q₁ with d₁ e₁ q₁ f₁ ih"},{"tailPos":4643,"headPos":4640,"goalsBefore":["case nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nq₂ : Path b b\nhq : length nil = length q₂\nh : comp p₁ nil = comp p₂ q₂\n⊢ p₁ = p₂ ∧ nil = q₂","case cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nq₂ : Path b e₁\nhq : length (cons q₁ f₁) = length q₂\nh : comp p₁ (cons q₁ f₁) = comp p₂ q₂\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = q₂"],"goalsAfter":["case nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nq₂ : Path b b\nhq : length nil = length q₂\nh : comp p₁ nil = comp p₂ q₂\n⊢ p₁ = p₂ ∧ nil = q₂","case cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nq₂ : Path b e₁\nhq : length (cons q₁ f₁) = length q₂\nh : comp p₁ (cons q₁ f₁) = comp p₂ q₂\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = q₂"],"content":"<;>"},{"tailPos":4679,"headPos":4644,"goalsBefore":["case nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nq₂ : Path b b\nhq : length nil = length q₂\nh : comp p₁ nil = comp p₂ q₂\n⊢ p₁ = p₂ ∧ nil = q₂"],"goalsAfter":["case nil.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq✝ : length q₁ = length q₂\nh✝ : comp p₁ q₁ = comp p₂ q₂\nhq : length nil = length nil\nh : comp p₁ nil = comp p₂ nil\n⊢ p₁ = p₂ ∧ nil = nil","case nil.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ b\nhq : length nil = length (cons q₂ f₂)\nh : comp p₁ nil = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ nil = cons q₂ f₂"],"content":"obtain _ | ⟨q₂, f₂⟩ := q₂"},{"tailPos":4679,"headPos":4644,"goalsBefore":["case cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nq₂ : Path b e₁\nhq : length (cons q₁ f₁) = length q₂\nh : comp p₁ (cons q₁ f₁) = comp p₂ q₂\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = q₂"],"goalsAfter":["case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"content":"obtain _ | ⟨q₂, f₂⟩ := q₂"},{"tailPos":4679,"headPos":4596,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\nh : comp p₁ q₁ = comp p₂ q₂\n⊢ p₁ = p₂ ∧ q₁ = q₂"],"goalsAfter":["case nil.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq✝ : length q₁ = length q₂\nh✝ : comp p₁ q₁ = comp p₂ q₂\nhq : length nil = length nil\nh : comp p₁ nil = comp p₂ nil\n⊢ p₁ = p₂ ∧ nil = nil","case nil.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ b\nhq : length nil = length (cons q₂ f₂)\nh : comp p₁ nil = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ nil = cons q₂ f₂","case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"content":"induction' q₁ with d₁ e₁ q₁ f₁ ih <;> obtain _ | ⟨q₂, f₂⟩ := q₂"},{"tailPos":4684,"headPos":4682,"goalsBefore":["case nil.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq✝ : length q₁ = length q₂\nh✝ : comp p₁ q₁ = comp p₂ q₂\nhq : length nil = length nil\nh : comp p₁ nil = comp p₂ nil\n⊢ p₁ = p₂ ∧ nil = nil","case nil.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ b\nhq : length nil = length (cons q₂ f₂)\nh : comp p₁ nil = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ nil = cons q₂ f₂","case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case nil.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq✝ : length q₁ = length q₂\nh✝ : comp p₁ q₁ = comp p₂ q₂\nhq : length nil = length nil\nh : comp p₁ nil = comp p₂ nil\n⊢ p₁ = p₂ ∧ nil = nil"],"content":"·"},{"tailPos":4703,"headPos":4685,"goalsBefore":["case nil.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq✝ : length q₁ = length q₂\nh✝ : comp p₁ q₁ = comp p₂ q₂\nhq : length nil = length nil\nh : comp p₁ nil = comp p₂ nil\n⊢ p₁ = p₂ ∧ nil = nil"],"goalsAfter":[],"content":"exact ⟨h, rfl⟩"},{"tailPos":4703,"headPos":4682,"goalsBefore":["case nil.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq✝ : length q₁ = length q₂\nh✝ : comp p₁ q₁ = comp p₂ q₂\nhq : length nil = length nil\nh : comp p₁ nil = comp p₂ nil\n⊢ p₁ = p₂ ∧ nil = nil","case nil.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ b\nhq : length nil = length (cons q₂ f₂)\nh : comp p₁ nil = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ nil = cons q₂ f₂","case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case nil.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ b\nhq : length nil = length (cons q₂ f₂)\nh : comp p₁ nil = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ nil = cons q₂ f₂","case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"content":"· exact ⟨h, rfl⟩"},{"tailPos":4708,"headPos":4706,"goalsBefore":["case nil.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ b\nhq : length nil = length (cons q₂ f₂)\nh : comp p₁ nil = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ nil = cons q₂ f₂","case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case nil.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ b\nhq : length nil = length (cons q₂ f₂)\nh : comp p₁ nil = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ nil = cons q₂ f₂"],"content":"·"},{"tailPos":4717,"headPos":4709,"goalsBefore":["case nil.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ b\nhq : length nil = length (cons q₂ f₂)\nh : comp p₁ nil = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ nil = cons q₂ f₂"],"goalsAfter":[],"content":"cases hq"},{"tailPos":4717,"headPos":4706,"goalsBefore":["case nil.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂✝ : Path b c\nhq✝ : length q₁ = length q₂✝\nh✝ : comp p₁ q₁ = comp p₂ q₂✝\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ b\nhq : length nil = length (cons q₂ f₂)\nh : comp p₁ nil = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ nil = cons q₂ f₂","case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"content":"· cases hq"},{"tailPos":4722,"headPos":4720,"goalsBefore":["case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil"],"content":"·"},{"tailPos":4731,"headPos":4723,"goalsBefore":["case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil"],"goalsAfter":[],"content":"cases hq"},{"tailPos":4731,"headPos":4720,"goalsBefore":["case cons.nil\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nh✝ : comp p₁ q₁✝ = comp p₂ q₂\nd₁ : V\nq₁ : Path b d₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nf₁ : d₁ ⟶ b\nhq : length (cons q₁ f₁) = length nil\nh : comp p₁ (cons q₁ f₁) = comp p₂ nil\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = nil","case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"content":"· cases hq"},{"tailPos":4736,"headPos":4734,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"content":"·"},{"tailPos":4775,"headPos":4737,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : d₁ = b✝ ∧ HEq (comp p₁ q₁) (comp p₂ q₂) ∧ HEq f₁ f₂\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"content":"simp only [comp_cons, cons.injEq] at h"},{"tailPos":4797,"headPos":4780,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : d₁ = b✝ ∧ HEq (comp p₁ q₁) (comp p₂ q₂) ∧ HEq f₁ f₂\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nq₂ : Path b d₁\nf₂ : d₁ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₂ q₂) ∧ HEq f₁ f₂\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"content":"obtain rfl := h.1"},{"tailPos":4856,"headPos":4802,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nq₂ : Path b d₁\nf₂ : d₁ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₂ q₂) ∧ HEq f₁ f₂\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":["case cons.cons.intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ f₂ : d₁ ⟶ e₁\nh✝ : comp p₁ q₁✝ = comp p₁ q₂\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₁ q₂ → p₁ = p₁ ∧ q₁ = q₂\nhq : length (cons q₁ f₁) = length (cons q₁ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₁ q₁) ∧ HEq f₁ f₂\n⊢ p₁ = p₁ ∧ cons q₁ f₁ = cons q₁ f₂"],"content":"obtain ⟨rfl, rfl⟩ := ih (Nat.succ.inj hq) h.2.1.eq"},{"tailPos":4873,"headPos":4865,"goalsBefore":["case cons.cons.intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ f₂ : d₁ ⟶ e₁\nh✝ : comp p₁ q₁✝ = comp p₁ q₂\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₁ q₂ → p₁ = p₁ ∧ q₁ = q₂\nhq : length (cons q₁ f₁) = length (cons q₁ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₁ q₁) ∧ HEq f₁ f₂\n⊢ p₁ = p₁ ∧ cons q₁ f₁ = cons q₁ f₂"],"goalsAfter":["case cons.cons.intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ f₂ : d₁ ⟶ e₁\nh✝ : comp p₁ q₁✝ = comp p₁ q₂\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₁ q₂ → p₁ = p₁ ∧ q₁ = q₂\nhq : length (cons q₁ f₁) = length (cons q₁ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₁ q₁) ∧ HEq f₁ f₂\n⊢ p₁ = p₁ ∧ cons q₁ f₂ = cons q₁ f₂"],"content":"h.2.2.eq"},{"tailPos":4874,"headPos":4873,"goalsBefore":["case cons.cons.intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ f₂ : d₁ ⟶ e₁\nh✝ : comp p₁ q₁✝ = comp p₁ q₂\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₁ q₂ → p₁ = p₁ ∧ q₁ = q₂\nhq : length (cons q₁ f₁) = length (cons q₁ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₁ q₁) ∧ HEq f₁ f₂\n⊢ p₁ = p₁ ∧ cons q₁ f₂ = cons q₁ f₂"],"goalsAfter":["case cons.cons.intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ f₂ : d₁ ⟶ e₁\nh✝ : comp p₁ q₁✝ = comp p₁ q₂\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₁ q₂ → p₁ = p₁ ∧ q₁ = q₂\nhq : length (cons q₁ f₁) = length (cons q₁ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₁ q₁) ∧ HEq f₁ f₂\n⊢ p₁ = p₁ ∧ cons q₁ f₂ = cons q₁ f₂"],"content":"]"},{"tailPos":4874,"headPos":4861,"goalsBefore":["case cons.cons.intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ f₂ : d₁ ⟶ e₁\nh✝ : comp p₁ q₁✝ = comp p₁ q₂\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₁ q₂ → p₁ = p₁ ∧ q₁ = q₂\nhq : length (cons q₁ f₁) = length (cons q₁ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₁ q₁) ∧ HEq f₁ f₂\n⊢ p₁ = p₁ ∧ cons q₁ f₁ = cons q₁ f₂"],"goalsAfter":["case cons.cons.intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ f₂ : d₁ ⟶ e₁\nh✝ : comp p₁ q₁✝ = comp p₁ q₂\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₁ q₂ → p₁ = p₁ ∧ q₁ = q₂\nhq : length (cons q₁ f₁) = length (cons q₁ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₁ q₁) ∧ HEq f₁ f₂\n⊢ p₁ = p₁ ∧ cons q₁ f₂ = cons q₁ f₂"],"content":"rw [h.2.2.eq]"},{"tailPos":4899,"headPos":4879,"goalsBefore":["case cons.cons.intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁✝ q₂ : Path b c\nhq✝ : length q₁✝ = length q₂\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ f₂ : d₁ ⟶ e₁\nh✝ : comp p₁ q₁✝ = comp p₁ q₂\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₁ q₂ → p₁ = p₁ ∧ q₁ = q₂\nhq : length (cons q₁ f₁) = length (cons q₁ f₂)\nh : d₁ = d₁ ∧ HEq (comp p₁ q₁) (comp p₁ q₁) ∧ HEq f₁ f₂\n⊢ p₁ = p₁ ∧ cons q₁ f₂ = cons q₁ f₂"],"goalsAfter":[],"content":"exact ⟨rfl, rfl⟩"},{"tailPos":4899,"headPos":4737,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":[],"content":"simp only [comp_cons, cons.injEq] at h\n    obtain rfl := h.1\n    obtain ⟨rfl, rfl⟩ := ih (Nat.succ.inj hq) h.2.1.eq\n    rw [h.2.2.eq]\n    exact ⟨rfl, rfl⟩"},{"tailPos":4899,"headPos":4734,"goalsBefore":["case cons.cons\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁✝ q₂✝ : Path b c\nhq✝ : length q₁✝ = length q₂✝\nh✝ : comp p₁ q₁✝ = comp p₂ q₂✝\nd₁ e₁ : V\nq₁ : Path b d₁\nf₁ : d₁ ⟶ e₁\nih : ∀ {q₂ : Path b d₁}, length q₁ = length q₂ → comp p₁ q₁ = comp p₂ q₂ → p₁ = p₂ ∧ q₁ = q₂\nb✝ : V\nq₂ : Path b b✝\nf₂ : b✝ ⟶ e₁\nhq : length (cons q₁ f₁) = length (cons q₂ f₂)\nh : comp p₁ (cons q₁ f₁) = comp p₂ (cons q₂ f₂)\n⊢ p₁ = p₂ ∧ cons q₁ f₁ = cons q₂ f₂"],"goalsAfter":[],"content":"· simp only [comp_cons, cons.injEq] at h\n    obtain rfl := h.1\n    obtain ⟨rfl, rfl⟩ := ih (Nat.succ.inj hq) h.2.1.eq\n    rw [h.2.2.eq]\n    exact ⟨rfl, rfl⟩"},{"tailPos":4899,"headPos":4538,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\n⊢ comp p₁ q₁ = comp p₂ q₂ ↔ p₁ = p₂ ∧ q₁ = q₂"],"goalsAfter":[],"content":"refine' ⟨fun h => _, by rintro ⟨rfl, rfl⟩; rfl⟩\n  induction' q₁ with d₁ e₁ q₁ f₁ ih <;> obtain _ | ⟨q₂, f₂⟩ := q₂\n  · exact ⟨h, rfl⟩\n  · cases hq\n  · cases hq\n  · simp only [comp_cons, cons.injEq] at h\n    obtain rfl := h.1\n    obtain ⟨rfl, rfl⟩ := ih (Nat.succ.inj hq) h.2.1.eq\n    rw [h.2.2.eq]\n    exact ⟨rfl, rfl⟩"},{"tailPos":4535,"headPos":4533,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\n⊢ comp p₁ q₁ = comp p₂ q₂ ↔ p₁ = p₂ ∧ q₁ = q₂"],"goalsAfter":[],"content":"by"},{"tailPos":4899,"headPos":4533,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nhq : length q₁ = length q₂\n⊢ comp p₁ q₁ = comp p₂ q₂ ↔ p₁ = p₂ ∧ q₁ = q₂"],"goalsAfter":[],"content":"by\n  refine' ⟨fun h => _, by rintro ⟨rfl, rfl⟩; rfl⟩\n  induction' q₁ with d₁ e₁ q₁ f₁ ih <;> obtain _ | ⟨q₂, f₂⟩ := q₂\n  · exact ⟨h, rfl⟩\n  · cases hq\n  · cases hq\n  · simp only [comp_cons, cons.injEq] at h\n    obtain rfl := h.1\n    obtain ⟨rfl, rfl⟩ := ih (Nat.succ.inj hq) h.2.1.eq\n    rw [h.2.2.eq]\n    exact ⟨rfl, rfl⟩"},{"tailPos":5212,"headPos":5175,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nh : length p₁ = length p₂\nh_eq : comp p₁ q₁ = comp p₂ q₂\n⊢ ?m.9164 h h_eq + length q₁ = ?m.9164 h h_eq + length q₂"],"goalsAfter":[],"content":"simpa only [length_comp, h] using congr_arg length h_eq"},{"tailPos":5174,"headPos":5172,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nh : length p₁ = length p₂\nh_eq : comp p₁ q₁ = comp p₂ q₂\n⊢ ?m.9164 h h_eq + length q₁ = ?m.9164 h h_eq + length q₂"],"goalsAfter":[],"content":"by"},{"tailPos":5212,"headPos":5172,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nh : length p₁ = length p₂\nh_eq : comp p₁ q₁ = comp p₂ q₂\n⊢ ?m.9164 h h_eq + length q₁ = ?m.9164 h h_eq + length q₂"],"goalsAfter":[],"content":"by simpa [h] using congr_arg length h_eq"},{"tailPos":5249,"headPos":5228,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nh : length p₁ = length p₂\n⊢ p₁ = p₂ ∧ q₁ = q₂ → comp p₁ q₁ = comp p₂ q₂"],"goalsAfter":["case intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁ : Path b c\nh : length p₁ = length p₁\n⊢ comp p₁ q₁ = comp p₁ q₁"],"content":"rintro ⟨rfl, rfl⟩"},{"tailPos":5250,"headPos":5249,"goalsBefore":["case intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁ : Path b c\nh : length p₁ = length p₁\n⊢ comp p₁ q₁ = comp p₁ q₁"],"goalsAfter":["case intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁ : Path b c\nh : length p₁ = length p₁\n⊢ comp p₁ q₁ = comp p₁ q₁"],"content":";"},{"tailPos":5254,"headPos":5251,"goalsBefore":["case intro\nV : Type u\ninst✝ : Quiver V\na b c d : V\np₁ : Path a b\nq₁ : Path b c\nh : length p₁ = length p₁\n⊢ comp p₁ q₁ = comp p₁ q₁"],"goalsAfter":[],"content":"rfl"},{"tailPos":5254,"headPos":5228,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nh : length p₁ = length p₂\n⊢ p₁ = p₂ ∧ q₁ = q₂ → comp p₁ q₁ = comp p₂ q₂"],"goalsAfter":[],"content":"rintro ⟨rfl, rfl⟩; rfl"},{"tailPos":5227,"headPos":5225,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nh : length p₁ = length p₂\n⊢ p₁ = p₂ ∧ q₁ = q₂ → comp p₁ q₁ = comp p₂ q₂"],"goalsAfter":[],"content":"by"},{"tailPos":5254,"headPos":5225,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np₁ p₂ : Path a b\nq₁ q₂ : Path b c\nh : length p₁ = length p₂\n⊢ p₁ = p₂ ∧ q₁ = q₂ → comp p₁ q₁ = comp p₂ q₂"],"goalsAfter":[],"content":"by rintro ⟨rfl, rfl⟩; rfl"},{"tailPos":6675,"headPos":6671,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\n⊢ toList (comp p nil) = toList nil ++ toList p"],"goalsAfter":[],"content":"simp only [comp_nil, toList, List.nil_append]"},{"tailPos":6670,"headPos":6668,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\n⊢ toList (comp p nil) = toList nil ++ toList p"],"goalsAfter":[],"content":"by"},{"tailPos":6675,"headPos":6668,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d : V\np : Path a b\n⊢ toList (comp p nil) = toList nil ++ toList p"],"goalsAfter":[],"content":"by simp"},{"tailPos":6727,"headPos":6709,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d✝ : V\np : Path a b\nx✝ d : V\nq : Path b d\na✝ : d ⟶ x✝\n⊢ toList (comp p (cons q a✝)) = toList (cons q a✝) ++ toList p"],"goalsAfter":[],"content":"simp [toList_comp]"},{"tailPos":6708,"headPos":6706,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d✝ : V\np : Path a b\nx✝ d : V\nq : Path b d\na✝ : d ⟶ x✝\n⊢ toList (comp p (cons q a✝)) = toList (cons q a✝) ++ toList p"],"goalsAfter":[],"content":"by"},{"tailPos":6727,"headPos":6706,"goalsBefore":["V : Type u\ninst✝ : Quiver V\na b c d✝ : V\np : Path a b\nx✝ d : V\nq : Path b d\na✝ : d ⟶ x✝\n⊢ toList (comp p (cons q a✝)) = toList (cons q a✝) ++ toList p"],"goalsAfter":[],"content":"by simp [toList_comp]"},{"tailPos":7261,"headPos":7254,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na c : V\np : Path a c\nf : c ⟶ a\nh : toList nil = toList (cons p f)\n⊢ nil = cons p f"],"goalsAfter":[],"content":"cases h"},{"tailPos":7253,"headPos":7251,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na c : V\np : Path a c\nf : c ⟶ a\nh : toList nil = toList (cons p f)\n⊢ nil = cons p f"],"goalsAfter":[],"content":"by"},{"tailPos":7261,"headPos":7251,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na c : V\np : Path a c\nf : c ⟶ a\nh : toList nil = toList (cons p f)\n⊢ nil = cons p f"],"goalsAfter":[],"content":"by cases h"},{"tailPos":7310,"headPos":7303,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na c : V\np : Path a c\nf : c ⟶ a\nh : toList (cons p f) = toList nil\n⊢ cons p f = nil"],"goalsAfter":[],"content":"cases h"},{"tailPos":7302,"headPos":7300,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na c : V\np : Path a c\nf : c ⟶ a\nh : toList (cons p f) = toList nil\n⊢ cons p f = nil"],"goalsAfter":[],"content":"by"},{"tailPos":7310,"headPos":7300,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na c : V\np : Path a c\nf : c ⟶ a\nh : toList (cons p f) = toList nil\n⊢ cons p f = nil"],"goalsAfter":[],"content":"by cases h"},{"tailPos":7412,"headPos":7372,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na x✝ c : V\np : Path a c\nf : c ⟶ x✝\nt : V\nC : Path a t\nD : t ⟶ x✝\nh : toList (cons p f) = toList (cons C D)\n⊢ cons p f = cons C D"],"goalsAfter":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na x✝ c : V\np : Path a c\nf : c ⟶ x✝\nt : V\nC : Path a t\nD : t ⟶ x✝\nh : c = t ∧ toList p = toList C\n⊢ cons p f = cons C D"],"content":"simp only [toList, List.cons.injEq] at h"},{"tailPos":7443,"headPos":7417,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na x✝ c : V\np : Path a c\nf : c ⟶ x✝\nt : V\nC : Path a t\nD : t ⟶ x✝\nh : c = t ∧ toList p = toList C\n⊢ cons p f = cons C D"],"goalsAfter":["case intro\nV : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na x✝ c : V\np : Path a c\nf : c ⟶ x✝\nC : Path a c\nD : c ⟶ x✝\nhAC : toList p = toList C\n⊢ cons p f = cons C D"],"content":"obtain ⟨rfl, hAC⟩ := h"},{"tailPos":7479,"headPos":7448,"goalsBefore":["case intro\nV : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na x✝ c : V\np : Path a c\nf : c ⟶ x✝\nC : Path a c\nD : c ⟶ x✝\nhAC : toList p = toList C\n⊢ cons p f = cons C D"],"goalsAfter":[],"content":"simp [toList_injective _ _ hAC]"},{"tailPos":7479,"headPos":7372,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na x✝ c : V\np : Path a c\nf : c ⟶ x✝\nt : V\nC : Path a t\nD : t ⟶ x✝\nh : toList (cons p f) = toList (cons C D)\n⊢ cons p f = cons C D"],"goalsAfter":[],"content":"simp only [toList, List.cons.injEq] at h\n    obtain ⟨rfl, hAC⟩ := h\n    simp [toList_injective _ _ hAC]"},{"tailPos":7367,"headPos":7365,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na x✝ c : V\np : Path a c\nf : c ⟶ x✝\nt : V\nC : Path a t\nD : t ⟶ x✝\nh : toList (cons p f) = toList (cons C D)\n⊢ cons p f = cons C D"],"goalsAfter":[],"content":"by"},{"tailPos":7479,"headPos":7365,"goalsBefore":["V : Type u\ninst✝¹ : Quiver V\na✝ b c✝ d : V\ninst✝ : ∀ (a b : V), Subsingleton (a ⟶ b)\na x✝ c : V\np : Path a c\nf : c ⟶ x✝\nt : V\nC : Path a t\nD : t ⟶ x✝\nh : toList (cons p f) = toList (cons C D)\n⊢ cons p f = cons C D"],"goalsAfter":[],"content":"by\n    simp only [toList, List.cons.injEq] at h\n    obtain ⟨rfl, hAC⟩ := h\n    simp [toList_injective _ _ hAC]"},{"tailPos":8662,"headPos":8657,"goalsBefore":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ mapPath F (Path.comp p (Path.cons q e)) = Path.comp (mapPath F p) (mapPath F (Path.cons q e))"],"goalsAfter":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ Path.cons (mapPath F (Path.comp p q)) (F.map e) = Path.cons (Path.comp (mapPath F p) (mapPath F q)) (F.map e)"],"content":"dsimp only [Path.comp_cons, mapPath_cons]"},{"tailPos":8663,"headPos":8662,"goalsBefore":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ Path.cons (mapPath F (Path.comp p q)) (F.map e) = Path.cons (Path.comp (mapPath F p) (mapPath F q)) (F.map e)"],"goalsAfter":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ Path.cons (mapPath F (Path.comp p q)) (F.map e) = Path.cons (Path.comp (mapPath F p) (mapPath F q)) (F.map e)"],"content":";"},{"tailPos":8684,"headPos":8668,"goalsBefore":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ Path.cons (mapPath F (Path.comp p q)) (F.map e) = Path.cons (Path.comp (mapPath F p) (mapPath F q)) (F.map e)"],"goalsAfter":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ Path.cons (Path.comp (mapPath F p) (mapPath F q)) (F.map e) =\n    Path.cons (Path.comp (mapPath F p) (mapPath F q)) (F.map e)"],"content":"mapPath_comp p q"},{"tailPos":8685,"headPos":8684,"goalsBefore":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ Path.cons (Path.comp (mapPath F p) (mapPath F q)) (F.map e) =\n    Path.cons (Path.comp (mapPath F p) (mapPath F q)) (F.map e)"],"goalsAfter":[],"content":"]"},{"tailPos":8685,"headPos":8664,"goalsBefore":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ Path.cons (mapPath F (Path.comp p q)) (F.map e) = Path.cons (Path.comp (mapPath F p) (mapPath F q)) (F.map e)"],"goalsAfter":[],"content":"rw [mapPath_comp p q]"},{"tailPos":8685,"headPos":8657,"goalsBefore":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ mapPath F (Path.comp p (Path.cons q e)) = Path.comp (mapPath F p) (mapPath F (Path.cons q e))"],"goalsAfter":[],"content":"dsimp; rw [mapPath_comp p q]"},{"tailPos":8656,"headPos":8654,"goalsBefore":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ mapPath F (Path.comp p (Path.cons q e)) = Path.comp (mapPath F p) (mapPath F (Path.cons q e))"],"goalsAfter":[],"content":"by"},{"tailPos":8685,"headPos":8654,"goalsBefore":["V : Type u₁\ninst✝¹ : Quiver V\nW : Type u₂\ninst✝ : Quiver W\nF : V ⥤q W\na b : V\np : Path a b\nc b✝ : V\nq : Path b b✝\ne : b✝ ⟶ c\n⊢ mapPath F (Path.comp p (Path.cons q e)) = Path.comp (mapPath F p) (mapPath F (Path.cons q e))"],"goalsAfter":[],"content":"by dsimp; rw [mapPath_comp p q]"}]