[{"tailPos":4454,"headPos":4435,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF G : L →ᴸ L'\nh_fun : F.onFunction = G.onFunction\nh_rel : F.onRelation = G.onRelation\n⊢ F = G"],"goalsAfter":["case mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nG : L →ᴸ L'\nFf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nFr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nh_fun : { onFunction := Ff, onRelation := Fr }.onFunction = G.onFunction\nh_rel : { onFunction := Ff, onRelation := Fr }.onRelation = G.onRelation\n⊢ { onFunction := Ff, onRelation := Fr } = G"],"content":"cases' F with Ff Fr"},{"tailPos":4476,"headPos":4457,"goalsBefore":["case mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nG : L →ᴸ L'\nFf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nFr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nh_fun : { onFunction := Ff, onRelation := Fr }.onFunction = G.onFunction\nh_rel : { onFunction := Ff, onRelation := Fr }.onRelation = G.onRelation\n⊢ { onFunction := Ff, onRelation := Fr } = G"],"goalsAfter":["case mk.mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nFf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nFr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nGf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nGr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nh_fun : { onFunction := Ff, onRelation := Fr }.onFunction = { onFunction := Gf, onRelation := Gr }.onFunction\nh_rel : { onFunction := Ff, onRelation := Fr }.onRelation = { onFunction := Gf, onRelation := Gr }.onRelation\n⊢ { onFunction := Ff, onRelation := Fr } = { onFunction := Gf, onRelation := Gr }"],"content":"cases' G with Gf Gr"},{"tailPos":4499,"headPos":4479,"goalsBefore":["case mk.mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nFf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nFr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nGf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nGr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nh_fun : { onFunction := Ff, onRelation := Fr }.onFunction = { onFunction := Gf, onRelation := Gr }.onFunction\nh_rel : { onFunction := Ff, onRelation := Fr }.onRelation = { onFunction := Gf, onRelation := Gr }.onRelation\n⊢ { onFunction := Ff, onRelation := Fr } = { onFunction := Gf, onRelation := Gr }"],"goalsAfter":["case mk.mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nFf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nFr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nGf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nGr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nh_fun : { onFunction := Ff, onRelation := Fr }.onFunction = { onFunction := Gf, onRelation := Gr }.onFunction\nh_rel : { onFunction := Ff, onRelation := Fr }.onRelation = { onFunction := Gf, onRelation := Gr }.onRelation\n⊢ Ff = Gf ∧ Fr = Gr"],"content":"simp only [mk.injEq]"},{"tailPos":4529,"headPos":4502,"goalsBefore":["case mk.mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nFf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nFr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nGf : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nGr : ⦃n : ℕ⦄ → Relations L n → Relations L' n\nh_fun : { onFunction := Ff, onRelation := Fr }.onFunction = { onFunction := Gf, onRelation := Gr }.onFunction\nh_rel : { onFunction := Ff, onRelation := Fr }.onRelation = { onFunction := Gf, onRelation := Gr }.onRelation\n⊢ Ff = Gf ∧ Fr = Gr"],"goalsAfter":[],"content":"exact And.intro h_fun h_rel"},{"tailPos":4529,"headPos":4435,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF G : L →ᴸ L'\nh_fun : F.onFunction = G.onFunction\nh_rel : F.onRelation = G.onRelation\n⊢ F = G"],"goalsAfter":[],"content":"cases' F with Ff Fr\n  cases' G with Gf Gr\n  simp only [mk.injEq]\n  exact And.intro h_fun h_rel"},{"tailPos":4432,"headPos":4430,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF G : L →ᴸ L'\nh_fun : F.onFunction = G.onFunction\nh_rel : F.onRelation = G.onRelation\n⊢ F = G"],"goalsAfter":[],"content":"by"},{"tailPos":4529,"headPos":4430,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF G : L →ᴸ L'\nh_fun : F.onFunction = G.onFunction\nh_rel : F.onRelation = G.onRelation\n⊢ F = G"],"goalsAfter":[],"content":"by\n  cases' F with Ff Fr\n  cases' G with Gf Gr\n  simp only [mk.injEq]\n  exact And.intro h_fun h_rel"},{"tailPos":6364,"headPos":6357,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF : L →ᴸ L'\n⊢ LHom.id L' ∘' F = F"],"goalsAfter":["case mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nonFunction✝ : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nonRelation✝ : ⦃n : ℕ⦄ → Relations L n → Relations L' n\n⊢ LHom.id L' ∘' { onFunction := onFunction✝, onRelation := onRelation✝ } =\n    { onFunction := onFunction✝, onRelation := onRelation✝ }"],"content":"cases F"},{"tailPos":6370,"headPos":6367,"goalsBefore":["case mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nonFunction✝ : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nonRelation✝ : ⦃n : ℕ⦄ → Relations L n → Relations L' n\n⊢ LHom.id L' ∘' { onFunction := onFunction✝, onRelation := onRelation✝ } =\n    { onFunction := onFunction✝, onRelation := onRelation✝ }"],"goalsAfter":[],"content":"rfl"},{"tailPos":6370,"headPos":6357,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF : L →ᴸ L'\n⊢ LHom.id L' ∘' F = F"],"goalsAfter":[],"content":"cases F\n  rfl"},{"tailPos":6354,"headPos":6352,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF : L →ᴸ L'\n⊢ LHom.id L' ∘' F = F"],"goalsAfter":[],"content":"by"},{"tailPos":6370,"headPos":6352,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF : L →ᴸ L'\n⊢ LHom.id L' ∘' F = F"],"goalsAfter":[],"content":"by\n  cases F\n  rfl"},{"tailPos":6526,"headPos":6519,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF : L →ᴸ L'\n⊢ F ∘' LHom.id L = F"],"goalsAfter":["case mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nonFunction✝ : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nonRelation✝ : ⦃n : ℕ⦄ → Relations L n → Relations L' n\n⊢ { onFunction := onFunction✝, onRelation := onRelation✝ } ∘' LHom.id L =\n    { onFunction := onFunction✝, onRelation := onRelation✝ }"],"content":"cases F"},{"tailPos":6532,"headPos":6529,"goalsBefore":["case mk\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nonFunction✝ : ⦃n : ℕ⦄ → Functions L n → Functions L' n\nonRelation✝ : ⦃n : ℕ⦄ → Relations L n → Relations L' n\n⊢ { onFunction := onFunction✝, onRelation := onRelation✝ } ∘' LHom.id L =\n    { onFunction := onFunction✝, onRelation := onRelation✝ }"],"goalsAfter":[],"content":"rfl"},{"tailPos":6532,"headPos":6519,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF : L →ᴸ L'\n⊢ F ∘' LHom.id L = F"],"goalsAfter":[],"content":"cases F\n  rfl"},{"tailPos":6516,"headPos":6514,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF : L →ᴸ L'\n⊢ F ∘' LHom.id L = F"],"goalsAfter":[],"content":"by"},{"tailPos":6532,"headPos":6514,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nϕ : L →ᴸ L'\nL'' : Language\nF : L →ᴸ L'\n⊢ F ∘' LHom.id L = F"],"goalsAfter":[],"content":"by\n  cases F\n  rfl"},{"tailPos":12404,"headPos":12400,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L n✝), funMap (onFunction (LHom.sumElim ϕ ψ) (Sum.inl val)) x✝ = funMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"simp only [sumElim_onFunction, Sum.elim_inl, map_onFunction, funMap_sum_inl, implies_true]"},{"tailPos":12399,"headPos":12397,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L n✝), funMap (onFunction (LHom.sumElim ϕ ψ) (Sum.inl val)) x✝ = funMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"by"},{"tailPos":12404,"headPos":12397,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L n✝), funMap (onFunction (LHom.sumElim ϕ ψ) (Sum.inl val)) x✝ = funMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"by simp"},{"tailPos":12414,"headPos":12410,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L'' n✝), funMap (onFunction (LHom.sumElim ϕ ψ) (Sum.inr val)) x✝ = funMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"simp only [sumElim_onFunction, Sum.elim_inr, map_onFunction, funMap_sum_inr, implies_true]"},{"tailPos":12409,"headPos":12407,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L'' n✝), funMap (onFunction (LHom.sumElim ϕ ψ) (Sum.inr val)) x✝ = funMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"by"},{"tailPos":12414,"headPos":12407,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L'' n✝), funMap (onFunction (LHom.sumElim ϕ ψ) (Sum.inr val)) x✝ = funMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"by simp"},{"tailPos":12450,"headPos":12446,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L n✝), RelMap (onRelation (LHom.sumElim ϕ ψ) (Sum.inl val)) x✝ = RelMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"simp only [sumElim_onRelation, Sum.elim_inl, map_onRelation, relMap_sum_inl, implies_true]"},{"tailPos":12445,"headPos":12443,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L n✝), RelMap (onRelation (LHom.sumElim ϕ ψ) (Sum.inl val)) x✝ = RelMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"by"},{"tailPos":12450,"headPos":12443,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L n✝), RelMap (onRelation (LHom.sumElim ϕ ψ) (Sum.inl val)) x✝ = RelMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"by simp"},{"tailPos":12460,"headPos":12456,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L'' n✝), RelMap (onRelation (LHom.sumElim ϕ ψ) (Sum.inr val)) x✝ = RelMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"simp only [sumElim_onRelation, Sum.elim_inr, map_onRelation, relMap_sum_inr, implies_true]"},{"tailPos":12455,"headPos":12453,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L'' n✝), RelMap (onRelation (LHom.sumElim ϕ ψ) (Sum.inr val)) x✝ = RelMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"by"},{"tailPos":12460,"headPos":12453,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁵ : Structure L M✝\nϕ : L →ᴸ L'\nL''✝ : Language\nL'' : Language\nψ : L'' →ᴸ L'\nM : Type ?u.28484\ninst✝⁴ : Structure L M\ninst✝³ : Structure L' M\ninst✝² : Structure L'' M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L'') n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L'' n✝), RelMap (onRelation (LHom.sumElim ϕ ψ) (Sum.inr val)) x✝ = RelMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"by simp"},{"tailPos":12856,"headPos":12852,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L n✝), funMap (onFunction (sumMap ϕ ψ) (Sum.inl val)) x✝ = funMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"simp only [sumMap_onFunction, Sum.map_inl, funMap_sum_inl, map_onFunction, implies_true]"},{"tailPos":12851,"headPos":12849,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L n✝), funMap (onFunction (sumMap ϕ ψ) (Sum.inl val)) x✝ = funMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"by"},{"tailPos":12856,"headPos":12849,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L n✝), funMap (onFunction (sumMap ϕ ψ) (Sum.inl val)) x✝ = funMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"by simp"},{"tailPos":12866,"headPos":12862,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L₁ n✝), funMap (onFunction (sumMap ϕ ψ) (Sum.inr val)) x✝ = funMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"simp only [sumMap_onFunction, Sum.map_inr, funMap_sum_inr, map_onFunction, implies_true]"},{"tailPos":12861,"headPos":12859,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L₁ n✝), funMap (onFunction (sumMap ϕ ψ) (Sum.inr val)) x✝ = funMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"by"},{"tailPos":12866,"headPos":12859,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nf : Functions (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Functions L₁ n✝), funMap (onFunction (sumMap ϕ ψ) (Sum.inr val)) x✝ = funMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"by simp"},{"tailPos":12902,"headPos":12898,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L n✝), RelMap (onRelation (sumMap ϕ ψ) (Sum.inl val)) x✝ = RelMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"simp only [sumMap_onRelation, Sum.map_inl, relMap_sum_inl, map_onRelation, implies_true]"},{"tailPos":12897,"headPos":12895,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L n✝), RelMap (onRelation (sumMap ϕ ψ) (Sum.inl val)) x✝ = RelMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"by"},{"tailPos":12902,"headPos":12895,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L n✝), RelMap (onRelation (sumMap ϕ ψ) (Sum.inl val)) x✝ = RelMap (Sum.inl val) x✝"],"goalsAfter":[],"content":"by simp"},{"tailPos":12912,"headPos":12908,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L₁ n✝), RelMap (onRelation (sumMap ϕ ψ) (Sum.inr val)) x✝ = RelMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"simp only [sumMap_onRelation, Sum.map_inr, relMap_sum_inr, map_onRelation, implies_true]"},{"tailPos":12907,"headPos":12905,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L₁ n✝), RelMap (onRelation (sumMap ϕ ψ) (Sum.inr val)) x✝ = RelMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"by"},{"tailPos":12912,"headPos":12905,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁶ : Structure L M✝\nϕ : L →ᴸ L'\nL'' : Language\nL₁ : Language\nL₂ : Language\nψ : L₁ →ᴸ L₂\nM : Type ?u.36548\ninst✝⁵ : Structure L M\ninst✝⁴ : Structure L' M\ninst✝³ : Structure L₁ M\ninst✝² : Structure L₂ M\ninst✝¹ : IsExpansionOn ϕ M\ninst✝ : IsExpansionOn ψ M\nn✝ : ℕ\nR : Relations (Language.sum L L₁) n✝\nx✝ : Fin n✝ → M\n⊢ ∀ (val : Relations L₁ n✝), RelMap (onRelation (sumMap ϕ ψ) (Sum.inr val)) x✝ = RelMap (Sum.inr val) x✝"],"goalsAfter":[],"content":"by simp"},{"tailPos":15503,"headPos":15474,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\n⊢ IsExpansionOn ϕ M"],"goalsAfter":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\n⊢ IsExpansionOn ϕ M"],"content":"letI := ϕ.defaultExpansion M"},{"tailPos":15556,"headPos":15506,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\n⊢ IsExpansionOn ϕ M"],"goalsAfter":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\n⊢ funMap (LHom.onFunction ϕ f) xs = funMap f xs","case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"content":"refine' ⟨fun {n} f xs => _, fun {n} r xs => _⟩"},{"tailPos":15561,"headPos":15559,"goalsBefore":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\n⊢ funMap (LHom.onFunction ϕ f) xs = funMap f xs","case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"goalsAfter":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\n⊢ funMap (LHom.onFunction ϕ f) xs = funMap f xs"],"content":"·"},{"tailPos":15658,"headPos":15562,"goalsBefore":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\n⊢ funMap (LHom.onFunction ϕ f) xs = funMap f xs"],"goalsAfter":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\nhf : LHom.onFunction ϕ f ∈ Set.range fun f => LHom.onFunction ϕ f\n⊢ funMap (LHom.onFunction ϕ f) xs = funMap f xs"],"content":"have hf : ϕ.onFunction f ∈ Set.range fun f : L.Functions n => ϕ.onFunction f := ⟨f, rfl⟩"},{"tailPos":15691,"headPos":15663,"goalsBefore":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\nhf : LHom.onFunction ϕ f ∈ Set.range fun f => LHom.onFunction ϕ f\n⊢ funMap (LHom.onFunction ϕ f) xs = funMap f xs"],"goalsAfter":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\nhf : LHom.onFunction ϕ f ∈ Set.range fun f => LHom.onFunction ϕ f\n⊢ funMap (Exists.choose hf) xs = funMap f xs"],"content":"refine' (dif_pos hf).trans _"},{"tailPos":15727,"headPos":15700,"goalsBefore":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\nhf : LHom.onFunction ϕ f ∈ Set.range fun f => LHom.onFunction ϕ f\n⊢ funMap (Exists.choose hf) xs = funMap f xs"],"goalsAfter":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\nhf : LHom.onFunction ϕ f ∈ Set.range fun f => LHom.onFunction ϕ f\n⊢ funMap f xs = funMap f xs"],"content":"h.onFunction hf.choose_spec"},{"tailPos":15728,"headPos":15727,"goalsBefore":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\nhf : LHom.onFunction ϕ f ∈ Set.range fun f => LHom.onFunction ϕ f\n⊢ funMap f xs = funMap f xs"],"goalsAfter":[],"content":"]"},{"tailPos":15728,"headPos":15696,"goalsBefore":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\nhf : LHom.onFunction ϕ f ∈ Set.range fun f => LHom.onFunction ϕ f\n⊢ funMap (Exists.choose hf) xs = funMap f xs"],"goalsAfter":[],"content":"rw [h.onFunction hf.choose_spec]"},{"tailPos":15728,"headPos":15562,"goalsBefore":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\n⊢ funMap (LHom.onFunction ϕ f) xs = funMap f xs"],"goalsAfter":[],"content":"have hf : ϕ.onFunction f ∈ Set.range fun f : L.Functions n => ϕ.onFunction f := ⟨f, rfl⟩\n    refine' (dif_pos hf).trans _\n    rw [h.onFunction hf.choose_spec]"},{"tailPos":15728,"headPos":15559,"goalsBefore":["case refine'_1\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nf : Functions L n\nxs : Fin n → M\n⊢ funMap (LHom.onFunction ϕ f) xs = funMap f xs","case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"goalsAfter":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"content":"· have hf : ϕ.onFunction f ∈ Set.range fun f : L.Functions n => ϕ.onFunction f := ⟨f, rfl⟩\n    refine' (dif_pos hf).trans _\n    rw [h.onFunction hf.choose_spec]"},{"tailPos":15733,"headPos":15731,"goalsBefore":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"goalsAfter":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"content":"·"},{"tailPos":15830,"headPos":15734,"goalsBefore":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"goalsAfter":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\nhr : LHom.onRelation ϕ r ∈ Set.range fun r => LHom.onRelation ϕ r\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"content":"have hr : ϕ.onRelation r ∈ Set.range fun r : L.Relations n => ϕ.onRelation r := ⟨r, rfl⟩"},{"tailPos":15863,"headPos":15835,"goalsBefore":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\nhr : LHom.onRelation ϕ r ∈ Set.range fun r => LHom.onRelation ϕ r\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"goalsAfter":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\nhr : LHom.onRelation ϕ r ∈ Set.range fun r => LHom.onRelation ϕ r\n⊢ RelMap (Exists.choose hr) xs = RelMap r xs"],"content":"refine' (dif_pos hr).trans _"},{"tailPos":15899,"headPos":15872,"goalsBefore":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\nhr : LHom.onRelation ϕ r ∈ Set.range fun r => LHom.onRelation ϕ r\n⊢ RelMap (Exists.choose hr) xs = RelMap r xs"],"goalsAfter":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\nhr : LHom.onRelation ϕ r ∈ Set.range fun r => LHom.onRelation ϕ r\n⊢ RelMap r xs = RelMap r xs"],"content":"h.onRelation hr.choose_spec"},{"tailPos":15900,"headPos":15899,"goalsBefore":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\nhr : LHom.onRelation ϕ r ∈ Set.range fun r => LHom.onRelation ϕ r\n⊢ RelMap r xs = RelMap r xs"],"goalsAfter":[],"content":"]"},{"tailPos":15900,"headPos":15868,"goalsBefore":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\nhr : LHom.onRelation ϕ r ∈ Set.range fun r => LHom.onRelation ϕ r\n⊢ RelMap (Exists.choose hr) xs = RelMap r xs"],"goalsAfter":[],"content":"rw [h.onRelation hr.choose_spec]"},{"tailPos":15900,"headPos":15734,"goalsBefore":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"goalsAfter":[],"content":"have hr : ϕ.onRelation r ∈ Set.range fun r : L.Relations n => ϕ.onRelation r := ⟨r, rfl⟩\n    refine' (dif_pos hr).trans _\n    rw [h.onRelation hr.choose_spec]"},{"tailPos":15900,"headPos":15731,"goalsBefore":["case refine'_2\nL : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\nthis : Structure L' M := defaultExpansion ϕ M\nn : ℕ\nr : Relations L n\nxs : Fin n → M\n⊢ RelMap (LHom.onRelation ϕ r) xs = RelMap r xs"],"goalsAfter":[],"content":"· have hr : ϕ.onRelation r ∈ Set.range fun r : L.Relations n => ϕ.onRelation r := ⟨r, rfl⟩\n    refine' (dif_pos hr).trans _\n    rw [h.onRelation hr.choose_spec]"},{"tailPos":15900,"headPos":15474,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\n⊢ IsExpansionOn ϕ M"],"goalsAfter":[],"content":"letI := ϕ.defaultExpansion M\n  refine' ⟨fun {n} f xs => _, fun {n} r xs => _⟩\n  · have hf : ϕ.onFunction f ∈ Set.range fun f : L.Functions n => ϕ.onFunction f := ⟨f, rfl⟩\n    refine' (dif_pos hf).trans _\n    rw [h.onFunction hf.choose_spec]\n  · have hr : ϕ.onRelation r ∈ Set.range fun r : L.Relations n => ϕ.onRelation r := ⟨r, rfl⟩\n    refine' (dif_pos hr).trans _\n    rw [h.onRelation hr.choose_spec]"},{"tailPos":15471,"headPos":15469,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\n⊢ IsExpansionOn ϕ M"],"goalsAfter":[],"content":"by"},{"tailPos":15900,"headPos":15469,"goalsBefore":["L : Language\nL' : Language\nM✝ : Type w\ninst✝⁴ : Structure L M✝\nϕ✝ : L →ᴸ L'\nL'' : Language\nϕ : L →ᴸ L'\ninst✝³ : (n : ℕ) → (f : Functions L' n) → Decidable (f ∈ Set.range fun f => LHom.onFunction ϕ f)\ninst✝² : (n : ℕ) → (r : Relations L' n) → Decidable (r ∈ Set.range fun r => LHom.onRelation ϕ r)\nh : LHom.Injective ϕ\nM : Type u_1\ninst✝¹ : Inhabited M\ninst✝ : Structure L M\n⊢ IsExpansionOn ϕ M"],"goalsAfter":[],"content":"by\n  letI := ϕ.defaultExpansion M\n  refine' ⟨fun {n} f xs => _, fun {n} r xs => _⟩\n  · have hf : ϕ.onFunction f ∈ Set.range fun f : L.Functions n => ϕ.onFunction f := ⟨f, rfl⟩\n    refine' (dif_pos hf).trans _\n    rw [h.onFunction hf.choose_spec]\n  · have hr : ϕ.onRelation r ∈ Set.range fun r : L.Relations n => ϕ.onRelation r := ⟨r, rfl⟩\n    refine' (dif_pos hr).trans _\n    rw [h.onRelation hr.choose_spec]"},{"tailPos":17348,"headPos":17332,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp (LHom.comp e.invLHom e'.invLHom) (LHom.comp e'.toLHom e.toLHom) = LHom.id L"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e.invLHom (LHom.comp e'.invLHom (LHom.comp e'.toLHom e.toLHom)) = LHom.id L"],"content":"LHom.comp_assoc,"},{"tailPos":17380,"headPos":17349,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e.invLHom (LHom.comp e'.invLHom (LHom.comp e'.toLHom e.toLHom)) = LHom.id L"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e.invLHom (LHom.comp (LHom.comp e'.invLHom e'.toLHom) e.toLHom) = LHom.id L"],"content":"← LHom.comp_assoc e'.invLHom,"},{"tailPos":17393,"headPos":17381,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e.invLHom (LHom.comp (LHom.comp e'.invLHom e'.toLHom) e.toLHom) = LHom.id L"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e.invLHom (LHom.comp (LHom.id L') e.toLHom) = LHom.id L"],"content":"e'.left_inv,"},{"tailPos":17407,"headPos":17394,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e.invLHom (LHom.comp (LHom.id L') e.toLHom) = LHom.id L"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e.invLHom e.toLHom = LHom.id L"],"content":"LHom.id_comp,"},{"tailPos":17418,"headPos":17408,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e.invLHom e.toLHom = LHom.id L"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.id L = LHom.id L"],"content":"e.left_inv"},{"tailPos":17419,"headPos":17418,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.id L = LHom.id L"],"goalsAfter":[],"content":"]"},{"tailPos":17419,"headPos":17328,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp (LHom.comp e.invLHom e'.invLHom) (LHom.comp e'.toLHom e.toLHom) = LHom.id L"],"goalsAfter":[],"content":"rw [LHom.comp_assoc, ← LHom.comp_assoc e'.invLHom, e'.left_inv, LHom.id_comp, e.left_inv]"},{"tailPos":17323,"headPos":17321,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp (LHom.comp e.invLHom e'.invLHom) (LHom.comp e'.toLHom e.toLHom) = LHom.id L"],"goalsAfter":[],"content":"by"},{"tailPos":17419,"headPos":17321,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp (LHom.comp e.invLHom e'.invLHom) (LHom.comp e'.toLHom e.toLHom) = LHom.id L"],"goalsAfter":[],"content":"by\n    rw [LHom.comp_assoc, ← LHom.comp_assoc e'.invLHom, e'.left_inv, LHom.id_comp, e.left_inv]"},{"tailPos":17448,"headPos":17432,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp (LHom.comp e'.toLHom e.toLHom) (LHom.comp e.invLHom e'.invLHom) = LHom.id L''"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e'.toLHom (LHom.comp e.toLHom (LHom.comp e.invLHom e'.invLHom)) = LHom.id L''"],"content":"LHom.comp_assoc,"},{"tailPos":17478,"headPos":17449,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e'.toLHom (LHom.comp e.toLHom (LHom.comp e.invLHom e'.invLHom)) = LHom.id L''"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e'.toLHom (LHom.comp (LHom.comp e.toLHom e.invLHom) e'.invLHom) = LHom.id L''"],"content":"← LHom.comp_assoc e.toLHom,"},{"tailPos":17491,"headPos":17479,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e'.toLHom (LHom.comp (LHom.comp e.toLHom e.invLHom) e'.invLHom) = LHom.id L''"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e'.toLHom (LHom.comp (LHom.id L') e'.invLHom) = LHom.id L''"],"content":"e.right_inv,"},{"tailPos":17505,"headPos":17492,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e'.toLHom (LHom.comp (LHom.id L') e'.invLHom) = LHom.id L''"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e'.toLHom e'.invLHom = LHom.id L''"],"content":"LHom.id_comp,"},{"tailPos":17518,"headPos":17506,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp e'.toLHom e'.invLHom = LHom.id L''"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.id L'' = LHom.id L''"],"content":"e'.right_inv"},{"tailPos":17519,"headPos":17518,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.id L'' = LHom.id L''"],"goalsAfter":[],"content":"]"},{"tailPos":17519,"headPos":17428,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp (LHom.comp e'.toLHom e.toLHom) (LHom.comp e.invLHom e'.invLHom) = LHom.id L''"],"goalsAfter":[],"content":"rw [LHom.comp_assoc, ← LHom.comp_assoc e.toLHom, e.right_inv, LHom.id_comp, e'.right_inv]"},{"tailPos":17423,"headPos":17421,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp (LHom.comp e'.toLHom e.toLHom) (LHom.comp e.invLHom e'.invLHom) = LHom.id L''"],"goalsAfter":[],"content":"by"},{"tailPos":17519,"headPos":17421,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nL'' : Language\ne'✝ : L' ≃ᴸ L''\ne✝ e : L ≃ᴸ L'\ne' : L' ≃ᴸ L''\n⊢ LHom.comp (LHom.comp e'.toLHom e.toLHom) (LHom.comp e.invLHom e'.invLHom) = LHom.id L''"],"goalsAfter":[],"content":"by\n    rw [LHom.comp_assoc, ← LHom.comp_assoc e.toLHom, e.right_inv, LHom.id_comp, e'.right_inv]"},{"tailPos":18925,"headPos":18921,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\n⊢ card (constantsOn α) = (#α)"],"goalsAfter":[],"content":"simp only [constantsOn, card_mk₂, lift_id', mk_fintype, Fintype.card_of_isEmpty, Nat.cast_zero, add_zero,\n  lift_zero]"},{"tailPos":18920,"headPos":18918,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\n⊢ card (constantsOn α) = (#α)"],"goalsAfter":[],"content":"by"},{"tailPos":18925,"headPos":18918,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\n⊢ card (constantsOn α) = (#α)"],"goalsAfter":[],"content":"by simp"},{"tailPos":19939,"headPos":19906,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\nβ : Type v'\nf : α → β\nfα : α → M\nfβ : β → M\nh : fβ ∘ f = fα\n⊢ LHom.IsExpansionOn (LHom.constantsOnMap f) M"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\nβ : Type v'\nf : α → β\nfα : α → M\nfβ : β → M\nh : fβ ∘ f = fα\nthis : Structure (constantsOn α) M := constantsOn.structure fα\n⊢ LHom.IsExpansionOn (LHom.constantsOnMap f) M"],"content":"letI := constantsOn.structure fα"},{"tailPos":19975,"headPos":19942,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\nβ : Type v'\nf : α → β\nfα : α → M\nfβ : β → M\nh : fβ ∘ f = fα\nthis : Structure (constantsOn α) M := constantsOn.structure fα\n⊢ LHom.IsExpansionOn (LHom.constantsOnMap f) M"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\nβ : Type v'\nf : α → β\nfα : α → M\nfβ : β → M\nh : fβ ∘ f = fα\nthis✝ : Structure (constantsOn α) M := constantsOn.structure fα\nthis : Structure (constantsOn β) M := constantsOn.structure fβ\n⊢ LHom.IsExpansionOn (LHom.constantsOnMap f) M"],"content":"letI := constantsOn.structure fβ"},{"tailPos":20107,"headPos":19978,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\nβ : Type v'\nf : α → β\nfα : α → M\nfβ : β → M\nh : fβ ∘ f = fα\nthis✝ : Structure (constantsOn α) M := constantsOn.structure fα\nthis : Structure (constantsOn β) M := constantsOn.structure fβ\n⊢ LHom.IsExpansionOn (LHom.constantsOnMap f) M"],"goalsAfter":[],"content":"exact\n    ⟨fun {n} => Nat.casesOn n (fun F _x => (congr_fun h F : _)) fun n F => isEmptyElim F, fun R =>\n      isEmptyElim R⟩"},{"tailPos":20107,"headPos":19906,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\nβ : Type v'\nf : α → β\nfα : α → M\nfβ : β → M\nh : fβ ∘ f = fα\n⊢ LHom.IsExpansionOn (LHom.constantsOnMap f) M"],"goalsAfter":[],"content":"letI := constantsOn.structure fα\n  letI := constantsOn.structure fβ\n  exact\n    ⟨fun {n} => Nat.casesOn n (fun F _x => (congr_fun h F : _)) fun n F => isEmptyElim F, fun R =>\n      isEmptyElim R⟩"},{"tailPos":19903,"headPos":19901,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\nβ : Type v'\nf : α → β\nfα : α → M\nfβ : β → M\nh : fβ ∘ f = fα\n⊢ LHom.IsExpansionOn (LHom.constantsOnMap f) M"],"goalsAfter":[],"content":"by"},{"tailPos":20107,"headPos":19901,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type u'\nβ : Type v'\nf : α → β\nfα : α → M\nfβ : β → M\nh : fβ ∘ f = fα\n⊢ LHom.IsExpansionOn (LHom.constantsOnMap f) M"],"goalsAfter":[],"content":"by\n  letI := constantsOn.structure fα\n  letI := constantsOn.structure fβ\n  exact\n    ⟨fun {n} => Nat.casesOn n (fun F _x => (congr_fun h F : _)) fun n F => isEmptyElim F, fun R =>\n      isEmptyElim R⟩"},{"tailPos":20851,"headPos":20837,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ card (L[[α]]) = lift (card L) + lift (#α)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ card (Language.sum L (constantsOn α)) = lift (card L) + lift (#α)"],"content":"withConstants,"},{"tailPos":20861,"headPos":20852,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ card (Language.sum L (constantsOn α)) = lift (card L) + lift (#α)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ lift (card L) + lift (card (constantsOn α)) = lift (card L) + lift (#α)"],"content":"card_sum,"},{"tailPos":20878,"headPos":20862,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ lift (card L) + lift (card (constantsOn α)) = lift (card L) + lift (#α)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ lift (card L) + lift (#α) = lift (card L) + lift (#α)"],"content":"card_constantsOn"},{"tailPos":20879,"headPos":20878,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ lift (card L) + lift (#α) = lift (card L) + lift (#α)"],"goalsAfter":[],"content":"]"},{"tailPos":20879,"headPos":20833,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ card (L[[α]]) = lift (card L) + lift (#α)"],"goalsAfter":[],"content":"rw [withConstants, card_sum, card_constantsOn]"},{"tailPos":20830,"headPos":20828,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ card (L[[α]]) = lift (card L) + lift (#α)"],"goalsAfter":[],"content":"by"},{"tailPos":20879,"headPos":20828,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\n⊢ card (L[[α]]) = lift (card L) + lift (#α)"],"goalsAfter":[],"content":"by\n  rw [withConstants, card_sum, card_constantsOn]"},{"tailPos":22343,"headPos":22325,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) (lhomWithConstants L α) = LHom.id L"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) LHom.sumInl = LHom.id L"],"content":"lhomWithConstants,"},{"tailPos":22365,"headPos":22344,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) LHom.sumInl = LHom.id L"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.id L = LHom.id L"],"content":"LHom.sumElim_comp_inl"},{"tailPos":22366,"headPos":22365,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.id L = LHom.id L"],"goalsAfter":[],"content":"]"},{"tailPos":22366,"headPos":22321,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) (lhomWithConstants L α) = LHom.id L"],"goalsAfter":[],"content":"rw [lhomWithConstants, LHom.sumElim_comp_inl]"},{"tailPos":22320,"headPos":22318,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) (lhomWithConstants L α) = LHom.id L"],"goalsAfter":[],"content":"by"},{"tailPos":22366,"headPos":22318,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) (lhomWithConstants L α) = LHom.id L"],"goalsAfter":[],"content":"by rw [lhomWithConstants, LHom.sumElim_comp_inl]"},{"tailPos":22451,"headPos":22389,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (lhomWithConstants L α) (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) = LHom.id (L[[α]])"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.sumElim LHom.sumInl (LHom.comp LHom.sumInl (LHom.ofIsEmpty (constantsOn α) L)) = LHom.id (L[[α]])"],"content":"simp only [LHom.comp_sumElim, lhomWithConstants, LHom.comp_id]"},{"tailPos":22531,"headPos":22456,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.sumElim LHom.sumInl (LHom.comp LHom.sumInl (LHom.ofIsEmpty (constantsOn α) L)) = LHom.id (L[[α]])"],"goalsAfter":[],"content":"exact _root_.trans (congr rfl (Subsingleton.elim _ _)) LHom.sumElim_inl_inr"},{"tailPos":22531,"headPos":22389,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (lhomWithConstants L α) (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) = LHom.id (L[[α]])"],"goalsAfter":[],"content":"simp only [LHom.comp_sumElim, lhomWithConstants, LHom.comp_id]\n    exact _root_.trans (congr rfl (Subsingleton.elim _ _)) LHom.sumElim_inl_inr"},{"tailPos":22384,"headPos":22382,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (lhomWithConstants L α) (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) = LHom.id (L[[α]])"],"goalsAfter":[],"content":"by"},{"tailPos":22531,"headPos":22382,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nie : IsEmpty α\n⊢ LHom.comp (lhomWithConstants L α) (LHom.sumElim (LHom.id L) (LHom.ofIsEmpty (constantsOn α) L)) = LHom.id (L[[α]])"],"goalsAfter":[],"content":"by\n    simp only [LHom.comp_sumElim, lhomWithConstants, LHom.comp_id]\n    exact _root_.trans (congr rfl (Subsingleton.elim _ _)) LHom.sumElim_inl_inr"},{"tailPos":23809,"headPos":23806,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\n⊢ comp (lhomWithConstantsMap L f) LHom.sumInl = lhomWithConstants L β"],"goalsAfter":["case h_fun.h.h\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\nx✝¹ : ℕ\nx✝ : Functions L x✝¹\n⊢ onFunction (comp (lhomWithConstantsMap L f) LHom.sumInl) x✝ = onFunction (lhomWithConstants L β) x✝","case h_rel.h.h\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\nx✝¹ : ℕ\nx✝ : Relations L x✝¹\n⊢ onRelation (comp (lhomWithConstantsMap L f) LHom.sumInl) x✝ = onRelation (lhomWithConstants L β) x✝"],"content":"ext"},{"tailPos":23813,"headPos":23810,"goalsBefore":["case h_fun.h.h\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\nx✝¹ : ℕ\nx✝ : Functions L x✝¹\n⊢ onFunction (comp (lhomWithConstantsMap L f) LHom.sumInl) x✝ = onFunction (lhomWithConstants L β) x✝","case h_rel.h.h\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\nx✝¹ : ℕ\nx✝ : Relations L x✝¹\n⊢ onRelation (comp (lhomWithConstantsMap L f) LHom.sumInl) x✝ = onRelation (lhomWithConstants L β) x✝"],"goalsAfter":["case h_fun.h.h\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\nx✝¹ : ℕ\nx✝ : Functions L x✝¹\n⊢ onFunction (comp (lhomWithConstantsMap L f) LHom.sumInl) x✝ = onFunction (lhomWithConstants L β) x✝","case h_rel.h.h\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\nx✝¹ : ℕ\nx✝ : Relations L x✝¹\n⊢ onRelation (comp (lhomWithConstantsMap L f) LHom.sumInl) x✝ = onRelation (lhomWithConstants L β) x✝"],"content":"<;>"},{"tailPos":23817,"headPos":23814,"goalsBefore":["case h_fun.h.h\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\nx✝¹ : ℕ\nx✝ : Functions L x✝¹\n⊢ onFunction (comp (lhomWithConstantsMap L f) LHom.sumInl) x✝ = onFunction (lhomWithConstants L β) x✝"],"goalsAfter":[],"content":"rfl"},{"tailPos":23817,"headPos":23814,"goalsBefore":["case h_rel.h.h\nL : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\nx✝¹ : ℕ\nx✝ : Relations L x✝¹\n⊢ onRelation (comp (lhomWithConstantsMap L f) LHom.sumInl) x✝ = onRelation (lhomWithConstants L β) x✝"],"goalsAfter":[],"content":"rfl"},{"tailPos":23817,"headPos":23806,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\n⊢ comp (lhomWithConstantsMap L f) LHom.sumInl = lhomWithConstants L β"],"goalsAfter":[],"content":"ext <;> rfl"},{"tailPos":23805,"headPos":23803,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\n⊢ comp (lhomWithConstantsMap L f) LHom.sumInl = lhomWithConstants L β"],"goalsAfter":[],"content":"by"},{"tailPos":23817,"headPos":23803,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝ : Structure L M\nα : Type w'\nβ : Type u_1\nf : α → β\n⊢ comp (lhomWithConstantsMap L f) LHom.sumInl = lhomWithConstants L β"],"goalsAfter":[],"content":"by ext <;> rfl"},{"tailPos":26047,"headPos":26028,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) x = ↑(Language.con L a)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) default = ↑(Language.con L a)"],"content":"Unique.eq_default x"},{"tailPos":26048,"headPos":26047,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) default = ↑(Language.con L a)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) default = ↑(Language.con L a)"],"content":"]"},{"tailPos":26048,"headPos":26024,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) x = ↑(Language.con L a)"],"goalsAfter":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) default = ↑(Language.con L a)"],"content":"rw [Unique.eq_default x]"},{"tailPos":26121,"headPos":26051,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) default = ↑(Language.con L a)"],"goalsAfter":[],"content":"exact (LHom.sumInr : constantsOn α →ᴸ L.sum _).map_onFunction _ _"},{"tailPos":26121,"headPos":26024,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) x = ↑(Language.con L a)"],"goalsAfter":[],"content":"rw [Unique.eq_default x]\n  exact (LHom.sumInr : constantsOn α →ᴸ L.sum _).map_onFunction _ _"},{"tailPos":26021,"headPos":26019,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) x = ↑(Language.con L a)"],"goalsAfter":[],"content":"by"},{"tailPos":26121,"headPos":26019,"goalsBefore":["L : Language\nL' : Language\nM : Type w\ninst✝¹ : Structure L M\nα : Type u_1\ninst✝ : Structure (constantsOn α) M\na : α\nx : Fin 0 → M\n⊢ funMap (Sum.inr a) x = ↑(Language.con L a)"],"goalsAfter":[],"content":"by\n  rw [Unique.eq_default x]\n  exact (LHom.sumInr : constantsOn α →ᴸ L.sum _).map_onFunction _ _"}]