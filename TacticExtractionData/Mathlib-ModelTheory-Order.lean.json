[{"tailPos":6928,"headPos":6907,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ OrderedStructure Language.order M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ LHom.IsExpansionOn (orderLHom Language.order) M"],"content":"orderedStructure_iff,"},{"tailPos":6944,"headPos":6929,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ LHom.IsExpansionOn (orderLHom Language.order) M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ LHom.IsExpansionOn (LHom.id Language.order) M"],"content":"orderLHom_order"},{"tailPos":6945,"headPos":6944,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ LHom.IsExpansionOn (LHom.id Language.order) M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ LHom.IsExpansionOn (LHom.id Language.order) M"],"content":"]"},{"tailPos":6945,"headPos":6903,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ OrderedStructure Language.order M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ LHom.IsExpansionOn (LHom.id Language.order) M"],"content":"rw [orderedStructure_iff, orderLHom_order]"},{"tailPos":6977,"headPos":6948,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ LHom.IsExpansionOn (LHom.id Language.order) M"],"goalsAfter":[],"content":"exact LHom.id_isExpansionOn M"},{"tailPos":6977,"headPos":6903,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ OrderedStructure Language.order M"],"goalsAfter":[],"content":"rw [orderedStructure_iff, orderLHom_order]\n  exact LHom.id_isExpansionOn M"},{"tailPos":6900,"headPos":6898,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ OrderedStructure Language.order M"],"goalsAfter":[],"content":"by"},{"tailPos":6977,"headPos":6898,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ OrderedStructure Language.order M"],"goalsAfter":[],"content":"by\n  rw [orderedStructure_iff, orderLHom_order]\n  exact LHom.id_isExpansionOn M"},{"tailPos":7355,"headPos":7155,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ M ⊨ preorderTheory Language.order"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ (Reflexive fun x y => x ≤ y) ∧ Transitive fun x y => x ≤ y"],"content":"simp only [preorderTheory, Theory.model_iff, Set.mem_insert_iff, Set.mem_singleton_iff,\n    forall_eq_or_imp, Relations.realize_reflexive, relMap_apply₂, forall_eq,\n    Relations.realize_transitive]"},{"tailPos":7400,"headPos":7358,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ (Reflexive fun x y => x ≤ y) ∧ Transitive fun x y => x ≤ y"],"goalsAfter":[],"content":"exact ⟨le_refl, fun _ _ _ => le_trans⟩"},{"tailPos":7400,"headPos":7155,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ M ⊨ preorderTheory Language.order"],"goalsAfter":[],"content":"simp only [preorderTheory, Theory.model_iff, Set.mem_insert_iff, Set.mem_singleton_iff,\n    forall_eq_or_imp, Relations.realize_reflexive, relMap_apply₂, forall_eq,\n    Relations.realize_transitive]\n  exact ⟨le_refl, fun _ _ _ => le_trans⟩"},{"tailPos":7152,"headPos":7150,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ M ⊨ preorderTheory Language.order"],"goalsAfter":[],"content":"by"},{"tailPos":7400,"headPos":7150,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ M ⊨ preorderTheory Language.order"],"goalsAfter":[],"content":"by\n  simp only [preorderTheory, Theory.model_iff, Set.mem_insert_iff, Set.mem_singleton_iff,\n    forall_eq_or_imp, Relations.realize_reflexive, relMap_apply₂, forall_eq,\n    Relations.realize_transitive]\n  exact ⟨le_refl, fun _ _ _ => le_trans⟩"},{"tailPos":7812,"headPos":7575,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : PartialOrder M\n⊢ M ⊨ partialOrderTheory Language.order"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : PartialOrder M\n⊢ (Reflexive fun x y => x ≤ y) ∧ (AntiSymmetric fun x y => x ≤ y) ∧ Transitive fun x y => x ≤ y"],"content":"simp only [partialOrderTheory, Theory.model_iff, Set.mem_insert_iff, Set.mem_singleton_iff,\n    forall_eq_or_imp, Relations.realize_reflexive, relMap_apply₂, Relations.realize_antisymmetric,\n    forall_eq, Relations.realize_transitive]"},{"tailPos":7881,"headPos":7815,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : PartialOrder M\n⊢ (Reflexive fun x y => x ≤ y) ∧ (AntiSymmetric fun x y => x ≤ y) ∧ Transitive fun x y => x ≤ y"],"goalsAfter":[],"content":"exact ⟨le_refl, fun _ _ => le_antisymm, fun _ _ _ => le_trans⟩"},{"tailPos":7881,"headPos":7575,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : PartialOrder M\n⊢ M ⊨ partialOrderTheory Language.order"],"goalsAfter":[],"content":"simp only [partialOrderTheory, Theory.model_iff, Set.mem_insert_iff, Set.mem_singleton_iff,\n    forall_eq_or_imp, Relations.realize_reflexive, relMap_apply₂, Relations.realize_antisymmetric,\n    forall_eq, Relations.realize_transitive]\n  exact ⟨le_refl, fun _ _ => le_antisymm, fun _ _ _ => le_trans⟩"},{"tailPos":7572,"headPos":7570,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : PartialOrder M\n⊢ M ⊨ partialOrderTheory Language.order"],"goalsAfter":[],"content":"by"},{"tailPos":7881,"headPos":7570,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : PartialOrder M\n⊢ M ⊨ partialOrderTheory Language.order"],"goalsAfter":[],"content":"by\n  simp only [partialOrderTheory, Theory.model_iff, Set.mem_insert_iff, Set.mem_singleton_iff,\n    forall_eq_or_imp, Relations.realize_reflexive, relMap_apply₂, Relations.realize_antisymmetric,\n    forall_eq, Relations.realize_transitive]\n  exact ⟨le_refl, fun _ _ => le_antisymm, fun _ _ _ => le_trans⟩"},{"tailPos":8323,"headPos":8062,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LinearOrder M\n⊢ M ⊨ linearOrderTheory Language.order"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LinearOrder M\n⊢ (Reflexive fun x y => x ≤ y) ∧\n    (AntiSymmetric fun x y => x ≤ y) ∧ (Transitive fun x y => x ≤ y) ∧ Total fun x y => x ≤ y"],"content":"simp only [linearOrderTheory, Theory.model_iff, Set.mem_insert_iff, Set.mem_singleton_iff,\n    forall_eq_or_imp, Relations.realize_reflexive, relMap_apply₂, Relations.realize_antisymmetric,\n    Relations.realize_transitive, forall_eq, Relations.realize_total]"},{"tailPos":8402,"headPos":8326,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LinearOrder M\n⊢ (Reflexive fun x y => x ≤ y) ∧\n    (AntiSymmetric fun x y => x ≤ y) ∧ (Transitive fun x y => x ≤ y) ∧ Total fun x y => x ≤ y"],"goalsAfter":[],"content":"exact ⟨le_refl, fun _ _ => le_antisymm, fun _ _ _ => le_trans, le_total⟩"},{"tailPos":8402,"headPos":8062,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LinearOrder M\n⊢ M ⊨ linearOrderTheory Language.order"],"goalsAfter":[],"content":"simp only [linearOrderTheory, Theory.model_iff, Set.mem_insert_iff, Set.mem_singleton_iff,\n    forall_eq_or_imp, Relations.realize_reflexive, relMap_apply₂, Relations.realize_antisymmetric,\n    Relations.realize_transitive, forall_eq, Relations.realize_total]\n  exact ⟨le_refl, fun _ _ => le_antisymm, fun _ _ _ => le_trans, le_total⟩"},{"tailPos":8059,"headPos":8057,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LinearOrder M\n⊢ M ⊨ linearOrderTheory Language.order"],"goalsAfter":[],"content":"by"},{"tailPos":8402,"headPos":8057,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LinearOrder M\n⊢ M ⊨ linearOrderTheory Language.order"],"goalsAfter":[],"content":"by\n  simp only [linearOrderTheory, Theory.model_iff, Set.mem_insert_iff, Set.mem_singleton_iff,\n    forall_eq_or_imp, Relations.realize_reflexive, relMap_apply₂, Relations.realize_antisymmetric,\n    Relations.realize_transitive, forall_eq, Relations.realize_total]\n  exact ⟨le_refl, fun _ _ => le_antisymm, fun _ _ _ => le_trans, le_total⟩"},{"tailPos":8716,"headPos":8695,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap (LHom.onRelation (orderLHom L) leSymb) ![a, b] ↔ a ≤ b"],"content":"← orderLHom_leSymb,"},{"tailPos":8736,"headPos":8717,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap (LHom.onRelation (orderLHom L) leSymb) ![a, b] ↔ a ≤ b"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"content":"LHom.map_onRelation"},{"tailPos":8737,"headPos":8736,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"content":"]"},{"tailPos":8737,"headPos":8691,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"content":"rw [← orderLHom_leSymb, LHom.map_onRelation]"},{"tailPos":8743,"headPos":8740,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"goalsAfter":[],"content":"rfl"},{"tailPos":8743,"headPos":8691,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"goalsAfter":[],"content":"rw [← orderLHom_leSymb, LHom.map_onRelation]\n  rfl"},{"tailPos":8688,"headPos":8686,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"goalsAfter":[],"content":"by"},{"tailPos":8743,"headPos":8686,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\na b : M\n⊢ RelMap leSymb ![a, b] ↔ a ≤ b"],"goalsAfter":[],"content":"by\n  rw [← orderLHom_leSymb, LHom.map_onRelation]\n  rfl"},{"tailPos":9083,"headPos":9069,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\nt₁ t₂ : Term L (α ⊕ Fin n)\nv : α → M\nxs : Fin n → M\n⊢ BoundedFormula.Realize (le t₁ t₂) v xs ↔ realize (Sum.elim v xs) t₁ ≤ realize (Sum.elim v xs) t₂"],"goalsAfter":[],"content":"simp [Term.le]"},{"tailPos":9066,"headPos":9064,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\nt₁ t₂ : Term L (α ⊕ Fin n)\nv : α → M\nxs : Fin n → M\n⊢ BoundedFormula.Realize (le t₁ t₂) v xs ↔ realize (Sum.elim v xs) t₁ ≤ realize (Sum.elim v xs) t₂"],"goalsAfter":[],"content":"by"},{"tailPos":9083,"headPos":9064,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : LE M\ninst✝ : OrderedStructure L M\nt₁ t₂ : Term L (α ⊕ Fin n)\nv : α → M\nxs : Fin n → M\n⊢ BoundedFormula.Realize (le t₁ t₂) v xs ↔ realize (Sum.elim v xs) t₁ ≤ realize (Sum.elim v xs) t₂"],"goalsAfter":[],"content":"by\n  simp [Term.le]"},{"tailPos":9447,"headPos":9415,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : Preorder M\ninst✝ : OrderedStructure L M\nt₁ t₂ : Term L (α ⊕ Fin n)\nv : α → M\nxs : Fin n → M\n⊢ BoundedFormula.Realize (lt t₁ t₂) v xs ↔ realize (Sum.elim v xs) t₁ < realize (Sum.elim v xs) t₂"],"goalsAfter":[],"content":"simp [Term.lt, lt_iff_le_not_le]"},{"tailPos":9412,"headPos":9410,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : Preorder M\ninst✝ : OrderedStructure L M\nt₁ t₂ : Term L (α ⊕ Fin n)\nv : α → M\nxs : Fin n → M\n⊢ BoundedFormula.Realize (lt t₁ t₂) v xs ↔ realize (Sum.elim v xs) t₁ < realize (Sum.elim v xs) t₂"],"goalsAfter":[],"content":"by"},{"tailPos":9447,"headPos":9410,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : IsOrdered L\ninst✝² : Structure L M\ninst✝¹ : Preorder M\ninst✝ : OrderedStructure L M\nt₁ t₂ : Term L (α ⊕ Fin n)\nv : α → M\nxs : Fin n → M\n⊢ BoundedFormula.Realize (lt t₁ t₂) v xs ↔ realize (Sum.elim v xs) t₁ < realize (Sum.elim v xs) t₂"],"goalsAfter":[],"content":"by\n  simp [Term.lt, lt_iff_le_not_le]"},{"tailPos":9879,"headPos":9678,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ M ⊨ noTopOrderSentence Language.order ↔ NoTopOrder M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ (∀ (a : M), ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 1 ≤ Fin.snoc (Fin.snoc default a) a_1 0) ↔ NoTopOrder M"],"content":"simp only [noTopOrderSentence, Sentence.Realize, Formula.Realize, BoundedFormula.realize_all,\n    BoundedFormula.realize_ex, BoundedFormula.realize_not, Term.realize, Term.realize_le,\n    Sum.elim_inr]"},{"tailPos":9926,"headPos":9882,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ (∀ (a : M), ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 1 ≤ Fin.snoc (Fin.snoc default a) a_1 0) ↔ NoTopOrder M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ NoTopOrder M → ∀ (a : M), ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 1 ≤ Fin.snoc (Fin.snoc default a) a_1 0"],"content":"refine' ⟨fun h => ⟨fun a => h a⟩, _⟩"},{"tailPos":9938,"headPos":9929,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ NoTopOrder M → ∀ (a : M), ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 1 ≤ Fin.snoc (Fin.snoc default a) a_1 0"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\nh : NoTopOrder M\na : M\n⊢ ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 1 ≤ Fin.snoc (Fin.snoc default a) a_1 0"],"content":"intro h a"},{"tailPos":9962,"headPos":9941,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\nh : NoTopOrder M\na : M\n⊢ ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 1 ≤ Fin.snoc (Fin.snoc default a) a_1 0"],"goalsAfter":[],"content":"exact exists_not_le a"},{"tailPos":9962,"headPos":9678,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ M ⊨ noTopOrderSentence Language.order ↔ NoTopOrder M"],"goalsAfter":[],"content":"simp only [noTopOrderSentence, Sentence.Realize, Formula.Realize, BoundedFormula.realize_all,\n    BoundedFormula.realize_ex, BoundedFormula.realize_not, Term.realize, Term.realize_le,\n    Sum.elim_inr]\n  refine' ⟨fun h => ⟨fun a => h a⟩, _⟩\n  intro h a\n  exact exists_not_le a"},{"tailPos":9675,"headPos":9673,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ M ⊨ noTopOrderSentence Language.order ↔ NoTopOrder M"],"goalsAfter":[],"content":"by"},{"tailPos":9962,"headPos":9673,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ M ⊨ noTopOrderSentence Language.order ↔ NoTopOrder M"],"goalsAfter":[],"content":"by\n  simp only [noTopOrderSentence, Sentence.Realize, Formula.Realize, BoundedFormula.realize_all,\n    BoundedFormula.realize_ex, BoundedFormula.realize_not, Term.realize, Term.realize_le,\n    Sum.elim_inr]\n  refine' ⟨fun h => ⟨fun a => h a⟩, _⟩\n  intro h a\n  exact exists_not_le a"},{"tailPos":10576,"headPos":10375,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ M ⊨ noBotOrderSentence Language.order ↔ NoBotOrder M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ (∀ (a : M), ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 0 ≤ Fin.snoc (Fin.snoc default a) a_1 1) ↔ NoBotOrder M"],"content":"simp only [noBotOrderSentence, Sentence.Realize, Formula.Realize, BoundedFormula.realize_all,\n    BoundedFormula.realize_ex, BoundedFormula.realize_not, Term.realize, Term.realize_le,\n    Sum.elim_inr]"},{"tailPos":10623,"headPos":10579,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ (∀ (a : M), ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 0 ≤ Fin.snoc (Fin.snoc default a) a_1 1) ↔ NoBotOrder M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ NoBotOrder M → ∀ (a : M), ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 0 ≤ Fin.snoc (Fin.snoc default a) a_1 1"],"content":"refine' ⟨fun h => ⟨fun a => h a⟩, _⟩"},{"tailPos":10635,"headPos":10626,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ NoBotOrder M → ∀ (a : M), ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 0 ≤ Fin.snoc (Fin.snoc default a) a_1 1"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\nh : NoBotOrder M\na : M\n⊢ ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 0 ≤ Fin.snoc (Fin.snoc default a) a_1 1"],"content":"intro h a"},{"tailPos":10659,"headPos":10638,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\nh : NoBotOrder M\na : M\n⊢ ∃ a_1, ¬Fin.snoc (Fin.snoc default a) a_1 0 ≤ Fin.snoc (Fin.snoc default a) a_1 1"],"goalsAfter":[],"content":"exact exists_not_ge a"},{"tailPos":10659,"headPos":10375,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ M ⊨ noBotOrderSentence Language.order ↔ NoBotOrder M"],"goalsAfter":[],"content":"simp only [noBotOrderSentence, Sentence.Realize, Formula.Realize, BoundedFormula.realize_all,\n    BoundedFormula.realize_ex, BoundedFormula.realize_not, Term.realize, Term.realize_le,\n    Sum.elim_inr]\n  refine' ⟨fun h => ⟨fun a => h a⟩, _⟩\n  intro h a\n  exact exists_not_ge a"},{"tailPos":10372,"headPos":10370,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ M ⊨ noBotOrderSentence Language.order ↔ NoBotOrder M"],"goalsAfter":[],"content":"by"},{"tailPos":10659,"headPos":10370,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : LE M\n⊢ M ⊨ noBotOrderSentence Language.order ↔ NoBotOrder M"],"goalsAfter":[],"content":"by\n  simp only [noBotOrderSentence, Sentence.Realize, Formula.Realize, BoundedFormula.realize_all,\n    BoundedFormula.realize_ex, BoundedFormula.realize_not, Term.realize, Term.realize_le,\n    Sum.elim_inr]\n  refine' ⟨fun h => ⟨fun a => h a⟩, _⟩\n  intro h a\n  exact exists_not_ge a"},{"tailPos":11342,"headPos":11109,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ M ⊨ denselyOrderedSentence Language.order ↔ DenselyOrdered M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ (∀ (a a_1 : M),\n      Fin.snoc (Fin.snoc default a) a_1 0 < Fin.snoc (Fin.snoc default a) a_1 1 →\n        ∃ a_3,\n          Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 0 < Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 2 ∧\n            Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 2 < Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 1) ↔\n    DenselyOrdered M"],"content":"simp only [denselyOrderedSentence, Sentence.Realize, Formula.Realize,\n    BoundedFormula.realize_imp, BoundedFormula.realize_all, Term.realize, Term.realize_lt,\n    Sum.elim_inr, BoundedFormula.realize_ex, BoundedFormula.realize_inf]"},{"tailPos":11399,"headPos":11345,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ (∀ (a a_1 : M),\n      Fin.snoc (Fin.snoc default a) a_1 0 < Fin.snoc (Fin.snoc default a) a_1 1 →\n        ∃ a_3,\n          Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 0 < Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 2 ∧\n            Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 2 < Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 1) ↔\n    DenselyOrdered M"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ DenselyOrdered M →\n    ∀ (a a_1 : M),\n      Fin.snoc (Fin.snoc default a) a_1 0 < Fin.snoc (Fin.snoc default a) a_1 1 →\n        ∃ a_3,\n          Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 0 < Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 2 ∧\n            Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 2 < Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 1"],"content":"refine' ⟨fun h => ⟨fun a b ab => h a b ab⟩, _⟩"},{"tailPos":11416,"headPos":11402,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ DenselyOrdered M →\n    ∀ (a a_1 : M),\n      Fin.snoc (Fin.snoc default a) a_1 0 < Fin.snoc (Fin.snoc default a) a_1 1 →\n        ∃ a_3,\n          Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 0 < Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 2 ∧\n            Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 2 < Fin.snoc (Fin.snoc (Fin.snoc default a) a_1) a_3 1"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\nh : DenselyOrdered M\na b : M\nab : Fin.snoc (Fin.snoc default a) b 0 < Fin.snoc (Fin.snoc default a) b 1\n⊢ ∃ a_1,\n    Fin.snoc (Fin.snoc (Fin.snoc default a) b) a_1 0 < Fin.snoc (Fin.snoc (Fin.snoc default a) b) a_1 2 ∧\n      Fin.snoc (Fin.snoc (Fin.snoc default a) b) a_1 2 < Fin.snoc (Fin.snoc (Fin.snoc default a) b) a_1 1"],"content":"intro h a b ab"},{"tailPos":11442,"headPos":11419,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\nh : DenselyOrdered M\na b : M\nab : Fin.snoc (Fin.snoc default a) b 0 < Fin.snoc (Fin.snoc default a) b 1\n⊢ ∃ a_1,\n    Fin.snoc (Fin.snoc (Fin.snoc default a) b) a_1 0 < Fin.snoc (Fin.snoc (Fin.snoc default a) b) a_1 2 ∧\n      Fin.snoc (Fin.snoc (Fin.snoc default a) b) a_1 2 < Fin.snoc (Fin.snoc (Fin.snoc default a) b) a_1 1"],"goalsAfter":[],"content":"exact exists_between ab"},{"tailPos":11442,"headPos":11109,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ M ⊨ denselyOrderedSentence Language.order ↔ DenselyOrdered M"],"goalsAfter":[],"content":"simp only [denselyOrderedSentence, Sentence.Realize, Formula.Realize,\n    BoundedFormula.realize_imp, BoundedFormula.realize_all, Term.realize, Term.realize_lt,\n    Sum.elim_inr, BoundedFormula.realize_ex, BoundedFormula.realize_inf]\n  refine' ⟨fun h => ⟨fun a b ab => h a b ab⟩, _⟩\n  intro h a b ab\n  exact exists_between ab"},{"tailPos":11106,"headPos":11104,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ M ⊨ denselyOrderedSentence Language.order ↔ DenselyOrdered M"],"goalsAfter":[],"content":"by"},{"tailPos":11442,"headPos":11104,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝ : Preorder M\n⊢ M ⊨ denselyOrderedSentence Language.order ↔ DenselyOrdered M"],"goalsAfter":[],"content":"by\n  simp only [denselyOrderedSentence, Sentence.Realize, Formula.Realize,\n    BoundedFormula.realize_imp, BoundedFormula.realize_all, Term.realize, Term.realize_lt,\n    Sum.elim_inr, BoundedFormula.realize_ex, BoundedFormula.realize_inf]\n  refine' ⟨fun h => ⟨fun a b ab => h a b ab⟩, _⟩\n  intro h a b ab\n  exact exists_between ab"},{"tailPos":12123,"headPos":11927,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ M ⊨ dlo Language.order"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ ∀ (a : Sentence Language.order), a ∈ linearOrderTheory Language.order → M ⊨ a"],"content":"simp only [dlo, Set.union_insert, Set.union_singleton, Theory.model_iff, Set.mem_insert_iff,\n    forall_eq_or_imp, realize_noTopOrder, realize_noBotOrder, realize_denselyOrdered,\n    true_and_iff]"},{"tailPos":12150,"headPos":12130,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ ∀ (a : Sentence Language.order), a ∈ linearOrderTheory Language.order → M ⊨ a"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ M ⊨ linearOrderTheory Language.order"],"content":"← Theory.model_iff"},{"tailPos":12151,"headPos":12150,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ M ⊨ linearOrderTheory Language.order"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ M ⊨ linearOrderTheory Language.order"],"content":"]"},{"tailPos":12151,"headPos":12126,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ ∀ (a : Sentence Language.order), a ∈ linearOrderTheory Language.order → M ⊨ a"],"goalsAfter":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ M ⊨ linearOrderTheory Language.order"],"content":"rw [← Theory.model_iff]"},{"tailPos":12168,"headPos":12154,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ M ⊨ linearOrderTheory Language.order"],"goalsAfter":[],"content":"infer_instance"},{"tailPos":12168,"headPos":11927,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ M ⊨ dlo Language.order"],"goalsAfter":[],"content":"simp only [dlo, Set.union_insert, Set.union_singleton, Theory.model_iff, Set.mem_insert_iff,\n    forall_eq_or_imp, realize_noTopOrder, realize_noBotOrder, realize_denselyOrdered,\n    true_and_iff]\n  rw [← Theory.model_iff]\n  infer_instance"},{"tailPos":11924,"headPos":11922,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ M ⊨ dlo Language.order"],"goalsAfter":[],"content":"by"},{"tailPos":12168,"headPos":11922,"goalsBefore":["L : Language\nα : Type w\nM : Type w'\nn : ℕ\ninst✝³ : LinearOrder M\ninst✝² : DenselyOrdered M\ninst✝¹ : NoTopOrder M\ninst✝ : NoBotOrder M\n⊢ M ⊨ dlo Language.order"],"goalsAfter":[],"content":"by\n  simp only [dlo, Set.union_insert, Set.union_singleton, Theory.model_iff, Set.mem_insert_iff,\n    forall_eq_or_imp, realize_noTopOrder, realize_noBotOrder, realize_denselyOrdered,\n    true_and_iff]\n  rw [← Theory.model_iff]\n  infer_instance"}]