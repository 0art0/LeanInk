[{"tailPos":2236,"headPos":2226,"goalsBefore":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ (fun X Y x => τ X ⟶ τ Y) (σ X) (σ Y) (PushQuiver.arrow f)"],"goalsAfter":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ τ (σ X) ⟶ τ (σ Y)"],"content":"dsimp only"},{"tailPos":2255,"headPos":2247,"goalsBefore":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ τ (σ X) ⟶ τ (σ Y)"],"goalsAfter":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ φ.obj X ⟶ τ (σ Y)"],"content":"← h X,"},{"tailPos":2263,"headPos":2256,"goalsBefore":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ φ.obj X ⟶ τ (σ Y)"],"goalsAfter":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ φ.obj X ⟶ φ.obj Y"],"content":"← h Y"},{"tailPos":2264,"headPos":2263,"goalsBefore":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ φ.obj X ⟶ φ.obj Y"],"goalsAfter":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ φ.obj X ⟶ φ.obj Y"],"content":"]"},{"tailPos":2264,"headPos":2243,"goalsBefore":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ τ (σ X) ⟶ τ (σ Y)"],"goalsAfter":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ φ.obj X ⟶ φ.obj Y"],"content":"rw [← h X, ← h Y]"},{"tailPos":2285,"headPos":2271,"goalsBefore":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ φ.obj X ⟶ φ.obj Y"],"goalsAfter":[],"content":"exact φ.map f"},{"tailPos":2285,"headPos":2226,"goalsBefore":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ (fun X Y x => τ X ⟶ τ Y) (σ X) (σ Y) (PushQuiver.arrow f)"],"goalsAfter":[],"content":"dsimp only\n      rw [← h X, ← h Y]\n      exact φ.map f"},{"tailPos":2219,"headPos":2217,"goalsBefore":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ (fun X Y x => τ X ⟶ τ Y) (σ X) (σ Y) (PushQuiver.arrow f)"],"goalsAfter":[],"content":"by"},{"tailPos":2285,"headPos":2217,"goalsBefore":["V : Type ?u.1200\ninst✝¹ : Quiver V\nW : Type ?u.1207\nσ : V → W\nW' : Type ?u.1214\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ (fun X Y x => τ X ⟶ τ Y) (σ X) (σ Y) (PushQuiver.arrow f)"],"goalsAfter":[],"content":"by\n      dsimp only\n      rw [← h X, ← h Y]\n      exact φ.map f"},{"tailPos":2516,"headPos":2495,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ of σ ⋙q lift σ φ τ h = φ"],"goalsAfter":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X : V), (of σ ⋙q lift σ φ τ h).obj X = φ.obj X","case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of σ ⋙q lift σ φ τ h).map f =\n      Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n        (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"content":"fapply Prefunctor.ext"},{"tailPos":2521,"headPos":2519,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X : V), (of σ ⋙q lift σ φ τ h).obj X = φ.obj X","case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of σ ⋙q lift σ φ τ h).map f =\n      Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n        (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"goalsAfter":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X : V), (of σ ⋙q lift σ φ τ h).obj X = φ.obj X"],"content":"·"},{"tailPos":2530,"headPos":2522,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X : V), (of σ ⋙q lift σ φ τ h).obj X = φ.obj X"],"goalsAfter":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX : V\n⊢ (of σ ⋙q lift σ φ τ h).obj X = φ.obj X"],"content":"rintro X"},{"tailPos":2566,"headPos":2535,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX : V\n⊢ (of σ ⋙q lift σ φ τ h).obj X = φ.obj X"],"goalsAfter":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX : V\n⊢ (lift σ φ τ h).obj ((of σ).obj X) = φ.obj X"],"content":"simp only [Prefunctor.comp_obj]"},{"tailPos":2584,"headPos":2571,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX : V\n⊢ (lift σ φ τ h).obj ((of σ).obj X) = φ.obj X"],"goalsAfter":["case h_obj.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX : V\n⊢ φ.obj X = (lift σ φ τ h).obj ((of σ).obj X)"],"content":"apply Eq.symm"},{"tailPos":2598,"headPos":2589,"goalsBefore":["case h_obj.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX : V\n⊢ φ.obj X = (lift σ φ τ h).obj ((of σ).obj X)"],"goalsAfter":[],"content":"exact h X"},{"tailPos":2598,"headPos":2522,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X : V), (of σ ⋙q lift σ φ τ h).obj X = φ.obj X"],"goalsAfter":[],"content":"rintro X\n    simp only [Prefunctor.comp_obj]\n    apply Eq.symm\n    exact h X"},{"tailPos":2598,"headPos":2519,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X : V), (of σ ⋙q lift σ φ τ h).obj X = φ.obj X","case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of σ ⋙q lift σ φ τ h).map f =\n      Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n        (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"goalsAfter":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of σ ⋙q lift σ φ τ h).map f =\n      Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n        (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"content":"· rintro X\n    simp only [Prefunctor.comp_obj]\n    apply Eq.symm\n    exact h X"},{"tailPos":2603,"headPos":2601,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of σ ⋙q lift σ φ τ h).map f =\n      Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n        (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"goalsAfter":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of σ ⋙q lift σ φ τ h).map f =\n      Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n        (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"content":"·"},{"tailPos":2616,"headPos":2604,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of σ ⋙q lift σ φ τ h).map f =\n      Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n        (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"goalsAfter":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ (of σ ⋙q lift σ φ τ h).map f =\n    Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n      (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"content":"rintro X Y f"},{"tailPos":2652,"headPos":2621,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ (of σ ⋙q lift σ φ τ h).map f =\n    Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n      (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"goalsAfter":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ (lift σ φ τ h).map ((of σ).map f) =\n    (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f"],"content":"simp only [Prefunctor.comp_map]"},{"tailPos":2672,"headPos":2657,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ (lift σ φ τ h).map ((of σ).map f) =\n    (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f"],"goalsAfter":["case h_map.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq ((lift σ φ τ h).map ((of σ).map f))\n    ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f)"],"content":"apply eq_of_heq"},{"tailPos":2713,"headPos":2687,"goalsBefore":["case h_map.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq ((lift σ φ τ h).map ((of σ).map f))\n    ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f)"],"goalsAfter":["case h_map.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))\n    ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f)"],"content":"apply (cast_heq _ _).trans"},{"tailPos":2713,"headPos":2687,"goalsBefore":["case h_map.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))\n    ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f)"],"goalsAfter":["case h_map.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq (φ.map f) ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f)"],"content":"apply (cast_heq _ _).trans"},{"tailPos":2713,"headPos":2677,"goalsBefore":["case h_map.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq ((lift σ φ τ h).map ((of σ).map f))\n    ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f)"],"goalsAfter":["case h_map.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq (φ.map f) ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f)"],"content":"iterate 2 apply (cast_heq _ _).trans"},{"tailPos":2732,"headPos":2718,"goalsBefore":["case h_map.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq (φ.map f) ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f)"],"goalsAfter":["case h_map.h.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f) (φ.map f)"],"content":"apply HEq.symm"},{"tailPos":2764,"headPos":2737,"goalsBefore":["case h_map.h.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq ((_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y) ▸ (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f) (φ.map f)"],"goalsAfter":["case h_map.h.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq ((_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f) (φ.map f)"],"content":"apply (eqRec_heq _ _).trans"},{"tailPos":2886,"headPos":2880,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ ∀ {α : Sort ?u.2594} {γ : Sort ?u.2596} {β : α → γ → Sort ?u.2598} {a a' : α} (p : a = a') (g : γ) (b : β a g),\n    HEq (p ▸ b) b"],"goalsAfter":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\nα✝ : Sort ?u.2594\nγ✝ : Sort ?u.2596\nβ✝ : α✝ → γ✝ → Sort ?u.2598\na✝ a'✝ : α✝\np✝ : a✝ = a'✝\ng✝ : γ✝\nb✝ : β✝ a✝ g✝\n⊢ HEq (p✝ ▸ b✝) b✝"],"content":"intros"},{"tailPos":2903,"headPos":2893,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\nα✝ : Sort ?u.2594\nγ✝ : Sort ?u.2596\nβ✝ : α✝ → γ✝ → Sort ?u.2598\na✝ a'✝ : α✝\np✝ : a✝ = a'✝\ng✝ : γ✝\nb✝ : β✝ a✝ g✝\n⊢ HEq (p✝ ▸ b✝) b✝"],"goalsAfter":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\nα✝ : Sort ?u.2594\nγ✝ : Sort ?u.2596\nβ✝ : α✝ → γ✝ → Sort ?u.2598\na'✝ : α✝\ng✝ : γ✝\nb✝ : β✝ a'✝ g✝\n⊢ HEq ((_ : a'✝ = a'✝) ▸ b✝) b✝"],"content":"subst_vars"},{"tailPos":2913,"headPos":2910,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\nα✝ : Sort ?u.2594\nγ✝ : Sort ?u.2596\nβ✝ : α✝ → γ✝ → Sort ?u.2598\na'✝ : α✝\ng✝ : γ✝\nb✝ : β✝ a'✝ g✝\n⊢ HEq ((_ : a'✝ = a'✝) ▸ b✝) b✝"],"goalsAfter":[],"content":"rfl"},{"tailPos":2913,"headPos":2880,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ ∀ {α : Sort ?u.2594} {γ : Sort ?u.2596} {β : α → γ → Sort ?u.2598} {a a' : α} (p : a = a') (g : γ) (b : β a g),\n    HEq (p ▸ b) b"],"goalsAfter":[],"content":"intros\n      subst_vars\n      rfl"},{"tailPos":2873,"headPos":2871,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ ∀ {α : Sort ?u.2594} {γ : Sort ?u.2596} {β : α → γ → Sort ?u.2598} {a a' : α} (p : a = a') (g : γ) (b : β a g),\n    HEq (p ▸ b) b"],"goalsAfter":[],"content":"by"},{"tailPos":2913,"headPos":2871,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ ∀ {α : Sort ?u.2594} {γ : Sort ?u.2596} {β : α → γ → Sort ?u.2598} {a a' : α} (p : a = a') (g : γ) (b : β a g),\n    HEq (p ▸ b) b"],"goalsAfter":[],"content":"by\n      intros\n      subst_vars\n      rfl"},{"tailPos":2913,"headPos":2769,"goalsBefore":["case h_map.h.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\n⊢ HEq ((_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f) (φ.map f)"],"goalsAfter":["case h_map.h.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\nthis :\n  ∀ {α : Sort ?u.2594} {γ : Sort ?u.2596} {β : α → γ → Sort ?u.2598} {a a' : α} (p : a = a') (g : γ) (b : β a g),\n    HEq (p ▸ b) b\n⊢ HEq ((_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f) (φ.map f)"],"content":"have : ∀ {α γ} {β : α → γ → Sort _} {a a'} (p : a = a') g (b : β a g), HEq (p ▸ b) b := by\n      intros\n      subst_vars\n      rfl"},{"tailPos":2928,"headPos":2918,"goalsBefore":["case h_map.h.h\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nX Y : V\nf : X ⟶ Y\nthis :\n  ∀ {α : Sort ?u.2594} {γ : Sort ?u.2596} {β : α → γ → Sort ?u.2598} {a a' : α} (p : a = a') (g : γ) (b : β a g),\n    HEq (p ▸ b) b\n⊢ HEq ((_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) ▸ φ.map f) (φ.map f)"],"goalsAfter":[],"content":"apply this"},{"tailPos":2928,"headPos":2604,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of σ ⋙q lift σ φ τ h).map f =\n      Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n        (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"goalsAfter":[],"content":"rintro X Y f\n    simp only [Prefunctor.comp_map]\n    apply eq_of_heq\n    iterate 2 apply (cast_heq _ _).trans\n    apply HEq.symm\n    apply (eqRec_heq _ _).trans\n    have : ∀ {α γ} {β : α → γ → Sort _} {a a'} (p : a = a') g (b : β a g), HEq (p ▸ b) b := by\n      intros\n      subst_vars\n      rfl\n    apply this"},{"tailPos":2928,"headPos":2601,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ ∀ (X Y : V) (f : X ⟶ Y),\n    (of σ ⋙q lift σ φ τ h).map f =\n      Eq.recOn (_ : φ.obj Y = (of σ ⋙q lift σ φ τ h).obj Y)\n        (Eq.recOn (_ : φ.obj X = (of σ ⋙q lift σ φ τ h).obj X) (φ.map f))"],"goalsAfter":[],"content":"· rintro X Y f\n    simp only [Prefunctor.comp_map]\n    apply eq_of_heq\n    iterate 2 apply (cast_heq _ _).trans\n    apply HEq.symm\n    apply (eqRec_heq _ _).trans\n    have : ∀ {α γ} {β : α → γ → Sort _} {a a'} (p : a = a') g (b : β a g), HEq (p ▸ b) b := by\n      intros\n      subst_vars\n      rfl\n    apply this"},{"tailPos":2928,"headPos":2495,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ of σ ⋙q lift σ φ τ h = φ"],"goalsAfter":[],"content":"fapply Prefunctor.ext\n  · rintro X\n    simp only [Prefunctor.comp_obj]\n    apply Eq.symm\n    exact h X\n  · rintro X Y f\n    simp only [Prefunctor.comp_map]\n    apply eq_of_heq\n    iterate 2 apply (cast_heq _ _).trans\n    apply HEq.symm\n    apply (eqRec_heq _ _).trans\n    have : ∀ {α γ} {β : α → γ → Sort _} {a a'} (p : a = a') g (b : β a g), HEq (p ▸ b) b := by\n      intros\n      subst_vars\n      rfl\n    apply this"},{"tailPos":2492,"headPos":2490,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ of σ ⋙q lift σ φ τ h = φ"],"goalsAfter":[],"content":"by"},{"tailPos":2928,"headPos":2490,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_5\nσ : V → W\nW' : Type u_3\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\n⊢ of σ ⋙q lift σ φ τ h = φ"],"goalsAfter":[],"content":"by\n  fapply Prefunctor.ext\n  · rintro X\n    simp only [Prefunctor.comp_obj]\n    apply Eq.symm\n    exact h X\n  · rintro X Y f\n    simp only [Prefunctor.comp_map]\n    apply eq_of_heq\n    iterate 2 apply (cast_heq _ _).trans\n    apply HEq.symm\n    apply (eqRec_heq _ _).trans\n    have : ∀ {α γ} {β : α → γ → Sort _} {a a'} (p : a = a') g (b : β a g), HEq (p ▸ b) b := by\n      intros\n      subst_vars\n      rfl\n    apply this"},{"tailPos":3134,"headPos":3113,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ Φ = lift σ φ τ h"],"goalsAfter":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ Φ =\n    { obj := τ,\n      map :=\n        @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n          id\n            (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n              (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }"],"content":"dsimp only [of, lift]"},{"tailPos":3158,"headPos":3137,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ Φ =\n    { obj := τ,\n      map :=\n        @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n          id\n            (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n              (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }"],"goalsAfter":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X : Push σ),\n    Φ.obj X =\n      { obj := τ,\n            map :=\n              @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                id\n                  (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                    (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n        X","case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X Y : Push σ) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              Y =\n            Φ.obj Y)\n        (Eq.recOn\n          (_ :\n            { obj := τ,\n                    map :=\n                      @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                        id\n                          (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                            (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n                X =\n              Φ.obj X)\n          ({ obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n            f))"],"content":"fapply Prefunctor.ext"},{"tailPos":3163,"headPos":3161,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X : Push σ),\n    Φ.obj X =\n      { obj := τ,\n            map :=\n              @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                id\n                  (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                    (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n        X","case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X Y : Push σ) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              Y =\n            Φ.obj Y)\n        (Eq.recOn\n          (_ :\n            { obj := τ,\n                    map :=\n                      @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                        id\n                          (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                            (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n                X =\n              Φ.obj X)\n          ({ obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n            f))"],"goalsAfter":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X : Push σ),\n    Φ.obj X =\n      { obj := τ,\n            map :=\n              @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                id\n                  (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                    (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n        X"],"content":"·"},{"tailPos":3171,"headPos":3164,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X : Push σ),\n    Φ.obj X =\n      { obj := τ,\n            map :=\n              @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                id\n                  (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                    (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n        X"],"goalsAfter":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\nX : Push σ\n⊢ Φ.obj X =\n    { obj := τ,\n          map :=\n            @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n              id\n                (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                  (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n      X"],"content":"intro X"},{"tailPos":3185,"headPos":3176,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\nX : Push σ\n⊢ Φ.obj X =\n    { obj := τ,\n          map :=\n            @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n              id\n                (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                  (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n      X"],"goalsAfter":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\nX : Push σ\n⊢ Φ.obj X = τ X"],"content":"simp only"},{"tailPos":3199,"headPos":3194,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\nX : Push σ\n⊢ Φ.obj X = τ X"],"goalsAfter":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\nX : Push σ\n⊢ τ X = τ X"],"content":"Φ₀"},{"tailPos":3200,"headPos":3199,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\nX : Push σ\n⊢ τ X = τ X"],"goalsAfter":[],"content":"]"},{"tailPos":3200,"headPos":3190,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\nX : Push σ\n⊢ Φ.obj X = τ X"],"goalsAfter":[],"content":"rw [Φ₀]"},{"tailPos":3200,"headPos":3164,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X : Push σ),\n    Φ.obj X =\n      { obj := τ,\n            map :=\n              @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                id\n                  (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                    (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n        X"],"goalsAfter":[],"content":"intro X\n    simp only\n    rw [Φ₀]"},{"tailPos":3200,"headPos":3161,"goalsBefore":["case h_obj\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X : Push σ),\n    Φ.obj X =\n      { obj := τ,\n            map :=\n              @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                id\n                  (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                    (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n        X","case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X Y : Push σ) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              Y =\n            Φ.obj Y)\n        (Eq.recOn\n          (_ :\n            { obj := τ,\n                    map :=\n                      @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                        id\n                          (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                            (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n                X =\n              Φ.obj X)\n          ({ obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n            f))"],"goalsAfter":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X Y : Push σ) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              Y =\n            Φ.obj Y)\n        (Eq.recOn\n          (_ :\n            { obj := τ,\n                    map :=\n                      @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                        id\n                          (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                            (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n                X =\n              Φ.obj X)\n          ({ obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n            f))"],"content":"· intro X\n    simp only\n    rw [Φ₀]"},{"tailPos":3205,"headPos":3203,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X Y : Push σ) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              Y =\n            Φ.obj Y)\n        (Eq.recOn\n          (_ :\n            { obj := τ,\n                    map :=\n                      @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                        id\n                          (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                            (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n                X =\n              Φ.obj X)\n          ({ obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n            f))"],"goalsAfter":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X Y : Push σ) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              Y =\n            Φ.obj Y)\n        (Eq.recOn\n          (_ :\n            { obj := τ,\n                    map :=\n                      @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                        id\n                          (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                            (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n                X =\n              Φ.obj X)\n          ({ obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n            f))"],"content":"·"},{"tailPos":3223,"headPos":3206,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X Y : Push σ) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              Y =\n            Φ.obj Y)\n        (Eq.recOn\n          (_ :\n            { obj := τ,\n                    map :=\n                      @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                        id\n                          (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                            (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n                X =\n              Φ.obj X)\n          ({ obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n            f))"],"goalsAfter":["case h_map.arrow\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\nX✝ Y✝ : V\nf✝ : X✝ ⟶ Y✝\n⊢ Φ.map (PushQuiver.arrow f✝) =\n    Eq.recOn\n      (_ :\n        { obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n            (σ Y✝) =\n          Φ.obj (σ Y✝))\n      (Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              (σ X✝) =\n            Φ.obj (σ X✝))\n        ({ obj := τ,\n              map :=\n                @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                  id\n                    (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                      (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n          (PushQuiver.arrow f✝)))"],"content":"rintro _ _ ⟨⟩"},{"tailPos":3238,"headPos":3228,"goalsBefore":["case h_map.arrow\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\nX✝ Y✝ : V\nf✝ : X✝ ⟶ Y✝\n⊢ Φ.map (PushQuiver.arrow f✝) =\n    Eq.recOn\n      (_ :\n        { obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n            (σ Y✝) =\n          Φ.obj (σ Y✝))\n      (Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              (σ X✝) =\n            Φ.obj (σ X✝))\n        ({ obj := τ,\n              map :=\n                @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                  id\n                    (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                      (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n          (PushQuiver.arrow f✝)))"],"goalsAfter":["case h_map.arrow\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nΦ : Push σ ⥤q W'\nX✝ Y✝ : V\nf✝ : X✝ ⟶ Y✝\nh : ∀ (x : V), (of σ ⋙q Φ).obj x = Φ.obj (σ x)\n⊢ Φ.map (PushQuiver.arrow f✝) =\n    Eq.recOn\n      (_ :\n        { obj := Φ.obj,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => Φ.obj X ⟶ Φ.obj Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (Φ.obj (σ X) ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)))\n                        (Eq.mpr (_ : ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ (of σ ⋙q Φ).obj Y))\n                          ((of σ ⋙q Φ).map f))) }.obj\n            (σ Y✝) =\n          Φ.obj (σ Y✝))\n      (Eq.recOn\n        (_ :\n          { obj := Φ.obj,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => Φ.obj X ⟶ Φ.obj Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (Φ.obj (σ X) ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)))\n                          (Eq.mpr (_ : ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ (of σ ⋙q Φ).obj Y))\n                            ((of σ ⋙q Φ).map f))) }.obj\n              (σ X✝) =\n            Φ.obj (σ X✝))\n        ({ obj := Φ.obj,\n              map :=\n                @PushQuiver.rec V inst✝¹ W σ (fun X Y x => Φ.obj X ⟶ Φ.obj Y) fun X Y f =>\n                  id\n                    (Eq.mpr (_ : (Φ.obj (σ X) ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)))\n                      (Eq.mpr (_ : ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ (of σ ⋙q Φ).obj Y))\n                        ((of σ ⋙q Φ).map f))) }.map\n          (PushQuiver.arrow f✝)))"],"content":"subst_vars"},{"tailPos":3283,"headPos":3243,"goalsBefore":["case h_map.arrow\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nΦ : Push σ ⥤q W'\nX✝ Y✝ : V\nf✝ : X✝ ⟶ Y✝\nh : ∀ (x : V), (of σ ⋙q Φ).obj x = Φ.obj (σ x)\n⊢ Φ.map (PushQuiver.arrow f✝) =\n    Eq.recOn\n      (_ :\n        { obj := Φ.obj,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => Φ.obj X ⟶ Φ.obj Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (Φ.obj (σ X) ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)))\n                        (Eq.mpr (_ : ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ (of σ ⋙q Φ).obj Y))\n                          ((of σ ⋙q Φ).map f))) }.obj\n            (σ Y✝) =\n          Φ.obj (σ Y✝))\n      (Eq.recOn\n        (_ :\n          { obj := Φ.obj,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => Φ.obj X ⟶ Φ.obj Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (Φ.obj (σ X) ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)))\n                          (Eq.mpr (_ : ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ (of σ ⋙q Φ).obj Y))\n                            ((of σ ⋙q Φ).map f))) }.obj\n              (σ X✝) =\n            Φ.obj (σ X✝))\n        ({ obj := Φ.obj,\n              map :=\n                @PushQuiver.rec V inst✝¹ W σ (fun X Y x => Φ.obj X ⟶ Φ.obj Y) fun X Y f =>\n                  id\n                    (Eq.mpr (_ : (Φ.obj (σ X) ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)))\n                      (Eq.mpr (_ : ((of σ ⋙q Φ).obj X ⟶ Φ.obj (σ Y)) = ((of σ ⋙q Φ).obj X ⟶ (of σ ⋙q Φ).obj Y))\n                        ((of σ ⋙q Φ).map f))) }.map\n          (PushQuiver.arrow f✝)))"],"goalsAfter":["case h_map.arrow\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nΦ : Push σ ⥤q W'\nX✝ Y✝ : V\nf✝ : X✝ ⟶ Y✝\nh : ∀ (x : V), (of σ ⋙q Φ).obj x = Φ.obj (σ x)\n⊢ Φ.map (PushQuiver.arrow f✝) =\n    id\n      (Eq.mpr (_ : (Φ.obj (σ X✝) ⟶ Φ.obj (σ Y✝)) = ((of σ ⋙q Φ).obj X✝ ⟶ Φ.obj (σ Y✝)))\n        (Eq.mpr (_ : ((of σ ⋙q Φ).obj X✝ ⟶ Φ.obj (σ Y✝)) = ((of σ ⋙q Φ).obj X✝ ⟶ (of σ ⋙q Φ).obj Y✝))\n          (Φ.map ((of σ).map f✝))))"],"content":"simp only [Prefunctor.comp_map, cast_eq]"},{"tailPos":3291,"headPos":3288,"goalsBefore":["case h_map.arrow\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nΦ : Push σ ⥤q W'\nX✝ Y✝ : V\nf✝ : X✝ ⟶ Y✝\nh : ∀ (x : V), (of σ ⋙q Φ).obj x = Φ.obj (σ x)\n⊢ Φ.map (PushQuiver.arrow f✝) =\n    id\n      (Eq.mpr (_ : (Φ.obj (σ X✝) ⟶ Φ.obj (σ Y✝)) = ((of σ ⋙q Φ).obj X✝ ⟶ Φ.obj (σ Y✝)))\n        (Eq.mpr (_ : ((of σ ⋙q Φ).obj X✝ ⟶ Φ.obj (σ Y✝)) = ((of σ ⋙q Φ).obj X✝ ⟶ (of σ ⋙q Φ).obj Y✝))\n          (Φ.map ((of σ).map f✝))))"],"goalsAfter":[],"content":"rfl"},{"tailPos":3291,"headPos":3206,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X Y : Push σ) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              Y =\n            Φ.obj Y)\n        (Eq.recOn\n          (_ :\n            { obj := τ,\n                    map :=\n                      @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                        id\n                          (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                            (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n                X =\n              Φ.obj X)\n          ({ obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n            f))"],"goalsAfter":[],"content":"rintro _ _ ⟨⟩\n    subst_vars\n    simp only [Prefunctor.comp_map, cast_eq]\n    rfl"},{"tailPos":3291,"headPos":3203,"goalsBefore":["case h_map\nV : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ ∀ (X Y : Push σ) (f : X ⟶ Y),\n    Φ.map f =\n      Eq.recOn\n        (_ :\n          { obj := τ,\n                  map :=\n                    @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                      id\n                        (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                          (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n              Y =\n            Φ.obj Y)\n        (Eq.recOn\n          (_ :\n            { obj := τ,\n                    map :=\n                      @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                        id\n                          (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                            (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.obj\n                X =\n              Φ.obj X)\n          ({ obj := τ,\n                map :=\n                  @PushQuiver.rec V inst✝¹ W σ (fun X Y x => τ X ⟶ τ Y) fun X Y f =>\n                    id\n                      (Eq.mpr (_ : (τ (σ X) ⟶ τ (σ Y)) = (φ.obj X ⟶ τ (σ Y)))\n                        (Eq.mpr (_ : (φ.obj X ⟶ τ (σ Y)) = (φ.obj X ⟶ φ.obj Y)) (φ.map f))) }.map\n            f))"],"goalsAfter":[],"content":"· rintro _ _ ⟨⟩\n    subst_vars\n    simp only [Prefunctor.comp_map, cast_eq]\n    rfl"},{"tailPos":3291,"headPos":3113,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ Φ = lift σ φ τ h"],"goalsAfter":[],"content":"dsimp only [of, lift]\n  fapply Prefunctor.ext\n  · intro X\n    simp only\n    rw [Φ₀]\n  · rintro _ _ ⟨⟩\n    subst_vars\n    simp only [Prefunctor.comp_map, cast_eq]\n    rfl"},{"tailPos":3110,"headPos":3108,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ Φ = lift σ φ τ h"],"goalsAfter":[],"content":"by"},{"tailPos":3291,"headPos":3108,"goalsBefore":["V : Type u_1\ninst✝¹ : Quiver V\nW : Type u_3\nσ : V → W\nW' : Type u_5\ninst✝ : Quiver W'\nφ : V ⥤q W'\nτ : W → W'\nh : ∀ (x : V), φ.obj x = τ (σ x)\nΦ : Push σ ⥤q W'\nΦ₀ : Φ.obj = τ\nΦcomp : of σ ⋙q Φ = φ\n⊢ Φ = lift σ φ τ h"],"goalsAfter":[],"content":"by\n  dsimp only [of, lift]\n  fapply Prefunctor.ext\n  · intro X\n    simp only\n    rw [Φ₀]\n  · rintro _ _ ⟨⟩\n    subst_vars\n    simp only [Prefunctor.comp_map, cast_eq]\n    rfl"}]