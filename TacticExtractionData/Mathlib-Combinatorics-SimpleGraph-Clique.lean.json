[{"tailPos":1740,"headPos":1728,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ IsClique G s ↔ induce s G = ⊤"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj ↔ induce s G = ⊤"],"content":"isClique_iff"},{"tailPos":1741,"headPos":1740,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj ↔ induce s G = ⊤"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj ↔ induce s G = ⊤"],"content":"]"},{"tailPos":1741,"headPos":1724,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ IsClique G s ↔ induce s G = ⊤"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj ↔ induce s G = ⊤"],"content":"rw [isClique_iff]"},{"tailPos":1755,"headPos":1744,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj ↔ induce s G = ⊤"],"goalsAfter":["case mp\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj → induce s G = ⊤","case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ induce s G = ⊤ → Set.Pairwise s G.Adj"],"content":"constructor"},{"tailPos":1760,"headPos":1758,"goalsBefore":["case mp\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj → induce s G = ⊤","case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ induce s G = ⊤ → Set.Pairwise s G.Adj"],"goalsAfter":["case mp\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj → induce s G = ⊤"],"content":"·"},{"tailPos":1768,"headPos":1761,"goalsBefore":["case mp\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj → induce s G = ⊤"],"goalsAfter":["case mp\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : Set.Pairwise s G.Adj\n⊢ induce s G = ⊤"],"content":"intro h"},{"tailPos":1800,"headPos":1773,"goalsBefore":["case mp\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : Set.Pairwise s G.Adj\n⊢ induce s G = ⊤"],"goalsAfter":["case mp.Adj.h.mk.h.mk.a\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : Set.Pairwise s G.Adj\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\n⊢ Adj (induce s G) { val := v, property := hv } { val := w, property := hw } ↔\n    Adj ⊤ { val := v, property := hv } { val := w, property := hw }"],"content":"ext ⟨v, hv⟩ ⟨w, hw⟩"},{"tailPos":1877,"headPos":1805,"goalsBefore":["case mp.Adj.h.mk.h.mk.a\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : Set.Pairwise s G.Adj\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\n⊢ Adj (induce s G) { val := v, property := hv } { val := w, property := hw } ↔\n    Adj ⊤ { val := v, property := hv } { val := w, property := hw }"],"goalsAfter":["case mp.Adj.h.mk.h.mk.a\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : Set.Pairwise s G.Adj\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\n⊢ Adj G (↑(Function.Embedding.subtype fun x => x ∈ s) { val := v, property := hv })\n      (↑(Function.Embedding.subtype fun x => x ∈ s) { val := w, property := hw }) ↔\n    ¬v = w"],"content":"simp only [comap_Adj, Subtype.coe_mk, top_adj, Ne.def, Subtype.mk_eq_mk]"},{"tailPos":1909,"headPos":1882,"goalsBefore":["case mp.Adj.h.mk.h.mk.a\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : Set.Pairwise s G.Adj\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\n⊢ Adj G (↑(Function.Embedding.subtype fun x => x ∈ s) { val := v, property := hv })\n      (↑(Function.Embedding.subtype fun x => x ∈ s) { val := w, property := hw }) ↔\n    ¬v = w"],"goalsAfter":[],"content":"exact ⟨Adj.ne, h hv hw⟩"},{"tailPos":1909,"headPos":1761,"goalsBefore":["case mp\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj → induce s G = ⊤"],"goalsAfter":[],"content":"intro h\n    ext ⟨v, hv⟩ ⟨w, hw⟩\n    simp only [comap_Adj, Subtype.coe_mk, top_adj, Ne.def, Subtype.mk_eq_mk]\n    exact ⟨Adj.ne, h hv hw⟩"},{"tailPos":1909,"headPos":1758,"goalsBefore":["case mp\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ Set.Pairwise s G.Adj → induce s G = ⊤","case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ induce s G = ⊤ → Set.Pairwise s G.Adj"],"goalsAfter":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ induce s G = ⊤ → Set.Pairwise s G.Adj"],"content":"· intro h\n    ext ⟨v, hv⟩ ⟨w, hw⟩\n    simp only [comap_Adj, Subtype.coe_mk, top_adj, Ne.def, Subtype.mk_eq_mk]\n    exact ⟨Adj.ne, h hv hw⟩"},{"tailPos":1914,"headPos":1912,"goalsBefore":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ induce s G = ⊤ → Set.Pairwise s G.Adj"],"goalsAfter":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ induce s G = ⊤ → Set.Pairwise s G.Adj"],"content":"·"},{"tailPos":1936,"headPos":1915,"goalsBefore":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ induce s G = ⊤ → Set.Pairwise s G.Adj"],"goalsAfter":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\n⊢ Adj G v w"],"content":"intro h v hv w hw hne"},{"tailPos":2002,"headPos":1941,"goalsBefore":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\n⊢ Adj G v w"],"goalsAfter":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 :\n  Adj (induce s G) { val := v, property := hv } { val := w, property := hw } =\n    Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n⊢ Adj G v w"],"content":"have h2 : (G.induce s).Adj ⟨v, hv⟩ ⟨w, hw⟩ = _ := rfl"},{"tailPos":2030,"headPos":2029,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 :\n  Adj (induce s G) { val := v, property := hv } { val := w, property := hw } =\n    Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n| Adj (induce s G) { val := v, property := hv } { val := w, property := hw }"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 :\n  Adj (induce s G) { val := v, property := hv } { val := w, property := hw } =\n    Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n| Adj ⊤ { val := v, property := hv } { val := w, property := hw }"],"content":"h"},{"tailPos":2031,"headPos":2025,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 :\n  Adj (induce s G) { val := v, property := hv } { val := w, property := hw } =\n    Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n| Adj (induce s G) { val := v, property := hv } { val := w, property := hw }"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 :\n  Adj (induce s G) { val := v, property := hv } { val := w, property := hw } =\n    Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n| Adj ⊤ { val := v, property := hv } { val := w, property := hw }"],"content":"rw [h]"},{"tailPos":2031,"headPos":2007,"goalsBefore":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 :\n  Adj (induce s G) { val := v, property := hv } { val := w, property := hw } =\n    Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n⊢ Adj G v w"],"goalsAfter":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 :\n  Adj ⊤ { val := v, property := hv } { val := w, property := hw } =\n    Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n⊢ Adj G v w"],"content":"conv_lhs at h2 => rw [h]"},{"tailPos":2098,"headPos":2036,"goalsBefore":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 :\n  Adj ⊤ { val := v, property := hv } { val := w, property := hw } =\n    Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n⊢ Adj G v w"],"goalsAfter":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 : ¬v = w ↔ Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n⊢ Adj G v w"],"content":"simp only [top_adj, ne_eq, Subtype.mk.injEq, eq_iff_iff] at h2"},{"tailPos":2117,"headPos":2103,"goalsBefore":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : induce s G = ⊤\nv : α\nhv : v ∈ s\nw : α\nhw : w ∈ s\nhne : v ≠ w\nh2 : ¬v = w ↔ Adj (induce s G) { val := v, property := hv } { val := w, property := hw }\n⊢ Adj G v w"],"goalsAfter":[],"content":"exact h2.1 hne"},{"tailPos":2117,"headPos":1915,"goalsBefore":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ induce s G = ⊤ → Set.Pairwise s G.Adj"],"goalsAfter":[],"content":"intro h v hv w hw hne\n    have h2 : (G.induce s).Adj ⟨v, hv⟩ ⟨w, hw⟩ = _ := rfl\n    conv_lhs at h2 => rw [h]\n    simp only [top_adj, ne_eq, Subtype.mk.injEq, eq_iff_iff] at h2\n    exact h2.1 hne"},{"tailPos":2117,"headPos":1912,"goalsBefore":["case mpr\nα : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ induce s G = ⊤ → Set.Pairwise s G.Adj"],"goalsAfter":[],"content":"· intro h v hv w hw hne\n    have h2 : (G.induce s).Adj ⟨v, hv⟩ ⟨w, hw⟩ = _ := rfl\n    conv_lhs at h2 => rw [h]\n    simp only [top_adj, ne_eq, Subtype.mk.injEq, eq_iff_iff] at h2\n    exact h2.1 hne"},{"tailPos":2117,"headPos":1724,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ IsClique G s ↔ induce s G = ⊤"],"goalsAfter":[],"content":"rw [isClique_iff]\n  constructor\n  · intro h\n    ext ⟨v, hv⟩ ⟨w, hw⟩\n    simp only [comap_Adj, Subtype.coe_mk, top_adj, Ne.def, Subtype.mk_eq_mk]\n    exact ⟨Adj.ne, h hv hw⟩\n  · intro h v hv w hw hne\n    have h2 : (G.induce s).Adj ⟨v, hv⟩ ⟨w, hw⟩ = _ := rfl\n    conv_lhs at h2 => rw [h]\n    simp only [top_adj, ne_eq, Subtype.mk.injEq, eq_iff_iff] at h2\n    exact h2.1 hne"},{"tailPos":1721,"headPos":1719,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ IsClique G s ↔ induce s G = ⊤"],"goalsAfter":[],"content":"by"},{"tailPos":2117,"headPos":1719,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\n⊢ IsClique G s ↔ induce s G = ⊤"],"goalsAfter":[],"content":"by\n  rw [isClique_iff]\n  constructor\n  · intro h\n    ext ⟨v, hv⟩ ⟨w, hw⟩\n    simp only [comap_Adj, Subtype.coe_mk, top_adj, Ne.def, Subtype.mk_eq_mk]\n    exact ⟨Adj.ne, h hv hw⟩\n  · intro h v hv w hw hne\n    have h2 : (G.induce s).Adj ⟨v, hv⟩ ⟨w, hw⟩ = _ := rfl\n    conv_lhs at h2 => rw [h]\n    simp only [top_adj, ne_eq, Subtype.mk.injEq, eq_iff_iff] at h2\n    exact h2.1 hne"},{"tailPos":2430,"headPos":2421,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ IsClique G s → IsClique H s"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ IsClique G s → IsClique H s"],"content":"simp_rw ["},{"tailPos":2442,"headPos":2430,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ IsClique G s → IsClique H s"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ Set.Pairwise s G.Adj → Set.Pairwise s H.Adj"],"content":"simp only [isClique_iff]"},{"tailPos":2443,"headPos":2421,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ IsClique G s → IsClique H s"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ Set.Pairwise s G.Adj → Set.Pairwise s H.Adj"],"content":"simp_rw [isClique_iff]"},{"tailPos":2472,"headPos":2446,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ Set.Pairwise s G.Adj → Set.Pairwise s H.Adj"],"goalsAfter":[],"content":"exact Set.Pairwise.mono' h"},{"tailPos":2472,"headPos":2421,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ IsClique G s → IsClique H s"],"goalsAfter":[],"content":"simp_rw [isClique_iff]\n  exact Set.Pairwise.mono' h"},{"tailPos":2418,"headPos":2416,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ IsClique G s → IsClique H s"],"goalsAfter":[],"content":"by"},{"tailPos":2472,"headPos":2416,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : G ≤ H\n⊢ IsClique G s → IsClique H s"],"goalsAfter":[],"content":"by\n  simp_rw [isClique_iff]\n  exact Set.Pairwise.mono' h"},{"tailPos":2622,"headPos":2613,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ IsClique G s → IsClique G t"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ IsClique G s → IsClique G t"],"content":"simp_rw ["},{"tailPos":2634,"headPos":2622,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ IsClique G s → IsClique G t"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ Set.Pairwise s G.Adj → Set.Pairwise t G.Adj"],"content":"simp only [isClique_iff]"},{"tailPos":2635,"headPos":2613,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ IsClique G s → IsClique G t"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ Set.Pairwise s G.Adj → Set.Pairwise t G.Adj"],"content":"simp_rw [isClique_iff]"},{"tailPos":2663,"headPos":2638,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ Set.Pairwise s G.Adj → Set.Pairwise t G.Adj"],"goalsAfter":[],"content":"exact Set.Pairwise.mono h"},{"tailPos":2663,"headPos":2613,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ IsClique G s → IsClique G t"],"goalsAfter":[],"content":"simp_rw [isClique_iff]\n  exact Set.Pairwise.mono h"},{"tailPos":2610,"headPos":2608,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ IsClique G s → IsClique G t"],"goalsAfter":[],"content":"by"},{"tailPos":2663,"headPos":2608,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns t : Set α\nh : t ⊆ s\n⊢ IsClique G s → IsClique G t"],"goalsAfter":[],"content":"by\n  simp_rw [isClique_iff]\n  exact Set.Pairwise.mono h"},{"tailPos":3843,"headPos":3834,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsNClique G n s → IsNClique H n s"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsNClique G n s → IsNClique H n s"],"content":"simp_rw ["},{"tailPos":3856,"headPos":3843,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsNClique G n s → IsNClique H n s"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsClique G ↑s ∧ Finset.card s = n → IsClique H ↑s ∧ Finset.card s = n"],"content":"simp only [isNClique_iff]"},{"tailPos":3857,"headPos":3834,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsNClique G n s → IsNClique H n s"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsClique G ↑s ∧ Finset.card s = n → IsClique H ↑s ∧ Finset.card s = n"],"content":"simp_rw [isNClique_iff]"},{"tailPos":3896,"headPos":3860,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsClique G ↑s ∧ Finset.card s = n → IsClique H ↑s ∧ Finset.card s = n"],"goalsAfter":[],"content":"exact And.imp_left (IsClique.mono h)"},{"tailPos":3896,"headPos":3834,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsNClique G n s → IsNClique H n s"],"goalsAfter":[],"content":"simp_rw [isNClique_iff]\n  exact And.imp_left (IsClique.mono h)"},{"tailPos":3831,"headPos":3829,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsNClique G n s → IsNClique H n s"],"goalsAfter":[],"content":"by"},{"tailPos":3896,"headPos":3829,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\nh : G ≤ H\n⊢ IsNClique G n s → IsNClique H n s"],"goalsAfter":[],"content":"by\n  simp_rw [isNClique_iff]\n  exact And.imp_left (IsClique.mono h)"},{"tailPos":4088,"headPos":4074,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ IsNClique ⊥ n s ↔ n ≤ 1 ∧ Finset.card s = n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ IsClique ⊥ ↑s ∧ Finset.card s = n ↔ n ≤ 1 ∧ Finset.card s = n"],"content":"isNClique_iff,"},{"tailPos":4105,"headPos":4089,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ IsClique ⊥ ↑s ∧ Finset.card s = n ↔ n ≤ 1 ∧ Finset.card s = n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ Set.Subsingleton ↑s ∧ Finset.card s = n ↔ n ≤ 1 ∧ Finset.card s = n"],"content":"isClique_bot_iff"},{"tailPos":4106,"headPos":4105,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ Set.Subsingleton ↑s ∧ Finset.card s = n ↔ n ≤ 1 ∧ Finset.card s = n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ Set.Subsingleton ↑s ∧ Finset.card s = n ↔ n ≤ 1 ∧ Finset.card s = n"],"content":"]"},{"tailPos":4106,"headPos":4070,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ IsNClique ⊥ n s ↔ n ≤ 1 ∧ Finset.card s = n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ Set.Subsingleton ↑s ∧ Finset.card s = n ↔ n ≤ 1 ∧ Finset.card s = n"],"content":"rw [isNClique_iff, isClique_bot_iff]"},{"tailPos":4133,"headPos":4109,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ Set.Subsingleton ↑s ∧ Finset.card s = n ↔ n ≤ 1 ∧ Finset.card s = n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ Finset.card s = n → (Set.Subsingleton ↑s ↔ n ≤ 1)"],"content":"refine' and_congr_left _"},{"tailPos":4146,"headPos":4136,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ Finset.card s = n → (Set.Subsingleton ↑s ↔ n ≤ 1)"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ns : Finset α\n⊢ Set.Subsingleton ↑s ↔ Finset.card s ≤ 1"],"content":"rintro rfl"},{"tailPos":4171,"headPos":4149,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ns : Finset α\n⊢ Set.Subsingleton ↑s ↔ Finset.card s ≤ 1"],"goalsAfter":[],"content":"exact card_le_one.symm"},{"tailPos":4171,"headPos":4070,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ IsNClique ⊥ n s ↔ n ≤ 1 ∧ Finset.card s = n"],"goalsAfter":[],"content":"rw [isNClique_iff, isClique_bot_iff]\n  refine' and_congr_left _\n  rintro rfl\n  exact card_le_one.symm"},{"tailPos":4067,"headPos":4065,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ IsNClique ⊥ n s ↔ n ≤ 1 ∧ Finset.card s = n"],"goalsAfter":[],"content":"by"},{"tailPos":4171,"headPos":4065,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\n⊢ IsNClique ⊥ n s ↔ n ≤ 1 ∧ Finset.card s = n"],"goalsAfter":[],"content":"by\n  rw [isNClique_iff, isClique_bot_iff]\n  refine' and_congr_left _\n  rintro rfl\n  exact card_le_one.symm"},{"tailPos":4480,"headPos":4388,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ IsNClique G 3 {a, b, c} ↔ Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"simp only [isNClique_iff, isClique_iff, Set.pairwise_insert_of_symmetric G.symm, coe_insert]"},{"tailPos":4503,"headPos":4483,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hab : a = b"},{"tailPos":4507,"headPos":4504,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"<;>"},{"tailPos":4528,"headPos":4508,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hbc : b = c"},{"tailPos":4528,"headPos":4508,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hbc : b = c"},{"tailPos":4528,"headPos":4483,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hab : a = b <;> by_cases hbc : b = c"},{"tailPos":4532,"headPos":4529,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"<;>"},{"tailPos":4553,"headPos":4533,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hac : a = c"},{"tailPos":4553,"headPos":4533,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hac : a = c"},{"tailPos":4553,"headPos":4533,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hac : a = c"},{"tailPos":4553,"headPos":4533,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hac : a = c"},{"tailPos":4553,"headPos":4483,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hab : a = b <;> by_cases hbc : b = c <;> by_cases hac : a = c"},{"tailPos":4557,"headPos":4554,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"<;>"},{"tailPos":4568,"headPos":4558,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c"],"content":"subst_vars"},{"tailPos":4568,"headPos":4558,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c"],"content":"subst_vars"},{"tailPos":4568,"headPos":4558,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhbc : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c"],"content":"subst_vars"},{"tailPos":4568,"headPos":4558,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc hac : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n      Finset.card {b, b, c} = 3 ↔\n    Adj G b b ∧ Adj G b c ∧ Adj G b c"],"content":"subst_vars"},{"tailPos":4568,"headPos":4558,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhab : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c"],"content":"subst_vars"},{"tailPos":4568,"headPos":4558,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na c : α\nhac hab : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → a ≠ b → Adj G a b) ∧\n      Finset.card {a, c, c} = 3 ↔\n    Adj G a c ∧ Adj G a c ∧ Adj G c c"],"content":"subst_vars"},{"tailPos":4568,"headPos":4558,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc : ¬b = c\nhab : ¬c = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → c ≠ b_1 → Adj G c b_1) ∧\n      Finset.card {c, b, c} = 3 ↔\n    Adj G c b ∧ Adj G c c ∧ Adj G b c"],"content":"subst_vars"},{"tailPos":4568,"headPos":4558,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"subst_vars"},{"tailPos":4568,"headPos":4483,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhbc : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc hac : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n      Finset.card {b, b, c} = 3 ↔\n    Adj G b b ∧ Adj G b c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhab : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na c : α\nhac hab : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → a ≠ b → Adj G a b) ∧\n      Finset.card {a, c, c} = 3 ↔\n    Adj G a c ∧ Adj G a c ∧ Adj G c c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc : ¬b = c\nhab : ¬c = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → c ≠ b_1 → Adj G c b_1) ∧\n      Finset.card {c, b, c} = 3 ↔\n    Adj G c b ∧ Adj G c c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"by_cases hab : a = b <;> by_cases hbc : b = c <;> by_cases hac : a = c <;> subst_vars"},{"tailPos":4572,"headPos":4569,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhbc : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc hac : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n      Finset.card {b, b, c} = 3 ↔\n    Adj G b b ∧ Adj G b c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhab : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na c : α\nhac hab : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → a ≠ b → Adj G a b) ∧\n      Finset.card {a, c, c} = 3 ↔\n    Adj G a c ∧ Adj G a c ∧ Adj G c c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc : ¬b = c\nhab : ¬c = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → c ≠ b_1 → Adj G c b_1) ∧\n      Finset.card {c, b, c} = 3 ↔\n    Adj G c b ∧ Adj G c c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhbc : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc hac : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n      Finset.card {b, b, c} = 3 ↔\n    Adj G b b ∧ Adj G b c ∧ Adj G b c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhab : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na c : α\nhac hab : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → a ≠ b → Adj G a b) ∧\n      Finset.card {a, c, c} = 3 ↔\n    Adj G a c ∧ Adj G a c ∧ Adj G c c","case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc : ¬b = c\nhab : ¬c = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → c ≠ b_1 → Adj G c b_1) ∧\n      Finset.card {c, b, c} = 3 ↔\n    Adj G c b ∧ Adj G c c ∧ Adj G b c","case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"<;>"},{"tailPos":4610,"headPos":4577,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c"],"goalsAfter":[],"content":"simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4610,"headPos":4577,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhac : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c"],"goalsAfter":[],"content":"simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4610,"headPos":4577,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhbc : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c"],"goalsAfter":[],"content":"simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4610,"headPos":4577,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc hac : ¬b = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n      Finset.card {b, b, c} = 3 ↔\n    Adj G b b ∧ Adj G b c ∧ Adj G b c"],"goalsAfter":[],"content":"simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4610,"headPos":4577,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nc : α\nhab : ¬c = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → c ≠ b → Adj G c b) ∧\n      Finset.card {c, c, c} = 3 ↔\n    Adj G c c ∧ Adj G c c ∧ Adj G c c"],"goalsAfter":[],"content":"simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4610,"headPos":4577,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na c : α\nhac hab : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b : α), b ∈ ↑{c} → c ≠ b → Adj G c b) ∧\n        ∀ (b : α), b ∈ insert c ↑{c} → a ≠ b → Adj G a b) ∧\n      Finset.card {a, c, c} = 3 ↔\n    Adj G a c ∧ Adj G a c ∧ Adj G c c"],"goalsAfter":[],"content":"simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4610,"headPos":4577,"goalsBefore":["case pos\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\nb c : α\nhbc : ¬b = c\nhab : ¬c = b\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → c ≠ b_1 → Adj G c b_1) ∧\n      Finset.card {c, b, c} = 3 ↔\n    Adj G c b ∧ Adj G c c ∧ Adj G b c"],"goalsAfter":[],"content":"simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4610,"headPos":4577,"goalsBefore":["case neg\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nhab : ¬a = b\nhbc : ¬b = c\nhac : ¬a = c\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":[],"content":"simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4610,"headPos":4483,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ ((Set.Pairwise (↑{c}) G.Adj ∧ ∀ (b_1 : α), b_1 ∈ ↑{c} → b ≠ b_1 → Adj G b b_1) ∧\n        ∀ (b_1 : α), b_1 ∈ insert b ↑{c} → a ≠ b_1 → Adj G a b_1) ∧\n      Finset.card {a, b, c} = 3 ↔\n    Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":[],"content":"by_cases hab : a = b <;> by_cases hbc : b = c <;> by_cases hac : a = c <;> subst_vars <;>\n    simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4610,"headPos":4388,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ IsNClique G 3 {a, b, c} ↔ Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":[],"content":"simp only [isNClique_iff, isClique_iff, Set.pairwise_insert_of_symmetric G.symm, coe_insert]\n  by_cases hab : a = b <;> by_cases hbc : b = c <;> by_cases hac : a = c <;> subst_vars <;>\n    simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4385,"headPos":4383,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ IsNClique G 3 {a, b, c} ↔ Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":[],"content":"by"},{"tailPos":4610,"headPos":4383,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ IsNClique G 3 {a, b, c} ↔ Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":[],"content":"by\n  simp only [isNClique_iff, isClique_iff, Set.pairwise_insert_of_symmetric G.symm, coe_insert]\n  by_cases hab : a = b <;> by_cases hbc : b = c <;> by_cases hac : a = c <;> subst_vars <;>\n    simp [G.ne_of_adj, and_rotate, *]"},{"tailPos":4839,"headPos":4811,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ IsNClique G 3 s ↔ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"goalsAfter":["case refine'_1\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nh : IsNClique G 3 s\n⊢ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}","case refine'_2\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ (∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}) → IsNClique G 3 s"],"content":"refine' ⟨fun h ↦ _, _⟩"},{"tailPos":4844,"headPos":4842,"goalsBefore":["case refine'_1\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nh : IsNClique G 3 s\n⊢ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}","case refine'_2\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ (∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}) → IsNClique G 3 s"],"goalsAfter":["case refine'_1\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nh : IsNClique G 3 s\n⊢ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"content":"·"},{"tailPos":4907,"headPos":4845,"goalsBefore":["case refine'_1\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nh : IsNClique G 3 s\n⊢ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"goalsAfter":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"content":"obtain ⟨a, b, c, -, -, -, hs⟩ := card_eq_three.1 h.card_eq"},{"tailPos":4936,"headPos":4912,"goalsBefore":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"goalsAfter":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"content":"refine' ⟨a, b, c, _⟩"},{"tailPos":4949,"headPos":4946,"goalsBefore":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"goalsAfter":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ {a, b, c} = {a, b, c}"],"content":"hs,"},{"tailPos":4967,"headPos":4950,"goalsBefore":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ {a, b, c} = {a, b, c}"],"goalsAfter":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ True"],"content":"eq_self_iff_true,"},{"tailPos":4977,"headPos":4968,"goalsBefore":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ True"],"goalsAfter":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ Adj G a b ∧ Adj G a c ∧ Adj G b c"],"content":"and_true,"},{"tailPos":5004,"headPos":4978,"goalsBefore":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ Adj G a b ∧ Adj G a c ∧ Adj G b c"],"goalsAfter":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ IsNClique G 3 {a, b, c}"],"content":"is3Clique_triple_iff.symm,"},{"tailPos":5011,"headPos":5005,"goalsBefore":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ IsNClique G 3 {a, b, c}"],"goalsAfter":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ IsNClique G 3 s"],"content":"← hs"},{"tailPos":5012,"headPos":5011,"goalsBefore":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ IsNClique G 3 s"],"goalsAfter":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ IsNClique G 3 s"],"content":"]"},{"tailPos":5012,"headPos":4941,"goalsBefore":["case refine'_1.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na✝ b✝ c✝ : α\nh : IsNClique G 3 s\na b c : α\nhs : s = {a, b, c}\n⊢ Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"goalsAfter":[],"content":"rwa [hs, eq_self_iff_true, and_true, is3Clique_triple_iff.symm, ← hs]"},{"tailPos":5012,"headPos":4845,"goalsBefore":["case refine'_1\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nh : IsNClique G 3 s\n⊢ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"goalsAfter":[],"content":"obtain ⟨a, b, c, -, -, -, hs⟩ := card_eq_three.1 h.card_eq\n    refine' ⟨a, b, c, _⟩\n    rwa [hs, eq_self_iff_true, and_true, is3Clique_triple_iff.symm, ← hs]"},{"tailPos":5012,"headPos":4842,"goalsBefore":["case refine'_1\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\nh : IsNClique G 3 s\n⊢ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}","case refine'_2\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ (∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}) → IsNClique G 3 s"],"goalsAfter":["case refine'_2\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ (∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}) → IsNClique G 3 s"],"content":"· obtain ⟨a, b, c, -, -, -, hs⟩ := card_eq_three.1 h.card_eq\n    refine' ⟨a, b, c, _⟩\n    rwa [hs, eq_self_iff_true, and_true, is3Clique_triple_iff.symm, ← hs]"},{"tailPos":5017,"headPos":5015,"goalsBefore":["case refine'_2\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ (∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}) → IsNClique G 3 s"],"goalsAfter":["case refine'_2\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ (∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}) → IsNClique G 3 s"],"content":"·"},{"tailPos":5058,"headPos":5018,"goalsBefore":["case refine'_2\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ (∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}) → IsNClique G 3 s"],"goalsAfter":["case refine'_2.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ninst✝ : DecidableEq α\na✝ b✝ c✝ a b c : α\nhab : Adj G a b\nhbc : Adj G a c\nhca : Adj G b c\n⊢ IsNClique G 3 {a, b, c}"],"content":"rintro ⟨a, b, c, hab, hbc, hca, rfl⟩"},{"tailPos":5111,"headPos":5063,"goalsBefore":["case refine'_2.intro.intro.intro.intro.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ninst✝ : DecidableEq α\na✝ b✝ c✝ a b c : α\nhab : Adj G a b\nhbc : Adj G a c\nhca : Adj G b c\n⊢ IsNClique G 3 {a, b, c}"],"goalsAfter":[],"content":"exact is3Clique_triple_iff.2 ⟨hab, hbc, hca⟩"},{"tailPos":5111,"headPos":5018,"goalsBefore":["case refine'_2\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ (∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}) → IsNClique G 3 s"],"goalsAfter":[],"content":"rintro ⟨a, b, c, hab, hbc, hca, rfl⟩\n    exact is3Clique_triple_iff.2 ⟨hab, hbc, hca⟩"},{"tailPos":5111,"headPos":5015,"goalsBefore":["case refine'_2\nα : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ (∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}) → IsNClique G 3 s"],"goalsAfter":[],"content":"· rintro ⟨a, b, c, hab, hbc, hca, rfl⟩\n    exact is3Clique_triple_iff.2 ⟨hab, hbc, hca⟩"},{"tailPos":5111,"headPos":4811,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ IsNClique G 3 s ↔ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"goalsAfter":[],"content":"refine' ⟨fun h ↦ _, _⟩\n  · obtain ⟨a, b, c, -, -, -, hs⟩ := card_eq_three.1 h.card_eq\n    refine' ⟨a, b, c, _⟩\n    rwa [hs, eq_self_iff_true, and_true, is3Clique_triple_iff.symm, ← hs]\n  · rintro ⟨a, b, c, hab, hbc, hca, rfl⟩\n    exact is3Clique_triple_iff.2 ⟨hab, hbc, hca⟩"},{"tailPos":4808,"headPos":4806,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ IsNClique G 3 s ↔ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"goalsAfter":[],"content":"by"},{"tailPos":5111,"headPos":4806,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\ns : Finset α\ninst✝ : DecidableEq α\na b c : α\n⊢ IsNClique G 3 s ↔ ∃ a b c, Adj G a b ∧ Adj G a c ∧ Adj G b c ∧ s = {a, b, c}"],"goalsAfter":[],"content":"by\n  refine' ⟨fun h ↦ _, _⟩\n  · obtain ⟨a, b, c, -, -, -, hs⟩ := card_eq_three.1 h.card_eq\n    refine' ⟨a, b, c, _⟩\n    rwa [hs, eq_self_iff_true, and_true, is3Clique_triple_iff.symm, ← hs]\n  · rintro ⟨a, b, c, hab, hbc, hca, rfl⟩\n    exact is3Clique_triple_iff.2 ⟨hab, hbc, hca⟩"},{"tailPos":5873,"headPos":5781,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ ¬CliqueFree G n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n"],"content":"simp only [CliqueFree, isNClique_iff, isClique_iff_induce_eq, not_forall, Classical.not_not]"},{"tailPos":5909,"headPos":5876,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ induce (↑(map f.toEmbedding univ)) G = ⊤ ∧ Finset.card (map f.toEmbedding univ) = n"],"content":"use Finset.univ.map f.toEmbedding"},{"tailPos":5981,"headPos":5912,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ induce (↑(map f.toEmbedding univ)) G = ⊤ ∧ Finset.card (map f.toEmbedding univ) = n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ induce (↑(map f.toEmbedding univ)) G = ⊤"],"content":"simp only [card_map, Finset.card_fin, eq_self_iff_true, and_true_iff]"},{"tailPos":6011,"headPos":5984,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ induce (↑(map f.toEmbedding univ)) G = ⊤"],"goalsAfter":["case Adj.h.mk.h.mk.a\nα : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\nv : α\nhv : v ∈ ↑(map f.toEmbedding univ)\nw : α\nhw : w ∈ ↑(map f.toEmbedding univ)\n⊢ Adj (induce (↑(map f.toEmbedding univ)) G) { val := v, property := hv } { val := w, property := hw } ↔\n    Adj ⊤ { val := v, property := hv } { val := w, property := hw }"],"content":"ext ⟨v, hv⟩ ⟨w, hw⟩"},{"tailPos":6095,"headPos":6014,"goalsBefore":["case Adj.h.mk.h.mk.a\nα : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\nv : α\nhv : v ∈ ↑(map f.toEmbedding univ)\nw : α\nhw : w ∈ ↑(map f.toEmbedding univ)\n⊢ Adj (induce (↑(map f.toEmbedding univ)) G) { val := v, property := hv } { val := w, property := hw } ↔\n    Adj ⊤ { val := v, property := hv } { val := w, property := hw }"],"goalsAfter":["case Adj.h.mk.h.mk.a\nα : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\nv : α\nhv✝ : v ∈ ↑(map f.toEmbedding univ)\nw : α\nhw✝ : w ∈ ↑(map f.toEmbedding univ)\nhv : ∃ x, ↑f.toEmbedding x = v\nhw : ∃ x, ↑f.toEmbedding x = w\n⊢ Adj (induce (↑(map f.toEmbedding univ)) G) { val := v, property := hv✝ } { val := w, property := hw✝ } ↔\n    Adj ⊤ { val := v, property := hv✝ } { val := w, property := hw✝ }"],"content":"simp only [coe_map, Set.mem_image, coe_univ, Set.mem_univ, true_and_iff] at hv hw"},{"tailPos":6124,"headPos":6098,"goalsBefore":["case Adj.h.mk.h.mk.a\nα : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\nv : α\nhv✝ : v ∈ ↑(map f.toEmbedding univ)\nw : α\nhw✝ : w ∈ ↑(map f.toEmbedding univ)\nhv : ∃ x, ↑f.toEmbedding x = v\nhw : ∃ x, ↑f.toEmbedding x = w\n⊢ Adj (induce (↑(map f.toEmbedding univ)) G) { val := v, property := hv✝ } { val := w, property := hw✝ } ↔\n    Adj ⊤ { val := v, property := hv✝ } { val := w, property := hw✝ }"],"goalsAfter":["case Adj.h.mk.h.mk.a.intro\nα : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\nw : α\nhw✝ : w ∈ ↑(map f.toEmbedding univ)\nhw : ∃ x, ↑f.toEmbedding x = w\nv' : Fin n\nhv : ↑f.toEmbedding v' ∈ ↑(map f.toEmbedding univ)\n⊢ Adj (induce (↑(map f.toEmbedding univ)) G) { val := ↑f.toEmbedding v', property := hv }\n      { val := w, property := hw✝ } ↔\n    Adj ⊤ { val := ↑f.toEmbedding v', property := hv } { val := w, property := hw✝ }"],"content":"obtain ⟨v', rfl⟩ := hv"},{"tailPos":6153,"headPos":6127,"goalsBefore":["case Adj.h.mk.h.mk.a.intro\nα : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\nw : α\nhw✝ : w ∈ ↑(map f.toEmbedding univ)\nhw : ∃ x, ↑f.toEmbedding x = w\nv' : Fin n\nhv : ↑f.toEmbedding v' ∈ ↑(map f.toEmbedding univ)\n⊢ Adj (induce (↑(map f.toEmbedding univ)) G) { val := ↑f.toEmbedding v', property := hv }\n      { val := w, property := hw✝ } ↔\n    Adj ⊤ { val := ↑f.toEmbedding v', property := hv } { val := w, property := hw✝ }"],"goalsAfter":["case Adj.h.mk.h.mk.a.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\nv' : Fin n\nhv : ↑f.toEmbedding v' ∈ ↑(map f.toEmbedding univ)\nw' : Fin n\nhw : ↑f.toEmbedding w' ∈ ↑(map f.toEmbedding univ)\n⊢ Adj (induce (↑(map f.toEmbedding univ)) G) { val := ↑f.toEmbedding v', property := hv }\n      { val := ↑f.toEmbedding w', property := hw } ↔\n    Adj ⊤ { val := ↑f.toEmbedding v', property := hv } { val := ↑f.toEmbedding w', property := hw }"],"content":"obtain ⟨w', rfl⟩ := hw"},{"tailPos":6324,"headPos":6156,"goalsBefore":["case Adj.h.mk.h.mk.a.intro.intro\nα : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\nv' : Fin n\nhv : ↑f.toEmbedding v' ∈ ↑(map f.toEmbedding univ)\nw' : Fin n\nhw : ↑f.toEmbedding w' ∈ ↑(map f.toEmbedding univ)\n⊢ Adj (induce (↑(map f.toEmbedding univ)) G) { val := ↑f.toEmbedding v', property := hv }\n      { val := ↑f.toEmbedding w', property := hw } ↔\n    Adj ⊤ { val := ↑f.toEmbedding v', property := hv } { val := ↑f.toEmbedding w', property := hw }"],"goalsAfter":[],"content":"simp only [coe_sort_coe, RelEmbedding.coe_toEmbedding, comap_Adj, Function.Embedding.coe_subtype,\n    f.map_adj_iff, top_adj, ne_eq, Subtype.mk.injEq, RelEmbedding.inj]"},{"tailPos":6324,"headPos":5781,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ ¬CliqueFree G n"],"goalsAfter":[],"content":"simp only [CliqueFree, isNClique_iff, isClique_iff_induce_eq, not_forall, Classical.not_not]\n  use Finset.univ.map f.toEmbedding\n  simp only [card_map, Finset.card_fin, eq_self_iff_true, and_true_iff]\n  ext ⟨v, hv⟩ ⟨w, hw⟩\n  simp only [coe_map, Set.mem_image, coe_univ, Set.mem_univ, true_and_iff] at hv hw\n  obtain ⟨v', rfl⟩ := hv\n  obtain ⟨w', rfl⟩ := hw\n  simp only [coe_sort_coe, RelEmbedding.coe_toEmbedding, comap_Adj, Function.Embedding.coe_subtype,\n    f.map_adj_iff, top_adj, ne_eq, Subtype.mk.injEq, RelEmbedding.inj]"},{"tailPos":5778,"headPos":5776,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ ¬CliqueFree G n"],"goalsAfter":[],"content":"by"},{"tailPos":6324,"headPos":5776,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nf : ⊤ ↪g G\n⊢ ¬CliqueFree G n"],"goalsAfter":[],"content":"by\n  simp only [CliqueFree, isNClique_iff, isClique_iff_induce_eq, not_forall, Classical.not_not]\n  use Finset.univ.map f.toEmbedding\n  simp only [card_map, Finset.card_fin, eq_self_iff_true, and_true_iff]\n  ext ⟨v, hv⟩ ⟨w, hw⟩\n  simp only [coe_map, Set.mem_image, coe_univ, Set.mem_univ, true_and_iff] at hv hw\n  obtain ⟨v', rfl⟩ := hv\n  obtain ⟨w', rfl⟩ := hw\n  simp only [coe_sort_coe, RelEmbedding.coe_toEmbedding, comap_Adj, Function.Embedding.coe_subtype,\n    f.map_adj_iff, top_adj, ne_eq, Subtype.mk.injEq, RelEmbedding.inj]"},{"tailPos":6747,"headPos":6650,"goalsBefore":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ¬CliqueFree G n\n⊢ ⊤ ↪g G"],"goalsAfter":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\n⊢ ⊤ ↪g G"],"content":"simp only [CliqueFree, isNClique_iff, isClique_iff_induce_eq, not_forall, Classical.not_not] at h"},{"tailPos":6786,"headPos":6750,"goalsBefore":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\n⊢ ⊤ ↪g G"],"goalsAfter":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\n⊢ ⊤ ↪g G"],"content":"obtain ⟨ha, hb⟩ := h.choose_spec"},{"tailPos":6903,"headPos":6880,"goalsBefore":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\n⊢ ⊤ ≃g ⊤"],"goalsAfter":["case f\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\n⊢ Fin (Finset.card (Exists.choose h)) ≃ { x // x ∈ Exists.choose h }"],"content":"apply Iso.completeGraph"},{"tailPos":6952,"headPos":6908,"goalsBefore":["case f\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\n⊢ Fin (Finset.card (Exists.choose h)) ≃ { x // x ∈ Exists.choose h }"],"goalsAfter":[],"content":"simpa only [coe_sort_coe, card_coe] using (Fintype.equivFin h.choose).symm"},{"tailPos":6952,"headPos":6880,"goalsBefore":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\n⊢ ⊤ ≃g ⊤"],"goalsAfter":[],"content":"apply Iso.completeGraph\n    simpa using (Fintype.equivFin h.choose).symm"},{"tailPos":6875,"headPos":6873,"goalsBefore":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\n⊢ ⊤ ≃g ⊤"],"goalsAfter":[],"content":"by"},{"tailPos":6952,"headPos":6873,"goalsBefore":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\n⊢ ⊤ ≃g ⊤"],"goalsAfter":[],"content":"by\n    apply Iso.completeGraph\n    simpa using (Fintype.equivFin h.choose).symm"},{"tailPos":6952,"headPos":6789,"goalsBefore":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\n⊢ ⊤ ↪g G"],"goalsAfter":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g ⊤\n⊢ ⊤ ↪g G"],"content":"have : (⊤ : SimpleGraph (Fin h.choose.card)) ≃g (⊤ : SimpleGraph h.choose) := by\n    apply Iso.completeGraph\n    simpa using (Fintype.equivFin h.choose).symm"},{"tailPos":6965,"headPos":6959,"goalsBefore":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g ⊤\n⊢ ⊤ ↪g G"],"goalsAfter":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g induce (↑(Exists.choose h)) G\n⊢ ⊤ ↪g G"],"content":"← ha"},{"tailPos":6966,"headPos":6965,"goalsBefore":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g induce (↑(Exists.choose h)) G\n⊢ ⊤ ↪g G"],"goalsAfter":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g induce (↑(Exists.choose h)) G\n⊢ ⊤ ↪g G"],"content":"]"},{"tailPos":6974,"headPos":6955,"goalsBefore":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g ⊤\n⊢ ⊤ ↪g G"],"goalsAfter":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g induce (↑(Exists.choose h)) G\n⊢ ⊤ ↪g G"],"content":"rw [← ha] at this"},{"tailPos":7043,"headPos":6977,"goalsBefore":["case intro\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g induce (↑(Exists.choose h)) G\n⊢ ⊤ ↪g G"],"goalsAfter":["case h.e'_1.h.e'_1\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g induce (↑(Exists.choose h)) G\n⊢ n = Finset.card (Exists.choose h)"],"content":"convert (Embedding.induce ↑h.choose.toSet).comp this.toEmbedding"},{"tailPos":7059,"headPos":7046,"goalsBefore":["case h.e'_1.h.e'_1\nα : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ∃ x, induce (↑x) G = ⊤ ∧ Finset.card x = n\nha : induce (↑(Exists.choose h)) G = ⊤\nhb : Finset.card (Exists.choose h) = n\nthis : ⊤ ≃g induce (↑(Exists.choose h)) G\n⊢ n = Finset.card (Exists.choose h)"],"goalsAfter":[],"content":"exact hb.symm"},{"tailPos":7059,"headPos":6650,"goalsBefore":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ¬CliqueFree G n\n⊢ ⊤ ↪g G"],"goalsAfter":[],"content":"simp only [CliqueFree, isNClique_iff, isClique_iff_induce_eq, not_forall, Classical.not_not] at h\n  obtain ⟨ha, hb⟩ := h.choose_spec\n  have : (⊤ : SimpleGraph (Fin h.choose.card)) ≃g (⊤ : SimpleGraph h.choose) := by\n    apply Iso.completeGraph\n    simpa using (Fintype.equivFin h.choose).symm\n  rw [← ha] at this\n  convert (Embedding.induce ↑h.choose.toSet).comp this.toEmbedding\n  exact hb.symm"},{"tailPos":6647,"headPos":6645,"goalsBefore":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ¬CliqueFree G n\n⊢ ⊤ ↪g G"],"goalsAfter":[],"content":"by"},{"tailPos":7059,"headPos":6645,"goalsBefore":["α : Type ?u.35395\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\nh : ¬CliqueFree G n\n⊢ ⊤ ↪g G"],"goalsAfter":[],"content":"by\n  simp only [CliqueFree, isNClique_iff, isClique_iff_induce_eq, not_forall, Classical.not_not] at h\n  obtain ⟨ha, hb⟩ := h.choose_spec\n  have : (⊤ : SimpleGraph (Fin h.choose.card)) ≃g (⊤ : SimpleGraph h.choose) := by\n    apply Iso.completeGraph\n    simpa using (Fintype.equivFin h.choose).symm\n  rw [← ha] at this\n  convert (Embedding.induce ↑h.choose.toSet).comp this.toEmbedding\n  exact hb.symm"},{"tailPos":7567,"headPos":7551,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ CliqueFree G n ↔ IsEmpty (⊤ ↪g G)"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ ¬CliqueFree G n ↔ ¬IsEmpty (⊤ ↪g G)"],"content":"← not_iff_not,"},{"tailPos":7587,"headPos":7568,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ ¬CliqueFree G n ↔ ¬IsEmpty (⊤ ↪g G)"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ Nonempty (⊤ ↪g G) ↔ ¬IsEmpty (⊤ ↪g G)"],"content":"not_cliqueFree_iff,"},{"tailPos":7603,"headPos":7588,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ Nonempty (⊤ ↪g G) ↔ ¬IsEmpty (⊤ ↪g G)"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ Nonempty (⊤ ↪g G) ↔ Nonempty (⊤ ↪g G)"],"content":"not_isEmpty_iff"},{"tailPos":7604,"headPos":7603,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ Nonempty (⊤ ↪g G) ↔ Nonempty (⊤ ↪g G)"],"goalsAfter":[],"content":"]"},{"tailPos":7604,"headPos":7547,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ CliqueFree G n ↔ IsEmpty (⊤ ↪g G)"],"goalsAfter":[],"content":"rw [← not_iff_not, not_cliqueFree_iff, not_isEmpty_iff]"},{"tailPos":7544,"headPos":7542,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ CliqueFree G n ↔ IsEmpty (⊤ ↪g G)"],"goalsAfter":[],"content":"by"},{"tailPos":7604,"headPos":7542,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n✝ : ℕ\ns : Finset α\nn : ℕ\n⊢ CliqueFree G n ↔ IsEmpty (⊤ ↪g G)"],"goalsAfter":[],"content":"by\n  rw [← not_iff_not, not_cliqueFree_iff, not_isEmpty_iff]"},{"tailPos":7824,"headPos":7806,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ ¬CliqueFree G (Fintype.card α)"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ Nonempty (⊤ ↪g G)"],"content":"not_cliqueFree_iff"},{"tailPos":7825,"headPos":7824,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ Nonempty (⊤ ↪g G)"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ Nonempty (⊤ ↪g G)"],"content":"]"},{"tailPos":7825,"headPos":7802,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ ¬CliqueFree G (Fintype.card α)"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ Nonempty (⊤ ↪g G)"],"content":"rw [not_cliqueFree_iff]"},{"tailPos":7906,"headPos":7828,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ Nonempty (⊤ ↪g G)"],"goalsAfter":[],"content":"exact ⟨(Iso.completeGraph (Fintype.equivFin α)).symm.toEmbedding.trans f⟩"},{"tailPos":7906,"headPos":7802,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ ¬CliqueFree G (Fintype.card α)"],"goalsAfter":[],"content":"rw [not_cliqueFree_iff]\n  exact ⟨(Iso.completeGraph (Fintype.equivFin α)).symm.toEmbedding.trans f⟩"},{"tailPos":7799,"headPos":7797,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ ¬CliqueFree G (Fintype.card α)"],"goalsAfter":[],"content":"by"},{"tailPos":7906,"headPos":7797,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nf : ⊤ ↪g G\n⊢ ¬CliqueFree G (Fintype.card α)"],"goalsAfter":[],"content":"by\n  rw [not_cliqueFree_iff]\n  exact ⟨(Iso.completeGraph (Fintype.equivFin α)).symm.toEmbedding.trans f⟩"},{"tailPos":8108,"headPos":8098,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : 2 ≤ n\n⊢ CliqueFree ⊥ n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : 2 ≤ n\nt : Finset α\nht : IsNClique ⊥ n t\n⊢ False"],"content":"intro t ht"},{"tailPos":8156,"headPos":8111,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : 2 ≤ n\nt : Finset α\nht : IsNClique ⊥ n t\n⊢ False"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : 2 ≤ n\nt : Finset α\nht : IsNClique ⊥ n t\nthis : 2 ≤ 1\n⊢ False"],"content":"have := le_trans h (isNClique_bot_iff.1 ht).1"},{"tailPos":8176,"headPos":8159,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : 2 ≤ n\nt : Finset α\nht : IsNClique ⊥ n t\nthis : 2 ≤ 1\n⊢ False"],"goalsAfter":[],"content":"simp only at this"},{"tailPos":8176,"headPos":8098,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : 2 ≤ n\n⊢ CliqueFree ⊥ n"],"goalsAfter":[],"content":"intro t ht\n  have := le_trans h (isNClique_bot_iff.1 ht).1\n  simp only at this"},{"tailPos":8095,"headPos":8093,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : 2 ≤ n\n⊢ CliqueFree ⊥ n"],"goalsAfter":[],"content":"by"},{"tailPos":8176,"headPos":8093,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : 2 ≤ n\n⊢ CliqueFree ⊥ n"],"goalsAfter":[],"content":"by\n  intro t ht\n  have := le_trans h (isNClique_bot_iff.1 ht).1\n  simp only at this"},{"tailPos":8336,"headPos":8323,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : m ≤ n\n⊢ CliqueFree G m → CliqueFree G n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns✝ : Finset α\nh : m ≤ n\nhG : CliqueFree G m\ns : Finset α\nhs : IsNClique G n s\n⊢ False"],"content":"intro hG s hs"},{"tailPos":8412,"headPos":8339,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns✝ : Finset α\nh : m ≤ n\nhG : CliqueFree G m\ns : Finset α\nhs : IsNClique G n s\n⊢ False"],"goalsAfter":["case intro.intro\nα : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns✝ : Finset α\nh : m ≤ n\nhG : CliqueFree G m\ns : Finset α\nhs : IsNClique G n s\nt : Finset α\nhts : t ⊆ s\nht : Finset.card t = m\n⊢ False"],"content":"obtain ⟨t, hts, ht⟩ := s.exists_smaller_set _ (h.trans hs.card_eq.ge)"},{"tailPos":8456,"headPos":8415,"goalsBefore":["case intro.intro\nα : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns✝ : Finset α\nh : m ≤ n\nhG : CliqueFree G m\ns : Finset α\nhs : IsNClique G n s\nt : Finset α\nhts : t ⊆ s\nht : Finset.card t = m\n⊢ False"],"goalsAfter":[],"content":"exact hG _ ⟨hs.clique.subset hts, ht⟩"},{"tailPos":8456,"headPos":8323,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : m ≤ n\n⊢ CliqueFree G m → CliqueFree G n"],"goalsAfter":[],"content":"intro hG s hs\n  obtain ⟨t, hts, ht⟩ := s.exists_smaller_set _ (h.trans hs.card_eq.ge)\n  exact hG _ ⟨hs.clique.subset hts, ht⟩"},{"tailPos":8320,"headPos":8318,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : m ≤ n\n⊢ CliqueFree G m → CliqueFree G n"],"goalsAfter":[],"content":"by"},{"tailPos":8456,"headPos":8318,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\nh : m ≤ n\n⊢ CliqueFree G m → CliqueFree G n"],"goalsAfter":[],"content":"by\n  intro hG s hs\n  obtain ⟨t, hts, ht⟩ := s.exists_smaller_set _ (h.trans hs.card_eq.ge)\n  exact hG _ ⟨hs.clique.subset hts, ht⟩"},{"tailPos":8891,"headPos":8880,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\n⊢ CliqueFree G n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : ¬CliqueFree G n\n⊢ False"],"content":"by_contra h"},{"tailPos":8925,"headPos":8894,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : ¬CliqueFree G n\n⊢ False"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : ¬CliqueFree G n\n⊢ n ≤ Fintype.card α"],"content":"refine' Nat.lt_le_antisymm hc _"},{"tailPos":8947,"headPos":8932,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : ¬CliqueFree G n\n⊢ n ≤ Fintype.card α"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : ¬IsEmpty (⊤ ↪g G)\n⊢ n ≤ Fintype.card α"],"content":"cliqueFree_iff,"},{"tailPos":8963,"headPos":8948,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : ¬IsEmpty (⊤ ↪g G)\n⊢ n ≤ Fintype.card α"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : Nonempty (⊤ ↪g G)\n⊢ n ≤ Fintype.card α"],"content":"not_isEmpty_iff"},{"tailPos":8964,"headPos":8963,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : Nonempty (⊤ ↪g G)\n⊢ n ≤ Fintype.card α"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : Nonempty (⊤ ↪g G)\n⊢ n ≤ Fintype.card α"],"content":"]"},{"tailPos":8969,"headPos":8928,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : ¬CliqueFree G n\n⊢ n ≤ Fintype.card α"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : Nonempty (⊤ ↪g G)\n⊢ n ≤ Fintype.card α"],"content":"rw [cliqueFree_iff, not_isEmpty_iff] at h"},{"tailPos":9055,"headPos":8972,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\nh : Nonempty (⊤ ↪g G)\n⊢ n ≤ Fintype.card α"],"goalsAfter":[],"content":"simpa only [Fintype.card_fin] using Fintype.card_le_of_embedding h.some.toEmbedding"},{"tailPos":9055,"headPos":8880,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\n⊢ CliqueFree G n"],"goalsAfter":[],"content":"by_contra h\n  refine' Nat.lt_le_antisymm hc _\n  rw [cliqueFree_iff, not_isEmpty_iff] at h\n  simpa only [Fintype.card_fin] using Fintype.card_le_of_embedding h.some.toEmbedding"},{"tailPos":8877,"headPos":8875,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\n⊢ CliqueFree G n"],"goalsAfter":[],"content":"by"},{"tailPos":9055,"headPos":8875,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nm n : ℕ\ns : Finset α\ninst✝ : Fintype α\nhc : Fintype.card α < n\n⊢ CliqueFree G n"],"goalsAfter":[],"content":"by\n  by_contra h\n  refine' Nat.lt_le_antisymm hc _\n  rw [cliqueFree_iff, not_isEmpty_iff] at h\n  simpa only [Fintype.card_fin] using Fintype.card_le_of_embedding h.some.toEmbedding"},{"tailPos":9663,"headPos":9654,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueSet G n = ∅ ↔ CliqueFree G n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueSet G n = ∅ ↔ CliqueFree G n"],"content":"simp_rw ["},{"tailPos":9674,"headPos":9663,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueSet G n = ∅ ↔ CliqueFree G n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueSet G n = ∅ ↔ ∀ (t : Finset α), ¬IsNClique G n t"],"content":"CliqueFree,"},{"tailPos":9707,"headPos":9675,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueSet G n = ∅ ↔ ∀ (t : Finset α), ¬IsNClique G n t"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ (∀ (x : Finset α), ¬x ∈ cliqueSet G n) ↔ ∀ (t : Finset α), ¬IsNClique G n t"],"content":"Set.eq_empty_iff_forall_not_mem,"},{"tailPos":9725,"headPos":9708,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ (∀ (x : Finset α), ¬x ∈ cliqueSet G n) ↔ ∀ (t : Finset α), ¬IsNClique G n t"],"goalsAfter":[],"content":"simp only [mem_cliqueSet_iff]"},{"tailPos":9726,"headPos":9654,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueSet G n = ∅ ↔ CliqueFree G n"],"goalsAfter":[],"content":"simp_rw [CliqueFree, Set.eq_empty_iff_forall_not_mem, mem_cliqueSet_iff]"},{"tailPos":9651,"headPos":9649,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueSet G n = ∅ ↔ CliqueFree G n"],"goalsAfter":[],"content":"by"},{"tailPos":9726,"headPos":9649,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueSet G n = ∅ ↔ CliqueFree G n"],"goalsAfter":[],"content":"by\n  simp_rw [CliqueFree, Set.eq_empty_iff_forall_not_mem, mem_cliqueSet_iff]"},{"tailPos":11243,"headPos":11234,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueFinset G n = ∅ ↔ CliqueFree G n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueFinset G n = ∅ ↔ CliqueFree G n"],"content":"simp_rw ["},{"tailPos":11254,"headPos":11243,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueFinset G n = ∅ ↔ CliqueFree G n"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueFinset G n = ∅ ↔ ∀ (t : Finset α), ¬IsNClique G n t"],"content":"CliqueFree,"},{"tailPos":11283,"headPos":11255,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueFinset G n = ∅ ↔ ∀ (t : Finset α), ¬IsNClique G n t"],"goalsAfter":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ (∀ (x : Finset α), ¬x ∈ cliqueFinset G n) ↔ ∀ (t : Finset α), ¬IsNClique G n t"],"content":"eq_empty_iff_forall_not_mem,"},{"tailPos":11304,"headPos":11284,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ (∀ (x : Finset α), ¬x ∈ cliqueFinset G n) ↔ ∀ (t : Finset α), ¬IsNClique G n t"],"goalsAfter":[],"content":"simp only [mem_cliqueFinset_iff]"},{"tailPos":11305,"headPos":11234,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueFinset G n = ∅ ↔ CliqueFree G n"],"goalsAfter":[],"content":"simp_rw [CliqueFree, eq_empty_iff_forall_not_mem, mem_cliqueFinset_iff]"},{"tailPos":11231,"headPos":11229,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueFinset G n = ∅ ↔ CliqueFree G n"],"goalsAfter":[],"content":"by"},{"tailPos":11305,"headPos":11229,"goalsBefore":["α : Type u_1\nG H : SimpleGraph α\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nn : ℕ\na b c : α\ns : Finset α\n⊢ cliqueFinset G n = ∅ ↔ CliqueFree G n"],"goalsAfter":[],"content":"by\n  simp_rw [CliqueFree, eq_empty_iff_forall_not_mem, mem_cliqueFinset_iff]"}]