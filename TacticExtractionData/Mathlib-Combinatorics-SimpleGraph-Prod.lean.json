[{"tailPos":1733,"headPos":1690,"goalsBefore":["α : Type ?u.26\nβ : Type ?u.29\nγ : Type ?u.32\nG✝ : SimpleGraph α\nH✝ : SimpleGraph β\nG : SimpleGraph α\nH : SimpleGraph β\nx y : α × β\n⊢ (fun x y => Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst) x y →\n    (fun x y => Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst) y x"],"goalsAfter":[],"content":"simp [and_comm, or_comm, eq_comm, adj_comm]"},{"tailPos":1689,"headPos":1687,"goalsBefore":["α : Type ?u.26\nβ : Type ?u.29\nγ : Type ?u.32\nG✝ : SimpleGraph α\nH✝ : SimpleGraph β\nG : SimpleGraph α\nH : SimpleGraph β\nx y : α × β\n⊢ (fun x y => Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst) x y →\n    (fun x y => Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst) y x"],"goalsAfter":[],"content":"by"},{"tailPos":1733,"headPos":1687,"goalsBefore":["α : Type ?u.26\nβ : Type ?u.29\nγ : Type ?u.32\nG✝ : SimpleGraph α\nH✝ : SimpleGraph β\nG : SimpleGraph α\nH : SimpleGraph β\nx y : α × β\n⊢ (fun x y => Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst) x y →\n    (fun x y => Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst) y x"],"goalsAfter":[],"content":"by simp [and_comm, or_comm, eq_comm, adj_comm]"},{"tailPos":1757,"headPos":1753,"goalsBefore":["α : Type ?u.26\nβ : Type ?u.29\nγ : Type ?u.32\nG✝ : SimpleGraph α\nH✝ : SimpleGraph β\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\n⊢ ¬(fun x y => Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst) x x"],"goalsAfter":[],"content":"simp only [SimpleGraph.irrefl, and_true, or_self, not_false_eq_true]"},{"tailPos":1752,"headPos":1750,"goalsBefore":["α : Type ?u.26\nβ : Type ?u.29\nγ : Type ?u.32\nG✝ : SimpleGraph α\nH✝ : SimpleGraph β\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\n⊢ ¬(fun x y => Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst) x x"],"goalsAfter":[],"content":"by"},{"tailPos":1757,"headPos":1750,"goalsBefore":["α : Type ?u.26\nβ : Type ?u.29\nγ : Type ?u.32\nG✝ : SimpleGraph α\nH✝ : SimpleGraph β\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\n⊢ ¬(fun x y => Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst) x x"],"goalsAfter":[],"content":"by simp"},{"tailPos":2433,"headPos":2359,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9064\nG : SimpleGraph α\nH : SimpleGraph β\na₁ : α\nb : β\na₂ : α\n⊢ Adj (G □ H) (a₁, b) (a₂, b) ↔ Adj G a₁ a₂"],"goalsAfter":[],"content":"simp only [boxProd_adj, and_true, SimpleGraph.irrefl, false_and, or_false]"},{"tailPos":2356,"headPos":2354,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9064\nG : SimpleGraph α\nH : SimpleGraph β\na₁ : α\nb : β\na₂ : α\n⊢ Adj (G □ H) (a₁, b) (a₂, b) ↔ Adj G a₁ a₂"],"goalsAfter":[],"content":"by"},{"tailPos":2433,"headPos":2354,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9064\nG : SimpleGraph α\nH : SimpleGraph β\na₁ : α\nb : β\na₂ : α\n⊢ Adj (G □ H) (a₁, b) (a₂, b) ↔ Adj G a₁ a₂"],"goalsAfter":[],"content":"by\n  simp only [boxProd_adj, and_true, SimpleGraph.irrefl, false_and, or_false]"},{"tailPos":2707,"headPos":2633,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9451\nG : SimpleGraph α\nH : SimpleGraph β\na : α\nb₁ b₂ : β\n⊢ Adj (G □ H) (a, b₁) (a, b₂) ↔ Adj H b₁ b₂"],"goalsAfter":[],"content":"simp only [boxProd_adj, SimpleGraph.irrefl, false_and, and_true, false_or]"},{"tailPos":2630,"headPos":2628,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9451\nG : SimpleGraph α\nH : SimpleGraph β\na : α\nb₁ b₂ : β\n⊢ Adj (G □ H) (a, b₁) (a, b₂) ↔ Adj H b₁ b₂"],"goalsAfter":[],"content":"by"},{"tailPos":2707,"headPos":2628,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9451\nG : SimpleGraph α\nH : SimpleGraph β\na : α\nb₁ b₂ : β\n⊢ Adj (G □ H) (a, b₁) (a, b₂) ↔ Adj H b₁ b₂"],"goalsAfter":[],"content":"by\n  simp only [boxProd_adj, SimpleGraph.irrefl, false_and, and_true, false_or]"},{"tailPos":2939,"headPos":2923,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9830\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\n⊢ neighborSet (G □ H) x = neighborSet G x.fst ×ˢ {x.snd} ∪ {x.fst} ×ˢ neighborSet H x.snd"],"goalsAfter":["case h.mk\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.9830\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\na' : α\nb' : β\n⊢ (a', b') ∈ neighborSet (G □ H) x ↔ (a', b') ∈ neighborSet G x.fst ×ˢ {x.snd} ∪ {x.fst} ×ˢ neighborSet H x.snd"],"content":"ext ⟨a', b'⟩"},{"tailPos":3034,"headPos":2942,"goalsBefore":["case h.mk\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.9830\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\na' : α\nb' : β\n⊢ (a', b') ∈ neighborSet (G □ H) x ↔ (a', b') ∈ neighborSet G x.fst ×ˢ {x.snd} ∪ {x.fst} ×ˢ neighborSet H x.snd"],"goalsAfter":["case h.mk\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.9830\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\na' : α\nb' : β\n⊢ Adj G x.fst a' ∧ x.snd = b' ∨ Adj H x.snd b' ∧ x.fst = a' ↔ Adj G x.fst a' ∧ b' = x.snd ∨ a' = x.fst ∧ Adj H x.snd b'"],"content":"simp only [mem_neighborSet, Set.mem_union, boxProd_adj, Set.mem_prod, Set.mem_singleton_iff]"},{"tailPos":3066,"headPos":3037,"goalsBefore":["case h.mk\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.9830\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\na' : α\nb' : β\n⊢ Adj G x.fst a' ∧ x.snd = b' ∨ Adj H x.snd b' ∧ x.fst = a' ↔ Adj G x.fst a' ∧ b' = x.snd ∨ a' = x.fst ∧ Adj H x.snd b'"],"goalsAfter":[],"content":"simp only [eq_comm, and_comm]"},{"tailPos":3066,"headPos":2923,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9830\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\n⊢ neighborSet (G □ H) x = neighborSet G x.fst ×ˢ {x.snd} ∪ {x.fst} ×ˢ neighborSet H x.snd"],"goalsAfter":[],"content":"ext ⟨a', b'⟩\n  simp only [mem_neighborSet, Set.mem_union, boxProd_adj, Set.mem_prod, Set.mem_singleton_iff]\n  simp only [eq_comm, and_comm]"},{"tailPos":2920,"headPos":2918,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9830\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\n⊢ neighborSet (G □ H) x = neighborSet G x.fst ×ˢ {x.snd} ∪ {x.fst} ×ˢ neighborSet H x.snd"],"goalsAfter":[],"content":"by"},{"tailPos":3066,"headPos":2918,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.9830\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\n⊢ neighborSet (G □ H) x = neighborSet G x.fst ×ˢ {x.snd} ∪ {x.fst} ×ˢ neighborSet H x.snd"],"goalsAfter":[],"content":"by\n  ext ⟨a', b'⟩\n  simp only [mem_neighborSet, Set.mem_union, boxProd_adj, Set.mem_prod, Set.mem_singleton_iff]\n  simp only [eq_comm, and_comm]"},{"tailPos":3764,"headPos":3636,"goalsBefore":["α : Type ?u.11237\nβ : Type ?u.11240\nγ : Type ?u.11243\nG : SimpleGraph α\nH : SimpleGraph β\nI : SimpleGraph γ\nx y : (α × β) × γ\n⊢ Adj (G □ (H □ I)) (↑(Equiv.prodAssoc α β γ) x) (↑(Equiv.prodAssoc α β γ) y) ↔ Adj (G □ H □ I) x y"],"goalsAfter":["α : Type ?u.11237\nβ : Type ?u.11240\nγ : Type ?u.11243\nG : SimpleGraph α\nH : SimpleGraph β\nI : SimpleGraph γ\nx y : (α × β) × γ\n⊢ Adj G x.fst.fst y.fst.fst ∧ x.fst.snd = y.fst.snd ∧ x.snd = y.snd ∨\n      Adj H x.fst.snd y.fst.snd ∧ x.snd = y.snd ∧ x.fst.fst = y.fst.fst ∨\n        Adj I x.snd y.snd ∧ x.fst.snd = y.fst.snd ∧ x.fst.fst = y.fst.fst ↔\n    Adj G x.fst.fst y.fst.fst ∧ x.fst.snd = y.fst.snd ∧ x.snd = y.snd ∨\n      Adj H x.fst.snd y.fst.snd ∧ x.fst.fst = y.fst.fst ∧ x.snd = y.snd ∨\n        Adj I x.snd y.snd ∧ x.fst.fst = y.fst.fst ∧ x.fst.snd = y.fst.snd"],"content":"simp only [boxProd_adj, Equiv.prodAssoc_apply, or_and_right, or_assoc, Prod.ext_iff,\n      and_assoc, @and_comm (x.fst.fst = _)]"},{"tailPos":3765,"headPos":3764,"goalsBefore":["α : Type ?u.11237\nβ : Type ?u.11240\nγ : Type ?u.11243\nG : SimpleGraph α\nH : SimpleGraph β\nI : SimpleGraph γ\nx y : (α × β) × γ\n⊢ Adj G x.fst.fst y.fst.fst ∧ x.fst.snd = y.fst.snd ∧ x.snd = y.snd ∨\n      Adj H x.fst.snd y.fst.snd ∧ x.snd = y.snd ∧ x.fst.fst = y.fst.fst ∨\n        Adj I x.snd y.snd ∧ x.fst.snd = y.fst.snd ∧ x.fst.fst = y.fst.fst ↔\n    Adj G x.fst.fst y.fst.fst ∧ x.fst.snd = y.fst.snd ∧ x.snd = y.snd ∨\n      Adj H x.fst.snd y.fst.snd ∧ x.fst.fst = y.fst.fst ∧ x.snd = y.snd ∨\n        Adj I x.snd y.snd ∧ x.fst.fst = y.fst.fst ∧ x.fst.snd = y.fst.snd"],"goalsAfter":["α : Type ?u.11237\nβ : Type ?u.11240\nγ : Type ?u.11243\nG : SimpleGraph α\nH : SimpleGraph β\nI : SimpleGraph γ\nx y : (α × β) × γ\n⊢ Adj G x.fst.fst y.fst.fst ∧ x.fst.snd = y.fst.snd ∧ x.snd = y.snd ∨\n      Adj H x.fst.snd y.fst.snd ∧ x.snd = y.snd ∧ x.fst.fst = y.fst.fst ∨\n        Adj I x.snd y.snd ∧ x.fst.snd = y.fst.snd ∧ x.fst.fst = y.fst.fst ↔\n    Adj G x.fst.fst y.fst.fst ∧ x.fst.snd = y.fst.snd ∧ x.snd = y.snd ∨\n      Adj H x.fst.snd y.fst.snd ∧ x.fst.fst = y.fst.fst ∧ x.snd = y.snd ∨\n        Adj I x.snd y.snd ∧ x.fst.fst = y.fst.fst ∧ x.fst.snd = y.fst.snd"],"content":";"},{"tailPos":3771,"headPos":3766,"goalsBefore":["α : Type ?u.11237\nβ : Type ?u.11240\nγ : Type ?u.11243\nG : SimpleGraph α\nH : SimpleGraph β\nI : SimpleGraph γ\nx y : (α × β) × γ\n⊢ Adj G x.fst.fst y.fst.fst ∧ x.fst.snd = y.fst.snd ∧ x.snd = y.snd ∨\n      Adj H x.fst.snd y.fst.snd ∧ x.snd = y.snd ∧ x.fst.fst = y.fst.fst ∨\n        Adj I x.snd y.snd ∧ x.fst.snd = y.fst.snd ∧ x.fst.fst = y.fst.fst ↔\n    Adj G x.fst.fst y.fst.fst ∧ x.fst.snd = y.fst.snd ∧ x.snd = y.snd ∨\n      Adj H x.fst.snd y.fst.snd ∧ x.fst.fst = y.fst.fst ∧ x.snd = y.snd ∨\n        Adj I x.snd y.snd ∧ x.fst.fst = y.fst.fst ∧ x.fst.snd = y.fst.snd"],"goalsAfter":[],"content":"tauto"},{"tailPos":3771,"headPos":3636,"goalsBefore":["α : Type ?u.11237\nβ : Type ?u.11240\nγ : Type ?u.11243\nG : SimpleGraph α\nH : SimpleGraph β\nI : SimpleGraph γ\nx y : (α × β) × γ\n⊢ Adj (G □ (H □ I)) (↑(Equiv.prodAssoc α β γ) x) (↑(Equiv.prodAssoc α β γ) y) ↔ Adj (G □ H □ I) x y"],"goalsAfter":[],"content":"simp only [boxProd_adj, Equiv.prodAssoc_apply, or_and_right, or_assoc, Prod.ext_iff,\n      and_assoc, @and_comm (x.fst.fst = _)]; tauto"},{"tailPos":3631,"headPos":3629,"goalsBefore":["α : Type ?u.11237\nβ : Type ?u.11240\nγ : Type ?u.11243\nG : SimpleGraph α\nH : SimpleGraph β\nI : SimpleGraph γ\nx y : (α × β) × γ\n⊢ Adj (G □ (H □ I)) (↑(Equiv.prodAssoc α β γ) x) (↑(Equiv.prodAssoc α β γ) y) ↔ Adj (G □ H □ I) x y"],"goalsAfter":[],"content":"by"},{"tailPos":3771,"headPos":3629,"goalsBefore":["α : Type ?u.11237\nβ : Type ?u.11240\nγ : Type ?u.11243\nG : SimpleGraph α\nH : SimpleGraph β\nI : SimpleGraph γ\nx y : (α × β) × γ\n⊢ Adj (G □ (H □ I)) (↑(Equiv.prodAssoc α β γ) x) (↑(Equiv.prodAssoc α β γ) y) ↔ Adj (G □ H □ I) x y"],"goalsAfter":[],"content":"by\n    simp only [boxProd_adj, Equiv.prodAssoc_apply, or_and_right, or_assoc, Prod.ext_iff,\n      and_assoc, @and_comm (x.fst.fst = _)]; tauto"},{"tailPos":6052,"headPos":6035,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdLeft (Walk.boxProdLeft H b (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) (cons' x y z h w)) = cons' x y z h w"],"content":"Walk.boxProdLeft,"},{"tailPos":6062,"headPos":6053,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdLeft\n      (cons (_ : Adj (G □ H) (↑(Embedding.toHom (boxProdLeft G H b)) x) (↑(Embedding.toHom (boxProdLeft G H b)) y))\n        (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)) =\n    cons' x y z h w"],"content":"map_cons,"},{"tailPos":6077,"headPos":6063,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdLeft\n      (cons (_ : Adj (G □ H) (↑(Embedding.toHom (boxProdLeft G H b)) x) (↑(Embedding.toHom (boxProdLeft G H b)) y))\n        (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)) =\n    cons' x y z h w"],"goalsAfter":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ (Or.by_cases (_ : Adj (G □ H) (↑(Embedding.toHom (boxProdLeft G H b)) x) (↑(Embedding.toHom (boxProdLeft G H b)) y))\n      (fun hG =>\n        cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst)\n          (ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)))\n      fun hH =>\n      (_ : (↑(Embedding.toHom (boxProdLeft G H b)) y).fst = (x, b).fst) ▸\n        ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)) =\n    cons' x y z h w"],"content":"ofBoxProdLeft,"},{"tailPos":6090,"headPos":6078,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ (Or.by_cases (_ : Adj (G □ H) (↑(Embedding.toHom (boxProdLeft G H b)) x) (↑(Embedding.toHom (boxProdLeft G H b)) y))\n      (fun hG =>\n        cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst)\n          (ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)))\n      fun hH =>\n      (_ : (↑(Embedding.toHom (boxProdLeft G H b)) y).fst = (x, b).fst) ▸\n        ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)) =\n    cons' x y z h w"],"goalsAfter":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ (if hp :\n        Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n          (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd then\n      cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst)\n        (ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w))\n    else\n      (_ : (↑(Embedding.toHom (boxProdLeft G H b)) y).fst = (x, b).fst) ▸\n        ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)) =\n    cons' x y z h w"],"content":"Or.by_cases,"},{"tailPos":6099,"headPos":6091,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ (if hp :\n        Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n          (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd then\n      cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst)\n        (ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w))\n    else\n      (_ : (↑(Embedding.toHom (boxProdLeft G H b)) y).fst = (x, b).fst) ▸\n        ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)) =\n    cons' x y z h w"],"goalsAfter":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst)\n      (ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)) =\n    cons' x y z h w","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd"],"content":"dif_pos,"},{"tailPos":6120,"headPos":6100,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst)\n      (ofBoxProdLeft (Walk.map (Embedding.toHom (boxProdLeft G H b)) w)) =\n    cons' x y z h w","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd"],"goalsAfter":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst) (ofBoxProdLeft (Walk.boxProdLeft H b w)) =\n    cons' x y z h w","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd"],"content":"← Walk.boxProdLeft"},{"tailPos":6121,"headPos":6120,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst) (ofBoxProdLeft (Walk.boxProdLeft H b w)) =\n    cons' x y z h w","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd"],"goalsAfter":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst) (ofBoxProdLeft (Walk.boxProdLeft H b w)) =\n    cons' x y z h w","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd"],"content":"]"},{"tailPos":6121,"headPos":6031,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdLeft (Walk.boxProdLeft H b (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst) (ofBoxProdLeft (Walk.boxProdLeft H b w)) =\n    cons' x y z h w","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd"],"content":"rw [Walk.boxProdLeft, map_cons, ofBoxProdLeft, Or.by_cases, dif_pos, ← Walk.boxProdLeft]"},{"tailPos":6158,"headPos":6126,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst) (ofBoxProdLeft (Walk.boxProdLeft H b w)) =\n    cons' x y z h w","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd"],"goalsAfter":["case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd"],"content":"simp [ofBoxProdLeft_boxProdLeft]"},{"tailPos":6181,"headPos":6163,"goalsBefore":["case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd","case hc\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (x, b).fst (↑(Embedding.toHom (boxProdLeft G H b)) y).fst ∧\n    (x, b).snd = (↑(Embedding.toHom (boxProdLeft G H b)) y).snd"],"goalsAfter":[],"content":"exact ⟨h, rfl⟩"},{"tailPos":6181,"headPos":6031,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdLeft (Walk.boxProdLeft H b (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":[],"content":"rw [Walk.boxProdLeft, map_cons, ofBoxProdLeft, Or.by_cases, dif_pos, ← Walk.boxProdLeft]\n    simp [ofBoxProdLeft_boxProdLeft]\n    exact ⟨h, rfl⟩"},{"tailPos":6026,"headPos":6024,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdLeft (Walk.boxProdLeft H b (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":[],"content":"by"},{"tailPos":6181,"headPos":6024,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.57688\nG : SimpleGraph α\nH : SimpleGraph β\nb : β\ninst✝¹ : DecidableEq β\ninst✝ : DecidableRel G.Adj\na₁ a₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdLeft (Walk.boxProdLeft H b (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":[],"content":"by\n    rw [Walk.boxProdLeft, map_cons, ofBoxProdLeft, Or.by_cases, dif_pos, ← Walk.boxProdLeft]\n    simp [ofBoxProdLeft_boxProdLeft]\n    exact ⟨h, rfl⟩"},{"tailPos":6521,"headPos":6503,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdRight (Walk.boxProdRight G a (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) (cons' x y z h w)) = cons' x y z h w"],"content":"Walk.boxProdRight,"},{"tailPos":6531,"headPos":6522,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdRight\n      (cons (_ : Adj (G □ G) (↑(Embedding.toHom (boxProdRight G G a)) x) (↑(Embedding.toHom (boxProdRight G G a)) y))\n        (Walk.map (Embedding.toHom (boxProdRight G G a)) w)) =\n    cons' x y z h w"],"content":"map_cons,"},{"tailPos":6547,"headPos":6532,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdRight\n      (cons (_ : Adj (G □ G) (↑(Embedding.toHom (boxProdRight G G a)) x) (↑(Embedding.toHom (boxProdRight G G a)) y))\n        (Walk.map (Embedding.toHom (boxProdRight G G a)) w)) =\n    cons' x y z h w"],"goalsAfter":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ (Or.by_cases\n      (_ :\n        Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n            (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst ∨\n          Adj G (a, x).fst (↑(Embedding.toHom (boxProdRight G G a)) y).fst ∧\n            (a, x).snd = (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n      (fun hH =>\n        cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n          (ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w)))\n      fun hG =>\n      (_ : (↑(Embedding.toHom (boxProdRight G G a)) y).snd = (a, x).snd) ▸\n        ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w)) =\n    cons' x y z h w"],"content":"ofBoxProdRight,"},{"tailPos":6560,"headPos":6548,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ (Or.by_cases\n      (_ :\n        Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n            (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst ∨\n          Adj G (a, x).fst (↑(Embedding.toHom (boxProdRight G G a)) y).fst ∧\n            (a, x).snd = (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n      (fun hH =>\n        cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n          (ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w)))\n      fun hG =>\n      (_ : (↑(Embedding.toHom (boxProdRight G G a)) y).snd = (a, x).snd) ▸\n        ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w)) =\n    cons' x y z h w"],"goalsAfter":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ (if hp :\n        Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n          (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst then\n      cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n        (ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w))\n    else\n      (_ : (↑(Embedding.toHom (boxProdRight G G a)) y).snd = (a, x).snd) ▸\n        ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w)) =\n    cons' x y z h w"],"content":"Or.by_cases,"},{"tailPos":6569,"headPos":6561,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ (if hp :\n        Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n          (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst then\n      cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n        (ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w))\n    else\n      (_ : (↑(Embedding.toHom (boxProdRight G G a)) y).snd = (a, x).snd) ▸\n        ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w)) =\n    cons' x y z h w"],"goalsAfter":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n      (ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w)) =\n    cons' x y z h w","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst"],"content":"dif_pos,"},{"tailPos":6597,"headPos":6570,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n      (ofBoxProdRight (Walk.map (Embedding.toHom (boxProdRight G G a)) w)) =\n    cons' x y z h w","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst"],"goalsAfter":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n      (ofBoxProdRight (Walk.boxProdRight G a w)) =\n    cons' x y z h w","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst"],"content":"←\n      Walk.boxProdRight"},{"tailPos":6598,"headPos":6597,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n      (ofBoxProdRight (Walk.boxProdRight G a w)) =\n    cons' x y z h w","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst"],"goalsAfter":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n      (ofBoxProdRight (Walk.boxProdRight G a w)) =\n    cons' x y z h w","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst"],"content":"]"},{"tailPos":6598,"headPos":6499,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdRight (Walk.boxProdRight G a (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n      (ofBoxProdRight (Walk.boxProdRight G a w)) =\n    cons' x y z h w","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst"],"content":"rw [Walk.boxProdRight, map_cons, ofBoxProdRight, Or.by_cases, dif_pos, ←\n      Walk.boxProdRight]"},{"tailPos":6636,"headPos":6603,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ cons (_ : Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd)\n      (ofBoxProdRight (Walk.boxProdRight G a w)) =\n    cons' x y z h w","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst"],"goalsAfter":["case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst"],"content":"simp [ofBoxProdLeft_boxProdRight]"},{"tailPos":6658,"headPos":6641,"goalsBefore":["case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst","case hc\nα : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ Adj G (a, x).snd (↑(Embedding.toHom (boxProdRight G G a)) y).snd ∧\n    (a, x).fst = (↑(Embedding.toHom (boxProdRight G G a)) y).fst"],"goalsAfter":[],"content":"exact⟨h, rfl⟩"},{"tailPos":6658,"headPos":6499,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdRight (Walk.boxProdRight G a (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":[],"content":"rw [Walk.boxProdRight, map_cons, ofBoxProdRight, Or.by_cases, dif_pos, ←\n      Walk.boxProdRight]\n    simp [ofBoxProdLeft_boxProdRight]\n    exact⟨h, rfl⟩"},{"tailPos":6494,"headPos":6492,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdRight (Walk.boxProdRight G a (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":[],"content":"by"},{"tailPos":6658,"headPos":6492,"goalsBefore":["α : Type u_1\nβ : Type ?u.70148\nγ : Type ?u.70151\nG : SimpleGraph α\nH : SimpleGraph β\na : α\ninst✝¹ : DecidableEq α\ninst✝ : DecidableRel G.Adj\nb₁ b₂ x z y : α\nh : Adj G x y\nw : Walk G y z\n⊢ ofBoxProdRight (Walk.boxProdRight G a (cons' x y z h w)) = cons' x y z h w"],"goalsAfter":[],"content":"by\n    rw [Walk.boxProdRight, map_cons, ofBoxProdRight, Or.by_cases, dif_pos, ←\n      Walk.boxProdRight]\n    simp [ofBoxProdLeft_boxProdRight]\n    exact⟨h, rfl⟩"},{"tailPos":6917,"headPos":6907,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\n⊢ Preconnected (G □ H)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\n⊢ Reachable (G □ H) x y"],"content":"rintro x y"},{"tailPos":6951,"headPos":6920,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\n⊢ Reachable (G □ H) x y"],"goalsAfter":["case intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\n⊢ Reachable (G □ H) x y"],"content":"obtain ⟨w₁⟩ := hG x.1 y.1"},{"tailPos":6985,"headPos":6954,"goalsBefore":["case intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\n⊢ Reachable (G □ H) x y"],"goalsAfter":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) x y"],"content":"obtain ⟨w₂⟩ := hH x.2 y.2"},{"tailPos":7015,"headPos":6992,"goalsBefore":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) x y"],"goalsAfter":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) (x.fst, x.snd) y"],"content":"← @Prod.mk.eta _ _ x,"},{"tailPos":7038,"headPos":7016,"goalsBefore":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) (x.fst, x.snd) y"],"goalsAfter":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) (x.fst, x.snd) (y.fst, y.snd)"],"content":"← @Prod.mk.eta _ _ y"},{"tailPos":7039,"headPos":7038,"goalsBefore":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) (x.fst, x.snd) (y.fst, y.snd)"],"goalsAfter":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) (x.fst, x.snd) (y.fst, y.snd)"],"content":"]"},{"tailPos":7039,"headPos":6988,"goalsBefore":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) x y"],"goalsAfter":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) (x.fst, x.snd) (y.fst, y.snd)"],"content":"rw [← @Prod.mk.eta _ _ x, ← @Prod.mk.eta _ _ y]"},{"tailPos":7107,"headPos":7042,"goalsBefore":["case intro.intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\nx y : α × β\nw₁ : Walk G x.fst y.fst\nw₂ : Walk H x.snd y.snd\n⊢ Reachable (G □ H) (x.fst, x.snd) (y.fst, y.snd)"],"goalsAfter":[],"content":"exact ⟨(w₁.boxProdLeft _ _).append (w₂.boxProdRight _ _)⟩"},{"tailPos":7107,"headPos":6907,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\n⊢ Preconnected (G □ H)"],"goalsAfter":[],"content":"rintro x y\n  obtain ⟨w₁⟩ := hG x.1 y.1\n  obtain ⟨w₂⟩ := hH x.2 y.2\n  rw [← @Prod.mk.eta _ _ x, ← @Prod.mk.eta _ _ y]\n  exact ⟨(w₁.boxProdLeft _ _).append (w₂.boxProdRight _ _)⟩"},{"tailPos":6904,"headPos":6902,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\n⊢ Preconnected (G □ H)"],"goalsAfter":[],"content":"by"},{"tailPos":7107,"headPos":6902,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.81755\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Preconnected G\nhH : Preconnected H\n⊢ Preconnected (G □ H)"],"goalsAfter":[],"content":"by\n  rintro x y\n  obtain ⟨w₁⟩ := hG x.1 y.1\n  obtain ⟨w₂⟩ := hH x.2 y.2\n  rw [← @Prod.mk.eta _ _ x, ← @Prod.mk.eta _ _ y]\n  exact ⟨(w₁.boxProdLeft _ _).append (w₂.boxProdRight _ _)⟩"},{"tailPos":7329,"headPos":7313,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.82005\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty β\nh : Preconnected (G □ H)\n⊢ Preconnected G"],"goalsAfter":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.82005\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty β\nh : Preconnected (G □ H)\na₁ a₂ : α\n⊢ Reachable G a₁ a₂"],"content":"rintro a₁ a₂"},{"tailPos":7411,"headPos":7332,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.82005\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty β\nh : Preconnected (G □ H)\na₁ a₂ : α\n⊢ Reachable G a₁ a₂"],"goalsAfter":["case intro\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.82005\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty β\nh : Preconnected (G □ H)\na₁ a₂ : α\nw : Walk (G □ H) (a₁, Classical.arbitrary β) (a₂, Classical.arbitrary β)\n⊢ Reachable G a₁ a₂"],"content":"obtain ⟨w⟩ := h (a₁, Classical.arbitrary _) (a₂, Classical.arbitrary _)"},{"tailPos":7441,"headPos":7414,"goalsBefore":["case intro\nα : Type u_2\nβ : Type u_1\nγ : Type ?u.82005\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty β\nh : Preconnected (G □ H)\na₁ a₂ : α\nw : Walk (G □ H) (a₁, Classical.arbitrary β) (a₂, Classical.arbitrary β)\n⊢ Reachable G a₁ a₂"],"goalsAfter":[],"content":"exact ⟨w.ofBoxProdLeft⟩"},{"tailPos":7441,"headPos":7313,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.82005\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty β\nh : Preconnected (G □ H)\n⊢ Preconnected G"],"goalsAfter":[],"content":"rintro a₁ a₂\n  obtain ⟨w⟩ := h (a₁, Classical.arbitrary _) (a₂, Classical.arbitrary _)\n  exact ⟨w.ofBoxProdLeft⟩"},{"tailPos":7441,"headPos":7301,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.82005\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty β\nh : Preconnected (G □ H)\n⊢ Preconnected G"],"goalsAfter":[],"content":"classical\n  rintro a₁ a₂\n  obtain ⟨w⟩ := h (a₁, Classical.arbitrary _) (a₂, Classical.arbitrary _)\n  exact ⟨w.ofBoxProdLeft⟩"},{"tailPos":7298,"headPos":7296,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.82005\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty β\nh : Preconnected (G □ H)\n⊢ Preconnected G"],"goalsAfter":[],"content":"by"},{"tailPos":7441,"headPos":7296,"goalsBefore":["α : Type u_2\nβ : Type u_1\nγ : Type ?u.82005\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty β\nh : Preconnected (G □ H)\n⊢ Preconnected G"],"goalsAfter":[],"content":"by\n  classical\n  rintro a₁ a₂\n  obtain ⟨w⟩ := h (a₁, Classical.arbitrary _) (a₂, Classical.arbitrary _)\n  exact ⟨w.ofBoxProdLeft⟩"},{"tailPos":7678,"headPos":7662,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82447\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty α\nh : Preconnected (G □ H)\n⊢ Preconnected H"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82447\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty α\nh : Preconnected (G □ H)\nb₁ b₂ : β\n⊢ Reachable H b₁ b₂"],"content":"rintro b₁ b₂"},{"tailPos":7760,"headPos":7681,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82447\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty α\nh : Preconnected (G □ H)\nb₁ b₂ : β\n⊢ Reachable H b₁ b₂"],"goalsAfter":["case intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.82447\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty α\nh : Preconnected (G □ H)\nb₁ b₂ : β\nw : Walk (G □ H) (Classical.arbitrary α, b₁) (Classical.arbitrary α, b₂)\n⊢ Reachable H b₁ b₂"],"content":"obtain ⟨w⟩ := h (Classical.arbitrary _, b₁) (Classical.arbitrary _, b₂)"},{"tailPos":7791,"headPos":7763,"goalsBefore":["case intro\nα : Type u_1\nβ : Type u_2\nγ : Type ?u.82447\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty α\nh : Preconnected (G □ H)\nb₁ b₂ : β\nw : Walk (G □ H) (Classical.arbitrary α, b₁) (Classical.arbitrary α, b₂)\n⊢ Reachable H b₁ b₂"],"goalsAfter":[],"content":"exact ⟨w.ofBoxProdRight⟩"},{"tailPos":7791,"headPos":7662,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82447\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty α\nh : Preconnected (G □ H)\n⊢ Preconnected H"],"goalsAfter":[],"content":"rintro b₁ b₂\n  obtain ⟨w⟩ := h (Classical.arbitrary _, b₁) (Classical.arbitrary _, b₂)\n  exact ⟨w.ofBoxProdRight⟩"},{"tailPos":7791,"headPos":7650,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82447\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty α\nh : Preconnected (G □ H)\n⊢ Preconnected H"],"goalsAfter":[],"content":"classical\n  rintro b₁ b₂\n  obtain ⟨w⟩ := h (Classical.arbitrary _, b₁) (Classical.arbitrary _, b₂)\n  exact ⟨w.ofBoxProdRight⟩"},{"tailPos":7647,"headPos":7645,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82447\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty α\nh : Preconnected (G □ H)\n⊢ Preconnected H"],"goalsAfter":[],"content":"by"},{"tailPos":7791,"headPos":7645,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82447\nG : SimpleGraph α\nH : SimpleGraph β\ninst✝ : Nonempty α\nh : Preconnected (G □ H)\n⊢ Preconnected H"],"goalsAfter":[],"content":"by\n  classical\n  rintro b₁ b₂\n  obtain ⟨w⟩ := h (Classical.arbitrary _, b₁) (Classical.arbitrary _, b₂)\n  exact ⟨w.ofBoxProdRight⟩"},{"tailPos":8008,"headPos":7988,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82889\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Connected G\nhH : Connected H\n⊢ Connected (G □ H)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82889\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Connected G\nhH : Connected H\nthis : Nonempty α\n⊢ Connected (G □ H)"],"content":"haveI := hG.nonempty"},{"tailPos":8031,"headPos":8011,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82889\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Connected G\nhH : Connected H\nthis : Nonempty α\n⊢ Connected (G □ H)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82889\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Connected G\nhH : Connected H\nthis✝ : Nonempty α\nthis : Nonempty β\n⊢ Connected (G □ H)"],"content":"haveI := hH.nonempty"},{"tailPos":8085,"headPos":8034,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82889\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Connected G\nhH : Connected H\nthis✝ : Nonempty α\nthis : Nonempty β\n⊢ Connected (G □ H)"],"goalsAfter":[],"content":"exact ⟨hG.preconnected.boxProd hH.preconnected⟩"},{"tailPos":8085,"headPos":7988,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82889\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Connected G\nhH : Connected H\n⊢ Connected (G □ H)"],"goalsAfter":[],"content":"haveI := hG.nonempty\n  haveI := hH.nonempty\n  exact ⟨hG.preconnected.boxProd hH.preconnected⟩"},{"tailPos":7985,"headPos":7983,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82889\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Connected G\nhH : Connected H\n⊢ Connected (G □ H)"],"goalsAfter":[],"content":"by"},{"tailPos":8085,"headPos":7983,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.82889\nG : SimpleGraph α\nH : SimpleGraph β\nhG : Connected G\nhH : Connected H\n⊢ Connected (G □ H)"],"goalsAfter":[],"content":"by\n  haveI := hG.nonempty\n  haveI := hH.nonempty\n  exact ⟨hG.preconnected.boxProd hH.preconnected⟩"},{"tailPos":8285,"headPos":8246,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83059\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\n⊢ Connected G"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83059\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\nthis : Nonempty α\n⊢ Connected G"],"content":"haveI := (nonempty_prod.1 h.nonempty).1"},{"tailPos":8327,"headPos":8288,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83059\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\nthis : Nonempty α\n⊢ Connected G"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83059\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\nthis✝ : Nonempty α\nthis : Nonempty β\n⊢ Connected G"],"content":"haveI := (nonempty_prod.1 h.nonempty).2"},{"tailPos":8370,"headPos":8330,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83059\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\nthis✝ : Nonempty α\nthis : Nonempty β\n⊢ Connected G"],"goalsAfter":[],"content":"exact ⟨h.preconnected.ofBoxProdLeft⟩"},{"tailPos":8370,"headPos":8246,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83059\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\n⊢ Connected G"],"goalsAfter":[],"content":"haveI := (nonempty_prod.1 h.nonempty).1\n  haveI := (nonempty_prod.1 h.nonempty).2\n  exact ⟨h.preconnected.ofBoxProdLeft⟩"},{"tailPos":8243,"headPos":8241,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83059\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\n⊢ Connected G"],"goalsAfter":[],"content":"by"},{"tailPos":8370,"headPos":8241,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83059\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\n⊢ Connected G"],"goalsAfter":[],"content":"by\n  haveI := (nonempty_prod.1 h.nonempty).1\n  haveI := (nonempty_prod.1 h.nonempty).2\n  exact ⟨h.preconnected.ofBoxProdLeft⟩"},{"tailPos":8585,"headPos":8546,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83218\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\n⊢ Connected H"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83218\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\nthis : Nonempty α\n⊢ Connected H"],"content":"haveI := (nonempty_prod.1 h.nonempty).1"},{"tailPos":8627,"headPos":8588,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83218\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\nthis : Nonempty α\n⊢ Connected H"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83218\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\nthis✝ : Nonempty α\nthis : Nonempty β\n⊢ Connected H"],"content":"haveI := (nonempty_prod.1 h.nonempty).2"},{"tailPos":8671,"headPos":8630,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83218\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\nthis✝ : Nonempty α\nthis : Nonempty β\n⊢ Connected H"],"goalsAfter":[],"content":"exact ⟨h.preconnected.ofBoxProdRight⟩"},{"tailPos":8671,"headPos":8546,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83218\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\n⊢ Connected H"],"goalsAfter":[],"content":"haveI := (nonempty_prod.1 h.nonempty).1\n  haveI := (nonempty_prod.1 h.nonempty).2\n  exact ⟨h.preconnected.ofBoxProdRight⟩"},{"tailPos":8543,"headPos":8541,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83218\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\n⊢ Connected H"],"goalsAfter":[],"content":"by"},{"tailPos":8671,"headPos":8541,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.83218\nG : SimpleGraph α\nH : SimpleGraph β\nh : Connected (G □ H)\n⊢ Connected H"],"goalsAfter":[],"content":"by\n  haveI := (nonempty_prod.1 h.nonempty).1\n  haveI := (nonempty_prod.1 h.nonempty).2\n  exact ⟨h.preconnected.ofBoxProdRight⟩"},{"tailPos":9411,"headPos":9402,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y ∈\n      Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n        (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)) ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y ∈\n      Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n        (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)) ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"content":"simp_rw ["},{"tailPos":9432,"headPos":9411,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y ∈\n      Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n        (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)) ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y ∈ neighborFinset G x.fst ×ˢ {x.snd} ∨ y ∈ {x.fst} ×ˢ neighborFinset H x.snd ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"content":"Finset.mem_disjUnion,"},{"tailPos":9452,"headPos":9433,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y ∈ neighborFinset G x.fst ×ˢ {x.snd} ∨ y ∈ {x.fst} ×ˢ neighborFinset H x.snd ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y.fst ∈ neighborFinset G x.fst ∧ y.snd ∈ {x.snd} ∨ y.fst ∈ {x.fst} ∧ y.snd ∈ neighborFinset H x.snd ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"content":"Finset.mem_product,"},{"tailPos":9474,"headPos":9453,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y.fst ∈ neighborFinset G x.fst ∧ y.snd ∈ {x.snd} ∨ y.fst ∈ {x.fst} ∧ y.snd ∈ neighborFinset H x.snd ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y.fst ∈ neighborFinset G x.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ y.snd ∈ neighborFinset H x.snd ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"content":"Finset.mem_singleton,"},{"tailPos":9494,"headPos":9475,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y.fst ∈ neighborFinset G x.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ y.snd ∈ neighborFinset H x.snd ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ Adj G x.fst y.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ Adj H x.snd y.snd ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"content":"mem_neighborFinset,"},{"tailPos":9519,"headPos":9503,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ Adj G x.fst y.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ Adj H x.snd y.snd ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ Adj G x.fst y.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ Adj H x.snd y.snd ↔ Adj (G □ H) x (↑(Equiv.refl (α × β)) y)"],"content":"mem_neighborSet,"},{"tailPos":9537,"headPos":9520,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ Adj G x.fst y.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ Adj H x.snd y.snd ↔ Adj (G □ H) x (↑(Equiv.refl (α × β)) y)"],"goalsAfter":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ Adj G x.fst y.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ Adj H x.snd y.snd ↔ Adj (G □ H) x y"],"content":"Equiv.refl_apply,"},{"tailPos":9549,"headPos":9538,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ Adj G x.fst y.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ Adj H x.snd y.snd ↔ Adj (G □ H) x y"],"goalsAfter":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ Adj G x.fst y.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ Adj H x.snd y.snd ↔\n    Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst"],"content":"simp only [boxProd_adj]"},{"tailPos":9550,"headPos":9402,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y ∈\n      Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n        (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)) ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ Adj G x.fst y.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ Adj H x.snd y.snd ↔\n    Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst"],"content":"simp_rw [Finset.mem_disjUnion, Finset.mem_product, Finset.mem_singleton, mem_neighborFinset,\n        mem_neighborSet, Equiv.refl_apply, boxProd_adj]"},{"tailPos":9586,"headPos":9557,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ Adj G x.fst y.fst ∧ y.snd = x.snd ∨ y.fst = x.fst ∧ Adj H x.snd y.snd ↔\n    Adj G x.fst y.fst ∧ x.snd = y.snd ∨ Adj H x.snd y.snd ∧ x.fst = y.fst"],"goalsAfter":[],"content":"simp only [eq_comm, and_comm]"},{"tailPos":9586,"headPos":9402,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y ∈\n      Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n        (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)) ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":[],"content":"simp_rw [Finset.mem_disjUnion, Finset.mem_product, Finset.mem_singleton, mem_neighborFinset,\n        mem_neighborSet, Equiv.refl_apply, boxProd_adj]\n      simp only [eq_comm, and_comm]"},{"tailPos":9395,"headPos":9393,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y ∈\n      Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n        (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)) ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":[],"content":"by"},{"tailPos":9586,"headPos":9393,"goalsBefore":["α : Type ?u.84084\nβ : Type ?u.84233\nγ : Type ?u.83523\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝¹ : Fintype ↑(neighborSet G x.fst)\ninst✝ : Fintype ↑(neighborSet H x.snd)\ny : α × β\n⊢ y ∈\n      Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n        (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)) ↔\n    ↑(Equiv.refl (α × β)) y ∈ neighborSet (G □ H) x"],"goalsAfter":[],"content":"by\n      simp_rw [Finset.mem_disjUnion, Finset.mem_product, Finset.mem_singleton, mem_neighborFinset,\n        mem_neighborSet, Equiv.refl_apply, boxProd_adj]\n      simp only [eq_comm, and_comm]"},{"tailPos":10179,"headPos":10096,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.86875\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ neighborFinset (G □ H) x =\n    Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n      (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.86875\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\nthis : Fintype ↑(neighborSet (G □ H) x) := boxProdFintypeNeighborSet x\n⊢ neighborFinset (G □ H) x =\n    Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n      (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))"],"content":"letI : Fintype ((G □ H).neighborSet x) := SimpleGraph.boxProdFintypeNeighborSet _"},{"tailPos":10231,"headPos":10182,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.86875\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\nthis : Fintype ↑(neighborSet (G □ H) x) := boxProdFintypeNeighborSet x\n⊢ neighborFinset (G □ H) x =\n    Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n      (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.86875\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\nthis : Fintype ↑(neighborSet (G □ H) x) := boxProdFintypeNeighborSet x\n⊢ neighborFinset (G □ H) x =\n    Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n      (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))"],"content":"convert_to (G □ H).neighborFinset x = _ using 2"},{"tailPos":10293,"headPos":10234,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.86875\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\nthis : Fintype ↑(neighborSet (G □ H) x) := boxProdFintypeNeighborSet x\n⊢ neighborFinset (G □ H) x =\n    Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n      (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))"],"goalsAfter":[],"content":"exact Eq.trans (Finset.map_map _ _ _) Finset.attach_map_val"},{"tailPos":10293,"headPos":10096,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.86875\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ neighborFinset (G □ H) x =\n    Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n      (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))"],"goalsAfter":[],"content":"letI : Fintype ((G □ H).neighborSet x) := SimpleGraph.boxProdFintypeNeighborSet _\n  convert_to (G □ H).neighborFinset x = _ using 2\n  exact Eq.trans (Finset.map_map _ _ _) Finset.attach_map_val"},{"tailPos":10036,"headPos":10034,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.86875\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ neighborFinset (G □ H) x =\n    Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n      (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))"],"goalsAfter":[],"content":"by"},{"tailPos":10293,"headPos":10034,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.86875\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ neighborFinset (G □ H) x =\n    Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n      (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))"],"goalsAfter":[],"content":"by\n  -- swap out the fintype instance for the canonical one\n  letI : Fintype ((G □ H).neighborSet x) := SimpleGraph.boxProdFintypeNeighborSet _\n  convert_to (G □ H).neighborFinset x = _ using 2\n  exact Eq.trans (Finset.map_map _ _ _) Finset.attach_map_val"},{"tailPos":10587,"headPos":10580,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ degree (G □ H) x = degree G x.fst + degree H x.snd"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset (G □ H) x) = degree G x.fst + degree H x.snd"],"content":"degree,"},{"tailPos":10595,"headPos":10588,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset (G □ H) x) = degree G x.fst + degree H x.snd"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset (G □ H) x) = Finset.card (neighborFinset G x.fst) + degree H x.snd"],"content":"degree,"},{"tailPos":10603,"headPos":10596,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset (G □ H) x) = Finset.card (neighborFinset G x.fst) + degree H x.snd"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset (G □ H) x) = Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"content":"degree,"},{"tailPos":10627,"headPos":10604,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset (G □ H) x) = Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card\n      (Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n        (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"content":"boxProd_neighborFinset,"},{"tailPos":10649,"headPos":10628,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card\n      (Finset.disjUnion (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd)\n        (_ : Disjoint (neighborFinset G x.fst ×ˢ {x.snd}) ({x.fst} ×ˢ neighborFinset H x.snd))) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst ×ˢ {x.snd}) + Finset.card ({x.fst} ×ˢ neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"content":"Finset.card_disjUnion"},{"tailPos":10650,"headPos":10649,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst ×ˢ {x.snd}) + Finset.card ({x.fst} ×ˢ neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst ×ˢ {x.snd}) + Finset.card ({x.fst} ×ˢ neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"content":"]"},{"tailPos":10650,"headPos":10576,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ degree (G □ H) x = degree G x.fst + degree H x.snd"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst ×ˢ {x.snd}) + Finset.card ({x.fst} ×ˢ neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"content":"rw [degree, degree, degree, boxProd_neighborFinset, Finset.card_disjUnion]"},{"tailPos":10662,"headPos":10653,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst ×ˢ {x.snd}) + Finset.card ({x.fst} ×ˢ neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst ×ˢ {x.snd}) + Finset.card ({x.fst} ×ˢ neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"content":"simp_rw ["},{"tailPos":10682,"headPos":10662,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst ×ˢ {x.snd}) + Finset.card ({x.fst} ×ˢ neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst) * Finset.card {x.snd} +\n      Finset.card {x.fst} * Finset.card (neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"content":"Finset.card_product,"},{"tailPos":10705,"headPos":10683,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst) * Finset.card {x.snd} +\n      Finset.card {x.fst} * Finset.card (neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst) * 1 + 1 * Finset.card (neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"content":"Finset.card_singleton,"},{"tailPos":10714,"headPos":10706,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst) * 1 + 1 * Finset.card (neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"goalsAfter":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst) + 1 * Finset.card (neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"content":"mul_one,"},{"tailPos":10722,"headPos":10715,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst) + 1 * Finset.card (neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"goalsAfter":[],"content":"simp only [one_mul]"},{"tailPos":10723,"headPos":10653,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ Finset.card (neighborFinset G x.fst ×ˢ {x.snd}) + Finset.card ({x.fst} ×ˢ neighborFinset H x.snd) =\n    Finset.card (neighborFinset G x.fst) + Finset.card (neighborFinset H x.snd)"],"goalsAfter":[],"content":"simp_rw [Finset.card_product, Finset.card_singleton, mul_one, one_mul]"},{"tailPos":10723,"headPos":10576,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ degree (G □ H) x = degree G x.fst + degree H x.snd"],"goalsAfter":[],"content":"rw [degree, degree, degree, boxProd_neighborFinset, Finset.card_disjUnion]\n  simp_rw [Finset.card_product, Finset.card_singleton, mul_one, one_mul]"},{"tailPos":10573,"headPos":10571,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ degree (G □ H) x = degree G x.fst + degree H x.snd"],"goalsAfter":[],"content":"by"},{"tailPos":10723,"headPos":10571,"goalsBefore":["α : Type u_1\nβ : Type u_2\nγ : Type ?u.89124\nG : SimpleGraph α\nH : SimpleGraph β\nx : α × β\ninst✝² : Fintype ↑(neighborSet G x.fst)\ninst✝¹ : Fintype ↑(neighborSet H x.snd)\ninst✝ : Fintype ↑(neighborSet (G □ H) x)\n⊢ degree (G □ H) x = degree G x.fst + degree H x.snd"],"goalsAfter":[],"content":"by\n  rw [degree, degree, degree, boxProd_neighborFinset, Finset.card_disjUnion]\n  simp_rw [Finset.card_product, Finset.card_singleton, mul_one, one_mul]"}]